{"/home/travis/build/npmtest/node-npmtest-baobab/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_baobab */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-baobab/lib.npmtest_baobab.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/lib.npmtest_baobab.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_baobab */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_baobab = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_baobab = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-baobab/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-baobab && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_baobab */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_baobab","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_baobab.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_baobab.rollup.js'] =","            local.assetsDict['/assets.npmtest_baobab.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_baobab.__dirname + '/lib.npmtest_baobab.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/baobab.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/baobab.js","s":{"1":1,"2":1,"3":1,"4":1,"5":10,"6":10,"7":10,"8":10,"9":10,"10":10,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":5,"54":1,"55":0,"56":0,"57":1,"58":1,"59":0,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":0,"89":0,"90":0,"91":0,"92":1,"93":1,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":1,"265":1,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"281":1},"b":{"1":[10,10],"2":[10,0],"3":[1,0],"4":[0,1],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[1,0],"11":[1,1],"12":[0,0],"13":[0,0],"14":[0,5],"15":[5,5],"16":[0,0],"17":[0,1],"18":[1,0],"19":[1,1],"20":[1,0],"21":[1,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":5,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":20},"end":{"line":13,"column":32}}},"2":{"name":"defineProperties","line":13,"loc":{"start":{"line":13,"column":34},"end":{"line":13,"column":75}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":358},"end":{"line":13,"column":406}}},"4":{"name":"get","line":15,"loc":{"start":{"line":15,"column":11},"end":{"line":15,"column":39}}},"5":{"name":"_interopRequireWildcard","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}}},"6":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"7":{"name":"_classCallCheck","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}}},"8":{"name":"_inherits","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":41}}},"9":{"name":"hashPath","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":24}}},"10":{"name":"(anonymous_10)","line":100,"loc":{"start":{"line":100,"column":24},"end":{"line":100,"column":40}}},"11":{"name":"(anonymous_11)","line":123,"loc":{"start":{"line":123,"column":14},"end":{"line":123,"column":34}}},"12":{"name":"Baobab","line":126,"loc":{"start":{"line":126,"column":2},"end":{"line":126,"column":37}}},"13":{"name":"bootstrap","line":166,"loc":{"start":{"line":166,"column":20},"end":{"line":166,"column":45}}},"14":{"name":"(anonymous_14)","line":167,"loc":{"start":{"line":167,"column":20},"end":{"line":167,"column":32}}},"15":{"name":"_refreshMonkeys","line":202,"loc":{"start":{"line":202,"column":11},"end":{"line":202,"column":59}}},"16":{"name":"clean","line":205,"loc":{"start":{"line":205,"column":18},"end":{"line":205,"column":39}}},"17":{"name":"walk","line":226,"loc":{"start":{"line":226,"column":17},"end":{"line":226,"column":37}}},"18":{"name":"validate","line":275,"loc":{"start":{"line":275,"column":11},"end":{"line":275,"column":44}}},"19":{"name":"select","line":315,"loc":{"start":{"line":315,"column":11},"end":{"line":315,"column":33}}},"20":{"name":"update","line":359,"loc":{"start":{"line":359,"column":11},"end":{"line":359,"column":44}}},"21":{"name":"(anonymous_21)","line":443,"loc":{"start":{"line":443,"column":51},"end":{"line":443,"column":63}}},"22":{"name":"commit","line":458,"loc":{"start":{"line":458,"column":11},"end":{"line":458,"column":29}}},"23":{"name":"(anonymous_23)","line":466,"loc":{"start":{"line":466,"column":68},"end":{"line":466,"column":81}}},"24":{"name":"getMonkey","line":502,"loc":{"start":{"line":502,"column":11},"end":{"line":502,"column":36}}},"25":{"name":"watch","line":521,"loc":{"start":{"line":521,"column":11},"end":{"line":521,"column":35}}},"26":{"name":"release","line":530,"loc":{"start":{"line":530,"column":11},"end":{"line":530,"column":30}}},"27":{"name":"toJSON","line":558,"loc":{"start":{"line":558,"column":11},"end":{"line":558,"column":29}}},"28":{"name":"toString","line":569,"loc":{"start":{"line":569,"column":11},"end":{"line":569,"column":31}}},"29":{"name":"(anonymous_29)","line":578,"loc":{"start":{"line":578,"column":16},"end":{"line":578,"column":28}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":11,"column":3}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":566}},"3":{"start":{"line":13,"column":34},"end":{"line":13,"column":350}},"4":{"start":{"line":13,"column":77},"end":{"line":13,"column":348}},"5":{"start":{"line":13,"column":118},"end":{"line":13,"column":144}},"6":{"start":{"line":13,"column":145},"end":{"line":13,"column":200}},"7":{"start":{"line":13,"column":201},"end":{"line":13,"column":232}},"8":{"start":{"line":13,"column":233},"end":{"line":13,"column":287}},"9":{"start":{"line":13,"column":260},"end":{"line":13,"column":287}},"10":{"start":{"line":13,"column":288},"end":{"line":13,"column":346}},"11":{"start":{"line":13,"column":351},"end":{"line":13,"column":560}},"12":{"start":{"line":13,"column":408},"end":{"line":13,"column":476}},"13":{"start":{"line":13,"column":424},"end":{"line":13,"column":476}},"14":{"start":{"line":13,"column":477},"end":{"line":13,"column":537}},"15":{"start":{"line":13,"column":494},"end":{"line":13,"column":537}},"16":{"start":{"line":13,"column":538},"end":{"line":13,"column":557}},"17":{"start":{"line":15,"column":0},"end":{"line":15,"column":661}},"18":{"start":{"line":15,"column":41},"end":{"line":15,"column":59}},"19":{"start":{"line":15,"column":60},"end":{"line":15,"column":658}},"20":{"start":{"line":15,"column":71},"end":{"line":15,"column":658}},"21":{"start":{"line":15,"column":88},"end":{"line":15,"column":137}},"22":{"start":{"line":15,"column":138},"end":{"line":15,"column":153}},"23":{"start":{"line":15,"column":154},"end":{"line":15,"column":203}},"24":{"start":{"line":15,"column":175},"end":{"line":15,"column":203}},"25":{"start":{"line":15,"column":204},"end":{"line":15,"column":265}},"26":{"start":{"line":15,"column":266},"end":{"line":15,"column":656}},"27":{"start":{"line":15,"column":292},"end":{"line":15,"column":335}},"28":{"start":{"line":15,"column":336},"end":{"line":15,"column":495}},"29":{"start":{"line":15,"column":359},"end":{"line":15,"column":376}},"30":{"start":{"line":15,"column":386},"end":{"line":15,"column":399}},"31":{"start":{"line":15,"column":400},"end":{"line":15,"column":415}},"32":{"start":{"line":15,"column":416},"end":{"line":15,"column":431}},"33":{"start":{"line":15,"column":432},"end":{"line":15,"column":446}},"34":{"start":{"line":15,"column":447},"end":{"line":15,"column":473}},"35":{"start":{"line":15,"column":474},"end":{"line":15,"column":493}},"36":{"start":{"line":15,"column":503},"end":{"line":15,"column":656}},"37":{"start":{"line":15,"column":526},"end":{"line":15,"column":544}},"38":{"start":{"line":15,"column":554},"end":{"line":15,"column":576}},"39":{"start":{"line":15,"column":577},"end":{"line":15,"column":624}},"40":{"start":{"line":15,"column":605},"end":{"line":15,"column":622}},"41":{"start":{"line":15,"column":625},"end":{"line":15,"column":654}},"42":{"start":{"line":17,"column":0},"end":{"line":17,"column":272}},"43":{"start":{"line":17,"column":40},"end":{"line":17,"column":270}},"44":{"start":{"line":17,"column":69},"end":{"line":17,"column":80}},"45":{"start":{"line":17,"column":90},"end":{"line":17,"column":106}},"46":{"start":{"line":17,"column":107},"end":{"line":17,"column":228}},"47":{"start":{"line":17,"column":126},"end":{"line":17,"column":226}},"48":{"start":{"line":17,"column":149},"end":{"line":17,"column":224}},"49":{"start":{"line":17,"column":201},"end":{"line":17,"column":224}},"50":{"start":{"line":17,"column":229},"end":{"line":17,"column":253}},"51":{"start":{"line":17,"column":254},"end":{"line":17,"column":268}},"52":{"start":{"line":19,"column":0},"end":{"line":19,"column":97}},"53":{"start":{"line":19,"column":39},"end":{"line":19,"column":95}},"54":{"start":{"line":21,"column":0},"end":{"line":21,"column":153}},"55":{"start":{"line":21,"column":50},"end":{"line":21,"column":151}},"56":{"start":{"line":21,"column":92},"end":{"line":21,"column":149}},"57":{"start":{"line":23,"column":0},"end":{"line":23,"column":494}},"58":{"start":{"line":23,"column":43},"end":{"line":23,"column":208}},"59":{"start":{"line":23,"column":106},"end":{"line":23,"column":206}},"60":{"start":{"line":23,"column":209},"end":{"line":23,"column":373}},"61":{"start":{"line":23,"column":374},"end":{"line":23,"column":492}},"62":{"start":{"line":23,"column":390},"end":{"line":23,"column":492}},"63":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}},"64":{"start":{"line":27,"column":0},"end":{"line":27,"column":47}},"65":{"start":{"line":29,"column":0},"end":{"line":29,"column":34}},"66":{"start":{"line":31,"column":0},"end":{"line":31,"column":47}},"67":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}},"68":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}},"69":{"start":{"line":37,"column":0},"end":{"line":37,"column":49}},"70":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}},"71":{"start":{"line":41,"column":0},"end":{"line":41,"column":43}},"72":{"start":{"line":43,"column":0},"end":{"line":43,"column":35}},"73":{"start":{"line":45,"column":0},"end":{"line":45,"column":48}},"74":{"start":{"line":47,"column":0},"end":{"line":47,"column":36}},"75":{"start":{"line":49,"column":0},"end":{"line":49,"column":48}},"76":{"start":{"line":51,"column":0},"end":{"line":51,"column":34}},"77":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}},"78":{"start":{"line":53,"column":0},"end":{"line":53,"column":36}},"79":{"start":{"line":54,"column":0},"end":{"line":54,"column":26}},"80":{"start":{"line":55,"column":0},"end":{"line":55,"column":34}},"81":{"start":{"line":56,"column":0},"end":{"line":56,"column":34}},"82":{"start":{"line":57,"column":0},"end":{"line":57,"column":34}},"83":{"start":{"line":58,"column":0},"end":{"line":58,"column":40}},"84":{"start":{"line":59,"column":0},"end":{"line":59,"column":40}},"85":{"start":{"line":60,"column":0},"end":{"line":60,"column":28}},"86":{"start":{"line":65,"column":0},"end":{"line":90,"column":2}},"87":{"start":{"line":99,"column":0},"end":{"line":105,"column":1}},"88":{"start":{"line":100,"column":2},"end":{"line":104,"column":15}},"89":{"start":{"line":101,"column":4},"end":{"line":101,"column":107}},"90":{"start":{"line":101,"column":79},"end":{"line":101,"column":107}},"91":{"start":{"line":103,"column":4},"end":{"line":103,"column":16}},"92":{"start":{"line":123,"column":0},"end":{"line":575,"column":24}},"93":{"start":{"line":124,"column":2},"end":{"line":124,"column":30}},"94":{"start":{"line":126,"column":2},"end":{"line":182,"column":3}},"95":{"start":{"line":127,"column":4},"end":{"line":127,"column":21}},"96":{"start":{"line":129,"column":4},"end":{"line":129,"column":34}},"97":{"start":{"line":131,"column":4},"end":{"line":131,"column":82}},"98":{"start":{"line":134,"column":4},"end":{"line":134,"column":47}},"99":{"start":{"line":134,"column":30},"end":{"line":134,"column":47}},"100":{"start":{"line":137,"column":4},"end":{"line":137,"column":153}},"101":{"start":{"line":137,"column":89},"end":{"line":137,"column":153}},"102":{"start":{"line":140,"column":4},"end":{"line":140,"column":52}},"103":{"start":{"line":143,"column":4},"end":{"line":146,"column":5}},"104":{"start":{"line":144,"column":6},"end":{"line":144,"column":37}},"105":{"start":{"line":145,"column":6},"end":{"line":145,"column":32}},"106":{"start":{"line":149,"column":4},"end":{"line":149,"column":39}},"107":{"start":{"line":150,"column":4},"end":{"line":150,"column":23}},"108":{"start":{"line":151,"column":4},"end":{"line":151,"column":24}},"109":{"start":{"line":152,"column":4},"end":{"line":152,"column":27}},"110":{"start":{"line":153,"column":4},"end":{"line":153,"column":34}},"111":{"start":{"line":154,"column":4},"end":{"line":154,"column":23}},"112":{"start":{"line":155,"column":4},"end":{"line":155,"column":30}},"113":{"start":{"line":156,"column":4},"end":{"line":156,"column":29}},"114":{"start":{"line":159,"column":4},"end":{"line":159,"column":55}},"115":{"start":{"line":160,"column":4},"end":{"line":160,"column":29}},"116":{"start":{"line":163,"column":4},"end":{"line":163,"column":55}},"117":{"start":{"line":163,"column":32},"end":{"line":163,"column":55}},"118":{"start":{"line":166,"column":4},"end":{"line":171,"column":6}},"119":{"start":{"line":167,"column":6},"end":{"line":170,"column":8}},"120":{"start":{"line":168,"column":8},"end":{"line":168,"column":60}},"121":{"start":{"line":169,"column":8},"end":{"line":169,"column":59}},"122":{"start":{"line":173,"column":4},"end":{"line":173,"column":189}},"123":{"start":{"line":176,"column":4},"end":{"line":176,"column":27}},"124":{"start":{"line":179,"column":4},"end":{"line":179,"column":42}},"125":{"start":{"line":181,"column":4},"end":{"line":181,"column":90}},"126":{"start":{"line":181,"column":25},"end":{"line":181,"column":90}},"127":{"start":{"line":200,"column":2},"end":{"line":572,"column":6}},"128":{"start":{"line":203,"column":6},"end":{"line":203,"column":24}},"129":{"start":{"line":205,"column":6},"end":{"line":224,"column":8}},"130":{"start":{"line":206,"column":8},"end":{"line":206,"column":88}},"131":{"start":{"line":208,"column":8},"end":{"line":217,"column":9}},"132":{"start":{"line":209,"column":10},"end":{"line":209,"column":25}},"133":{"start":{"line":210,"column":10},"end":{"line":214,"column":13}},"134":{"start":{"line":216,"column":10},"end":{"line":216,"column":17}},"135":{"start":{"line":219,"column":8},"end":{"line":223,"column":9}},"136":{"start":{"line":220,"column":10},"end":{"line":222,"column":11}},"137":{"start":{"line":221,"column":12},"end":{"line":221,"column":40}},"138":{"start":{"line":226,"column":6},"end":{"line":248,"column":8}},"139":{"start":{"line":227,"column":8},"end":{"line":227,"column":88}},"140":{"start":{"line":230,"column":8},"end":{"line":240,"column":9}},"141":{"start":{"line":231,"column":10},"end":{"line":231,"column":118}},"142":{"start":{"line":233,"column":10},"end":{"line":237,"column":13}},"143":{"start":{"line":239,"column":10},"end":{"line":239,"column":17}},"144":{"start":{"line":243,"column":8},"end":{"line":247,"column":9}},"145":{"start":{"line":244,"column":10},"end":{"line":246,"column":11}},"146":{"start":{"line":245,"column":12},"end":{"line":245,"column":39}},"147":{"start":{"line":251,"column":6},"end":{"line":263,"column":7}},"148":{"start":{"line":252,"column":8},"end":{"line":252,"column":25}},"149":{"start":{"line":254,"column":8},"end":{"line":254,"column":58}},"150":{"start":{"line":257,"column":8},"end":{"line":257,"column":50}},"151":{"start":{"line":257,"column":25},"end":{"line":257,"column":50}},"152":{"start":{"line":260,"column":8},"end":{"line":262,"column":9}},"153":{"start":{"line":261,"column":10},"end":{"line":261,"column":27}},"154":{"start":{"line":265,"column":6},"end":{"line":265,"column":18}},"155":{"start":{"line":276,"column":6},"end":{"line":276,"column":34}},"156":{"start":{"line":277,"column":6},"end":{"line":277,"column":39}},"157":{"start":{"line":278,"column":6},"end":{"line":278,"column":49}},"158":{"start":{"line":280,"column":6},"end":{"line":280,"column":54}},"159":{"start":{"line":280,"column":42},"end":{"line":280,"column":54}},"160":{"start":{"line":282,"column":6},"end":{"line":282,"column":93}},"161":{"start":{"line":284,"column":6},"end":{"line":296,"column":7}},"162":{"start":{"line":286,"column":8},"end":{"line":291,"column":9}},"163":{"start":{"line":287,"column":10},"end":{"line":287,"column":42}},"164":{"start":{"line":288,"column":10},"end":{"line":288,"column":40}},"165":{"start":{"line":289,"column":10},"end":{"line":289,"column":33}},"166":{"start":{"line":290,"column":10},"end":{"line":290,"column":42}},"167":{"start":{"line":293,"column":8},"end":{"line":293,"column":47}},"168":{"start":{"line":295,"column":8},"end":{"line":295,"column":21}},"169":{"start":{"line":298,"column":6},"end":{"line":298,"column":18}},"170":{"start":{"line":318,"column":6},"end":{"line":318,"column":24}},"171":{"start":{"line":321,"column":6},"end":{"line":321,"column":60}},"172":{"start":{"line":321,"column":32},"end":{"line":321,"column":60}},"173":{"start":{"line":324,"column":6},"end":{"line":324,"column":105}},"174":{"start":{"line":324,"column":41},"end":{"line":324,"column":105}},"175":{"start":{"line":327,"column":6},"end":{"line":327,"column":29}},"176":{"start":{"line":331,"column":6},"end":{"line":331,"column":32}},"177":{"start":{"line":335,"column":6},"end":{"line":335,"column":39}},"178":{"start":{"line":337,"column":6},"end":{"line":340,"column":7}},"179":{"start":{"line":338,"column":8},"end":{"line":338,"column":59}},"180":{"start":{"line":339,"column":8},"end":{"line":339,"column":37}},"181":{"start":{"line":343,"column":6},"end":{"line":343,"column":58}},"182":{"start":{"line":344,"column":6},"end":{"line":344,"column":20}},"183":{"start":{"line":360,"column":6},"end":{"line":360,"column":24}},"184":{"start":{"line":363,"column":6},"end":{"line":363,"column":30}},"185":{"start":{"line":365,"column":6},"end":{"line":365,"column":169}},"186":{"start":{"line":365,"column":60},"end":{"line":365,"column":169}},"187":{"start":{"line":369,"column":6},"end":{"line":369,"column":43}},"188":{"start":{"line":371,"column":6},"end":{"line":371,"column":41}},"189":{"start":{"line":372,"column":6},"end":{"line":372,"column":33}},"190":{"start":{"line":375,"column":6},"end":{"line":377,"column":9}},"191":{"start":{"line":375,"column":23},"end":{"line":377,"column":9}},"192":{"start":{"line":380,"column":6},"end":{"line":380,"column":79}},"193":{"start":{"line":381,"column":6},"end":{"line":383,"column":9}},"194":{"start":{"line":381,"column":63},"end":{"line":383,"column":9}},"195":{"start":{"line":386,"column":6},"end":{"line":386,"column":56}},"196":{"start":{"line":386,"column":49},"end":{"line":386,"column":56}},"197":{"start":{"line":389,"column":6},"end":{"line":389,"column":36}},"198":{"start":{"line":390,"column":6},"end":{"line":403,"column":7}},"199":{"start":{"line":391,"column":8},"end":{"line":391,"column":64}},"200":{"start":{"line":393,"column":8},"end":{"line":402,"column":9}},"201":{"start":{"line":396,"column":10},"end":{"line":396,"column":54}},"202":{"start":{"line":399,"column":10},"end":{"line":399,"column":63}},"203":{"start":{"line":401,"column":10},"end":{"line":401,"column":274}},"204":{"start":{"line":401,"column":48},"end":{"line":401,"column":157}},"205":{"start":{"line":401,"column":162},"end":{"line":401,"column":274}},"206":{"start":{"line":406,"column":6},"end":{"line":406,"column":69}},"207":{"start":{"line":406,"column":37},"end":{"line":406,"column":69}},"208":{"start":{"line":409,"column":6},"end":{"line":409,"column":97}},"209":{"start":{"line":411,"column":6},"end":{"line":411,"column":29}},"210":{"start":{"line":412,"column":6},"end":{"line":412,"column":29}},"211":{"start":{"line":415,"column":6},"end":{"line":415,"column":43}},"212":{"start":{"line":415,"column":31},"end":{"line":415,"column":43}},"213":{"start":{"line":418,"column":6},"end":{"line":418,"column":93}},"214":{"start":{"line":420,"column":6},"end":{"line":420,"column":40}},"215":{"start":{"line":423,"column":6},"end":{"line":423,"column":24}},"216":{"start":{"line":424,"column":6},"end":{"line":424,"column":44}},"217":{"start":{"line":425,"column":6},"end":{"line":425,"column":82}},"218":{"start":{"line":428,"column":6},"end":{"line":428,"column":61}},"219":{"start":{"line":431,"column":6},"end":{"line":431,"column":49}},"220":{"start":{"line":434,"column":6},"end":{"line":434,"column":48}},"221":{"start":{"line":434,"column":36},"end":{"line":434,"column":48}},"222":{"start":{"line":437,"column":6},"end":{"line":440,"column":7}},"223":{"start":{"line":438,"column":8},"end":{"line":438,"column":22}},"224":{"start":{"line":439,"column":8},"end":{"line":439,"column":20}},"225":{"start":{"line":443,"column":6},"end":{"line":445,"column":12}},"226":{"start":{"line":443,"column":25},"end":{"line":445,"column":12}},"227":{"start":{"line":444,"column":8},"end":{"line":444,"column":31}},"228":{"start":{"line":448,"column":6},"end":{"line":448,"column":18}},"229":{"start":{"line":461,"column":6},"end":{"line":461,"column":49}},"230":{"start":{"line":461,"column":37},"end":{"line":461,"column":49}},"231":{"start":{"line":464,"column":6},"end":{"line":464,"column":66}},"232":{"start":{"line":464,"column":24},"end":{"line":464,"column":66}},"233":{"start":{"line":466,"column":6},"end":{"line":468,"column":9}},"234":{"start":{"line":467,"column":8},"end":{"line":467,"column":54}},"235":{"start":{"line":471,"column":6},"end":{"line":471,"column":57}},"236":{"start":{"line":473,"column":6},"end":{"line":473,"column":39}},"237":{"start":{"line":473,"column":27},"end":{"line":473,"column":39}},"238":{"start":{"line":476,"column":6},"end":{"line":477,"column":44}},"239":{"start":{"line":479,"column":6},"end":{"line":479,"column":36}},"240":{"start":{"line":480,"column":6},"end":{"line":480,"column":29}},"241":{"start":{"line":481,"column":6},"end":{"line":481,"column":38}},"242":{"start":{"line":484,"column":6},"end":{"line":489,"column":9}},"243":{"start":{"line":491,"column":6},"end":{"line":491,"column":18}},"244":{"start":{"line":503,"column":6},"end":{"line":503,"column":30}},"245":{"start":{"line":505,"column":6},"end":{"line":505,"column":62}},"246":{"start":{"line":507,"column":6},"end":{"line":507,"column":58}},"247":{"start":{"line":507,"column":44},"end":{"line":507,"column":58}},"248":{"start":{"line":509,"column":6},"end":{"line":509,"column":18}},"249":{"start":{"line":522,"column":6},"end":{"line":522,"column":53}},"250":{"start":{"line":531,"column":6},"end":{"line":531,"column":24}},"251":{"start":{"line":533,"column":6},"end":{"line":533,"column":27}},"252":{"start":{"line":535,"column":6},"end":{"line":535,"column":23}},"253":{"start":{"line":537,"column":6},"end":{"line":537,"column":24}},"254":{"start":{"line":538,"column":6},"end":{"line":538,"column":32}},"255":{"start":{"line":539,"column":6},"end":{"line":539,"column":31}},"256":{"start":{"line":540,"column":6},"end":{"line":540,"column":38}},"257":{"start":{"line":541,"column":6},"end":{"line":541,"column":27}},"258":{"start":{"line":544,"column":6},"end":{"line":544,"column":58}},"259":{"start":{"line":544,"column":31},"end":{"line":544,"column":58}},"260":{"start":{"line":545,"column":6},"end":{"line":545,"column":27}},"261":{"start":{"line":548,"column":6},"end":{"line":548,"column":18}},"262":{"start":{"line":559,"column":6},"end":{"line":559,"column":30}},"263":{"start":{"line":570,"column":6},"end":{"line":570,"column":28}},"264":{"start":{"line":574,"column":2},"end":{"line":574,"column":16}},"265":{"start":{"line":577,"column":0},"end":{"line":577,"column":28}},"266":{"start":{"line":578,"column":0},"end":{"line":588,"column":2}},"267":{"start":{"line":579,"column":2},"end":{"line":581,"column":3}},"268":{"start":{"line":580,"column":4},"end":{"line":580,"column":33}},"269":{"start":{"line":583,"column":2},"end":{"line":583,"column":74}},"270":{"start":{"line":583,"column":20},"end":{"line":583,"column":74}},"271":{"start":{"line":585,"column":2},"end":{"line":585,"column":103}},"272":{"start":{"line":585,"column":58},"end":{"line":585,"column":103}},"273":{"start":{"line":587,"column":2},"end":{"line":587,"column":44}},"274":{"start":{"line":589,"column":0},"end":{"line":589,"column":35}},"275":{"start":{"line":594,"column":0},"end":{"line":594,"column":36}},"276":{"start":{"line":595,"column":0},"end":{"line":595,"column":51}},"277":{"start":{"line":596,"column":0},"end":{"line":596,"column":31}},"278":{"start":{"line":597,"column":0},"end":{"line":597,"column":32}},"279":{"start":{"line":598,"column":0},"end":{"line":598,"column":25}},"280":{"start":{"line":603,"column":0},"end":{"line":603,"column":25}},"281":{"start":{"line":604,"column":0},"end":{"line":604,"column":36}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":169},"end":{"line":13,"column":190}},{"start":{"line":13,"column":194},"end":{"line":13,"column":199}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":233},"end":{"line":13,"column":233}},{"start":{"line":13,"column":233},"end":{"line":13,"column":233}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":408},"end":{"line":13,"column":408}},{"start":{"line":13,"column":408},"end":{"line":13,"column":408}}]},"4":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":477},"end":{"line":13,"column":477}},{"start":{"line":13,"column":477},"end":{"line":13,"column":477}}]},"5":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":154},"end":{"line":15,"column":154}},{"start":{"line":15,"column":154},"end":{"line":15,"column":154}}]},"6":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":266},"end":{"line":15,"column":266}},{"start":{"line":15,"column":266},"end":{"line":15,"column":266}}]},"7":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":336},"end":{"line":15,"column":336}},{"start":{"line":15,"column":336},"end":{"line":15,"column":336}}]},"8":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":503},"end":{"line":15,"column":503}},{"start":{"line":15,"column":503},"end":{"line":15,"column":503}}]},"9":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":577},"end":{"line":15,"column":577}},{"start":{"line":15,"column":577},"end":{"line":15,"column":577}}]},"10":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":40}},{"start":{"line":17,"column":40},"end":{"line":17,"column":40}}]},"11":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":47}},{"start":{"line":17,"column":51},"end":{"line":17,"column":65}}]},"12":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":107},"end":{"line":17,"column":107}},{"start":{"line":17,"column":107},"end":{"line":17,"column":107}}]},"13":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":149},"end":{"line":17,"column":149}},{"start":{"line":17,"column":149},"end":{"line":17,"column":149}}]},"14":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":94}}]},"15":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"16":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":50},"end":{"line":21,"column":50}},{"start":{"line":21,"column":50},"end":{"line":21,"column":50}}]},"17":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":43},"end":{"line":23,"column":43}},{"start":{"line":23,"column":43},"end":{"line":23,"column":43}}]},"18":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":47},"end":{"line":23,"column":79}},{"start":{"line":23,"column":83},"end":{"line":23,"column":102}}]},"19":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":244},"end":{"line":23,"column":254}},{"start":{"line":23,"column":258},"end":{"line":23,"column":278}}]},"20":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":374},"end":{"line":23,"column":374}},{"start":{"line":23,"column":374},"end":{"line":23,"column":374}}]},"21":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":414},"end":{"line":23,"column":457}},{"start":{"line":23,"column":460},"end":{"line":23,"column":491}}]},"22":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"23":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":43}},{"start":{"line":101,"column":47},"end":{"line":101,"column":77}}]},"24":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"25":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"26":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":46}},{"start":{"line":137,"column":50},"end":{"line":137,"column":87}}]},"27":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"28":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"29":{"line":169,"type":"cond-expr","locations":[{"start":{"line":169,"column":50},"end":{"line":169,"column":54}},{"start":{"line":169,"column":57},"end":{"line":169,"column":58}}]},"30":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"31":{"line":206,"type":"cond-expr","locations":[{"start":{"line":206,"column":70},"end":{"line":206,"column":72}},{"start":{"line":206,"column":75},"end":{"line":206,"column":87}}]},"32":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":16},"end":{"line":206,"column":37}},{"start":{"line":206,"column":41},"end":{"line":206,"column":67}}]},"33":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":8},"end":{"line":208,"column":8}},{"start":{"line":208,"column":8},"end":{"line":208,"column":8}}]},"34":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":219,"column":8}},{"start":{"line":219,"column":8},"end":{"line":219,"column":8}}]},"35":{"line":227,"type":"cond-expr","locations":[{"start":{"line":227,"column":70},"end":{"line":227,"column":72}},{"start":{"line":227,"column":75},"end":{"line":227,"column":87}}]},"36":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":16},"end":{"line":227,"column":37}},{"start":{"line":227,"column":41},"end":{"line":227,"column":67}}]},"37":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":8},"end":{"line":230,"column":8}},{"start":{"line":230,"column":8},"end":{"line":230,"column":8}}]},"38":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":12},"end":{"line":230,"column":52}},{"start":{"line":230,"column":56},"end":{"line":230,"column":86}}]},"39":{"line":231,"type":"cond-expr","locations":[{"start":{"line":231,"column":94},"end":{"line":231,"column":109}},{"start":{"line":231,"column":112},"end":{"line":231,"column":116}}]},"40":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":8}},{"start":{"line":243,"column":8},"end":{"line":243,"column":8}}]},"41":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":6},"end":{"line":251,"column":6}},{"start":{"line":251,"column":6},"end":{"line":251,"column":6}}]},"42":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":8},"end":{"line":257,"column":8}},{"start":{"line":257,"column":8},"end":{"line":257,"column":8}}]},"43":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":8},"end":{"line":260,"column":8}},{"start":{"line":260,"column":8},"end":{"line":260,"column":8}}]},"44":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":6},"end":{"line":280,"column":6}},{"start":{"line":280,"column":6},"end":{"line":280,"column":6}}]},"45":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":70},"end":{"line":282,"column":83}},{"start":{"line":282,"column":87},"end":{"line":282,"column":91}}]},"46":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":6},"end":{"line":284,"column":6}},{"start":{"line":284,"column":6},"end":{"line":284,"column":6}}]},"47":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":8},"end":{"line":286,"column":8}},{"start":{"line":286,"column":8},"end":{"line":286,"column":8}}]},"48":{"line":318,"type":"binary-expr","locations":[{"start":{"line":318,"column":13},"end":{"line":318,"column":17}},{"start":{"line":318,"column":21},"end":{"line":318,"column":23}}]},"49":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":6},"end":{"line":321,"column":6}},{"start":{"line":321,"column":6},"end":{"line":321,"column":6}}]},"50":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":6},"end":{"line":324,"column":6}},{"start":{"line":324,"column":6},"end":{"line":324,"column":6}}]},"51":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":6},"end":{"line":337,"column":6}},{"start":{"line":337,"column":6},"end":{"line":337,"column":6}}]},"52":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":6}},{"start":{"line":365,"column":6},"end":{"line":365,"column":6}}]},"53":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":6},"end":{"line":375,"column":6}},{"start":{"line":375,"column":6},"end":{"line":375,"column":6}}]},"54":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":6},"end":{"line":381,"column":6}},{"start":{"line":381,"column":6},"end":{"line":381,"column":6}}]},"55":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":10},"end":{"line":381,"column":20}},{"start":{"line":381,"column":24},"end":{"line":381,"column":61}}]},"56":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":6},"end":{"line":386,"column":6}},{"start":{"line":386,"column":6},"end":{"line":386,"column":6}}]},"57":{"line":386,"type":"binary-expr","locations":[{"start":{"line":386,"column":10},"end":{"line":386,"column":36}},{"start":{"line":386,"column":40},"end":{"line":386,"column":47}}]},"58":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":6},"end":{"line":390,"column":6}},{"start":{"line":390,"column":6},"end":{"line":390,"column":6}}]},"59":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":8},"end":{"line":393,"column":8}},{"start":{"line":393,"column":8},"end":{"line":393,"column":8}}]},"60":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":10},"end":{"line":401,"column":10}},{"start":{"line":401,"column":10},"end":{"line":401,"column":10}}]},"61":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":6},"end":{"line":406,"column":6}},{"start":{"line":406,"column":6},"end":{"line":406,"column":6}}]},"62":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":6},"end":{"line":415,"column":6}},{"start":{"line":415,"column":6},"end":{"line":415,"column":6}}]},"63":{"line":418,"type":"cond-expr","locations":[{"start":{"line":418,"column":71},"end":{"line":418,"column":86}},{"start":{"line":418,"column":89},"end":{"line":418,"column":91}}]},"64":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":6},"end":{"line":434,"column":6}},{"start":{"line":434,"column":6},"end":{"line":434,"column":6}}]},"65":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":6},"end":{"line":437,"column":6}},{"start":{"line":437,"column":6},"end":{"line":437,"column":6}}]},"66":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":6},"end":{"line":443,"column":6}},{"start":{"line":443,"column":6},"end":{"line":443,"column":6}}]},"67":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":6},"end":{"line":461,"column":6}},{"start":{"line":461,"column":6},"end":{"line":461,"column":6}}]},"68":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":6},"end":{"line":464,"column":6}},{"start":{"line":464,"column":6},"end":{"line":464,"column":6}}]},"69":{"line":467,"type":"cond-expr","locations":[{"start":{"line":467,"column":27},"end":{"line":467,"column":48}},{"start":{"line":467,"column":51},"end":{"line":467,"column":53}}]},"70":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":6},"end":{"line":473,"column":6}},{"start":{"line":473,"column":6},"end":{"line":473,"column":6}}]},"71":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":6},"end":{"line":507,"column":6}},{"start":{"line":507,"column":6},"end":{"line":507,"column":6}}]},"72":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":2},"end":{"line":583,"column":2}},{"start":{"line":583,"column":2},"end":{"line":583,"column":2}}]},"73":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":2},"end":{"line":585,"column":2}},{"start":{"line":585,"column":2},"end":{"line":585,"column":2}}]},"74":{"line":585,"type":"binary-expr","locations":[{"start":{"line":585,"column":6},"end":{"line":585,"column":23}},{"start":{"line":585,"column":27},"end":{"line":585,"column":56}}]}},"code":["/**"," * Baobab Data Structure"," * ======================"," *"," * A handy data tree with cursors."," */","'use strict';","","Object.defineProperty(exports, '__esModule', {","  value: true","});","","var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();","","var _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };","","function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }","","function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }","","var _emmett = require('emmett');","","var _emmett2 = _interopRequireDefault(_emmett);","","var _cursor = require('./cursor');","","var _cursor2 = _interopRequireDefault(_cursor);","","var _monkey = require('./monkey');","","var _watcher = require('./watcher');","","var _watcher2 = _interopRequireDefault(_watcher);","","var _type = require('./type');","","var _type2 = _interopRequireDefault(_type);","","var _update2 = require('./update');","","var _update3 = _interopRequireDefault(_update2);","","var _helpers = require('./helpers');","","var helpers = _interopRequireWildcard(_helpers);","","var arrayFrom = helpers.arrayFrom;","var coercePath = helpers.coercePath;","var deepFreeze = helpers.deepFreeze;","var getIn = helpers.getIn;","var makeError = helpers.makeError;","var deepClone = helpers.deepClone;","var deepMerge = helpers.deepMerge;","var shallowClone = helpers.shallowClone;","var shallowMerge = helpers.shallowMerge;","var uniqid = helpers.uniqid;","","/**"," * Baobab defaults"," */","var DEFAULTS = {","","  // Should the tree handle its transactions on its own?","  autoCommit: true,","","  // Should the transactions be handled asynchronously?","  asynchronous: true,","","  // Should the tree's data be immutable?","  immutable: true,","","  // Should the monkeys be lazy?","  lazyMonkeys: true,","","  // Should the tree be persistent?","  persistent: true,","","  // Should the tree's update be pure?","  pure: true,","","  // Validation specifications","  validate: null,","","  // Validation behavior 'rollback' or 'notify'","  validationBehavior: 'rollback'","};","","/**"," * Function returning a string hash from a non-dynamic path expressed as an"," * array."," *"," * @param  {array}  path - The path to hash."," * @return {string} string - The resultant hash."," */","function hashPath(path) {","  return 'λ' + path.map(function (step) {","    if (_type2['default']['function'](step) || _type2['default'].object(step)) return '#' + uniqid() + '#';","","    return step;","  }).join('λ');","}","","/**"," * Baobab class"," *"," * @constructor"," * @param {object|array} [initialData={}]    - Initial data passed to the tree."," * @param {object}       [opts]              - Optional options."," * @param {boolean}      [opts.autoCommit]   - Should the tree auto-commit?"," * @param {boolean}      [opts.asynchronous] - Should the tree's transactions"," *                                             handled asynchronously?"," * @param {boolean}      [opts.immutable]    - Should the tree be immutable?"," * @param {boolean}      [opts.persistent]   - Should the tree be persistent?"," * @param {boolean}      [opts.pure]         - Should the tree be pure?"," * @param {function}     [opts.validate]     - Validation function."," * @param {string}       [opts.validationBehaviour] - \"rollback\" or \"notify\"."," */","","var Baobab = (function (_Emitter) {","  _inherits(Baobab, _Emitter);","","  function Baobab(initialData, opts) {","    var _this = this;","","    _classCallCheck(this, Baobab);","","    _get(Object.getPrototypeOf(Baobab.prototype), 'constructor', this).call(this);","","    // Setting initialData to an empty object if no data is provided by use","    if (arguments.length < 1) initialData = {};","","    // Checking whether given initial data is valid","    if (!_type2['default'].object(initialData) && !_type2['default'].array(initialData)) throw makeError('Baobab: invalid data.', { data: initialData });","","    // Merging given options with defaults","    this.options = shallowMerge({}, DEFAULTS, opts);","","    // Disabling immutability & persistence if persistence if disabled","    if (!this.options.persistent) {","      this.options.immutable = false;","      this.options.pure = false;","    }","","    // Privates","    this._identity = '[object Baobab]';","    this._cursors = {};","    this._future = null;","    this._transaction = [];","    this._affectedPathsIndex = {};","    this._monkeys = {};","    this._previousData = null;","    this._data = initialData;","","    // Properties","    this.root = new _cursor2['default'](this, [], 'λ');","    delete this.root.release;","","    // Does the user want an immutable tree?","    if (this.options.immutable) deepFreeze(this._data);","","    // Bootstrapping root cursor's getters and setters","    var bootstrap = function bootstrap(name) {","      _this[name] = function () {","        var r = this.root[name].apply(this.root, arguments);","        return r instanceof _cursor2['default'] ? this : r;","      };","    };","","    ['apply', 'clone', 'concat', 'deepClone', 'deepMerge', 'exists', 'get', 'push', 'merge', 'pop', 'project', 'serialize', 'set', 'shift', 'splice', 'unset', 'unshift'].forEach(bootstrap);","","    // Registering the initial monkeys","    this._refreshMonkeys();","","    // Initial validation","    var validationError = this.validate();","","    if (validationError) throw Error('Baobab: invalid data.', { error: validationError });","  }","","  /**","   * Monkey helper.","   */","","  /**","   * Internal method used to refresh the tree's monkey register on every","   * update.","   * Note 1) For the time being, placing monkeys beneath array nodes is not","   * allowed for performance reasons.","   *","   * @param  {mixed}   node      - The starting node.","   * @param  {array}   path      - The starting node's path.","   * @param  {string}  operation - The operation that lead to a refreshment.","   * @return {Baobab}            - The tree instance for chaining purposes.","   */","","  _createClass(Baobab, [{","    key: '_refreshMonkeys',","    value: function _refreshMonkeys(node, path, operation) {","      var _this2 = this;","","      var clean = function clean(data) {","        var p = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];","","        if (data instanceof _monkey.Monkey) {","          data.release();","          (0, _update3['default'])(_this2._monkeys, p, { type: 'unset' }, {","            immutable: false,","            persistent: false,","            pure: false","          });","","          return;","        }","","        if (_type2['default'].object(data)) {","          for (var k in data) {","            clean(data[k], p.concat(k));","          }","        }","      };","","      var walk = function walk(data) {","        var p = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];","","        // Should we sit a monkey in the tree?","        if (data instanceof _monkey.MonkeyDefinition || data instanceof _monkey.Monkey) {","          var monkeyInstance = new _monkey.Monkey(_this2, p, data instanceof _monkey.Monkey ? data.definition : data);","","          (0, _update3['default'])(_this2._monkeys, p, { type: 'set', value: monkeyInstance }, {","            immutable: false,","            persistent: false,","            pure: false","          });","","          return;","        }","","        // Object iteration","        if (_type2['default'].object(data)) {","          for (var k in data) {","            walk(data[k], p.concat(k));","          }","        }","      };","","      // Walking the whole tree","      if (!arguments.length) {","        walk(this._data);","      } else {","        var monkeysNode = getIn(this._monkeys, path).data;","","        // Is this required that we clean some already existing monkeys?","        if (monkeysNode) clean(monkeysNode, path);","","        // Let's walk the tree only from the updated point","        if (operation !== 'unset') {","          walk(node, path);","        }","      }","","      return this;","    }","","    /**","     * Method used to validate the tree's data.","     *","     * @return {boolean} - Is the tree valid?","     */","  }, {","    key: 'validate',","    value: function validate(affectedPaths) {","      var _options = this.options;","      var validate = _options.validate;","      var behavior = _options.validationBehavior;","","      if (typeof validate !== 'function') return null;","","      var error = validate.call(this, this._previousData, this._data, affectedPaths || [[]]);","","      if (error instanceof Error) {","","        if (behavior === 'rollback') {","          this._data = this._previousData;","          this._affectedPathsIndex = {};","          this._transaction = [];","          this._previousData = this._data;","        }","","        this.emit('invalid', { error: error });","","        return error;","      }","","      return null;","    }","","    /**","     * Method used to select data within the tree by creating a cursor. Cursors","     * are kept as singletons by the tree for performance and hygiene reasons.","     *","     * Arity (1):","     * @param {path}    path - Path to select in the tree.","     *","     * Arity (*):","     * @param {...step} path - Path to select in the tree.","     *","     * @return {Cursor}      - The resultant cursor.","     */","  }, {","    key: 'select',","    value: function select(path) {","","      // If no path is given, we simply return the root","      path = path || [];","","      // Variadic","      if (arguments.length > 1) path = arrayFrom(arguments);","","      // Checking that given path is valid","      if (!_type2['default'].path(path)) throw makeError('Baobab.select: invalid path.', { path: path });","","      // Casting to array","      path = [].concat(path);","","      // Computing hash (done here because it would be too late to do it in the","      // cursor's constructor since we need to hit the cursors' index first).","      var hash = hashPath(path);","","      // Creating a new cursor or returning the already existing one for the","      // requested path.","      var cursor = this._cursors[hash];","","      if (!cursor) {","        cursor = new _cursor2['default'](this, path, hash);","        this._cursors[hash] = cursor;","      }","","      // Emitting an event to notify that a part of the tree was selected","      this.emit('select', { path: path, cursor: cursor });","      return cursor;","    }","","    /**","     * Method used to update the tree. Updates are simply expressed by a path,","     * dynamic or not, and an operation.","     *","     * This is where path solving should happen and not in the cursor.","     *","     * @param  {path}   path      - The path where we'll apply the operation.","     * @param  {object} operation - The operation to apply.","     * @return {mixed} - Return the result of the update.","     */","  }, {","    key: 'update',","    value: function update(path, operation) {","      var _this3 = this;","","      // Coercing path","      path = coercePath(path);","","      if (!_type2['default'].operationType(operation.type)) throw makeError('Baobab.update: unknown operation type \"' + operation.type + '\".', { operation: operation });","","      // Solving the given path","","      var _getIn = getIn(this._data, path);","","      var solvedPath = _getIn.solvedPath;","      var exists = _getIn.exists;","","      // If we couldn't solve the path, we throw","      if (!solvedPath) throw makeError('Baobab.update: could not solve the given path.', {","        path: solvedPath","      });","","      // Read-only path?","      var monkeyPath = _type2['default'].monkeyPath(this._monkeys, solvedPath);","      if (monkeyPath && solvedPath.length > monkeyPath.length) throw makeError('Baobab.update: attempting to update a read-only path.', {","        path: solvedPath","      });","","      // We don't unset irrelevant paths","      if (operation.type === 'unset' && !exists) return;","","      // If we merge data, we need to acknowledge monkeys","      var realOperation = operation;","      if (/merge/i.test(operation.type)) {","        var monkeysNode = getIn(this._monkeys, solvedPath).data;","","        if (_type2['default'].object(monkeysNode)) {","","          // Cloning the operation not to create weird behavior for the user","          realOperation = shallowClone(realOperation);","","          // Fetching the existing node in the current data","          var currentNode = getIn(this._data, solvedPath).data;","","          if (/deep/i.test(realOperation.type)) realOperation.value = deepMerge({}, deepMerge({}, currentNode, deepClone(monkeysNode)), realOperation.value);else realOperation.value = shallowMerge({}, deepMerge({}, currentNode, deepClone(monkeysNode)), realOperation.value);","        }","      }","","      // Stashing previous data if this is the frame's first update","      if (!this._transaction.length) this._previousData = this._data;","","      // Applying the operation","      var result = (0, _update3['default'])(this._data, solvedPath, realOperation, this.options);","","      var data = result.data;","      var node = result.node;","","      // If because of purity, the update was moot, we stop here","      if (!('data' in result)) return node;","","      // If the operation is push, the affected path is slightly different","      var affectedPath = solvedPath.concat(operation.type === 'push' ? node.length - 1 : []);","","      var hash = hashPath(affectedPath);","","      // Updating data and transaction","      this._data = data;","      this._affectedPathsIndex[hash] = true;","      this._transaction.push(shallowMerge({}, operation, { path: affectedPath }));","","      // Updating the monkeys","      this._refreshMonkeys(node, solvedPath, operation.type);","","      // Emitting a `write` event","      this.emit('write', { path: affectedPath });","","      // Should we let the user commit?","      if (!this.options.autoCommit) return node;","","      // Should we update asynchronously?","      if (!this.options.asynchronous) {","        this.commit();","        return node;","      }","","      // Updating asynchronously","      if (!this._future) this._future = setTimeout(function () {","        return _this3.commit();","      }, 0);","","      // Finally returning the affected node","      return node;","    }","","    /**","     * Method committing the updates of the tree and firing the tree's events.","     *","     * @return {Baobab} - The tree instance for chaining purposes.","     */","  }, {","    key: 'commit',","    value: function commit() {","","      // Do not fire update if the transaction is empty","      if (!this._transaction.length) return this;","","      // Clearing timeout if one was defined","      if (this._future) this._future = clearTimeout(this._future);","","      var affectedPaths = Object.keys(this._affectedPathsIndex).map(function (h) {","        return h !== 'λ' ? h.split('λ').slice(1) : [];","      });","","      // Is the tree still valid?","      var validationError = this.validate(affectedPaths);","","      if (validationError) return this;","","      // Caching to keep original references before we change them","      var transaction = this._transaction,","          previousData = this._previousData;","","      this._affectedPathsIndex = {};","      this._transaction = [];","      this._previousData = this._data;","","      // Emitting update event","      this.emit('update', {","        paths: affectedPaths,","        currentData: this._data,","        transaction: transaction,","        previousData: previousData","      });","","      return this;","    }","","    /**","     * Method returning a monkey at the given path or else `null`.","     *","     * @param  {path}        path - Path of the monkey to retrieve.","     * @return {Monkey|null}      - The Monkey instance of `null`.","     */","  }, {","    key: 'getMonkey',","    value: function getMonkey(path) {","      path = coercePath(path);","","      var monkey = getIn(this._monkeys, [].concat(path)).data;","","      if (monkey instanceof _monkey.Monkey) return monkey;","","      return null;","    }","","    /**","     * Method used to watch a collection of paths within the tree. Very useful","     * to bind UI components and such to the tree.","     *","     * @param  {object} mapping - Mapping of paths to listen.","     * @return {Cursor}         - The created watcher.","     */","  }, {","    key: 'watch',","    value: function watch(mapping) {","      return new _watcher2['default'](this, mapping);","    }","","    /**","     * Method releasing the tree and its attached data from memory.","     */","  }, {","    key: 'release',","    value: function release() {","      var k = undefined;","","      this.emit('release');","","      delete this.root;","","      delete this._data;","      delete this._previousData;","      delete this._transaction;","      delete this._affectedPathsIndex;","      delete this._monkeys;","","      // Releasing cursors","      for (k in this._cursors) this._cursors[k].release();","      delete this._cursors;","","      // Killing event emitter","      this.kill();","    }","","    /**","     * Overriding the `toJSON` method for convenient use with JSON.stringify.","     *","     * @return {mixed} - Data at cursor.","     */","  }, {","    key: 'toJSON',","    value: function toJSON() {","      return this.serialize();","    }","","    /**","     * Overriding the `toString` method for debugging purposes.","     *","     * @return {string} - The baobab's identity.","     */","  }, {","    key: 'toString',","    value: function toString() {","      return this._identity;","    }","  }]);","","  return Baobab;","})(_emmett2['default']);","","exports['default'] = Baobab;","Baobab.monkey = function () {","  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {","    args[_key] = arguments[_key];","  }","","  if (!args.length) throw new Error('Baobab.monkey: missing definition.');","","  if (args.length === 1 && typeof args[0] !== 'function') return new _monkey.MonkeyDefinition(args[0]);","","  return new _monkey.MonkeyDefinition(args);","};","Baobab.dynamicNode = Baobab.monkey;","","/**"," * Exposing some internals for convenience"," */","Baobab.Cursor = _cursor2['default'];","Baobab.MonkeyDefinition = _monkey.MonkeyDefinition;","Baobab.Monkey = _monkey.Monkey;","Baobab.type = _type2['default'];","Baobab.helpers = helpers;","","/**"," * Version"," */","Baobab.VERSION = '2.4.3';","module.exports = exports['default'];"],"l":{"9":1,"13":10,"15":1,"17":1,"19":5,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":1,"45":1,"47":1,"49":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"65":1,"99":1,"100":0,"101":0,"103":0,"123":1,"124":1,"126":1,"127":0,"129":0,"131":0,"134":0,"137":0,"140":0,"143":0,"144":0,"145":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"159":0,"160":0,"163":0,"166":0,"167":0,"168":0,"169":0,"173":0,"176":0,"179":0,"181":0,"200":1,"203":0,"205":0,"206":0,"208":0,"209":0,"210":0,"216":0,"219":0,"220":0,"221":0,"226":0,"227":0,"230":0,"231":0,"233":0,"239":0,"243":0,"244":0,"245":0,"251":0,"252":0,"254":0,"257":0,"260":0,"261":0,"265":0,"276":0,"277":0,"278":0,"280":0,"282":0,"284":0,"286":0,"287":0,"288":0,"289":0,"290":0,"293":0,"295":0,"298":0,"318":0,"321":0,"324":0,"327":0,"331":0,"335":0,"337":0,"338":0,"339":0,"343":0,"344":0,"360":0,"363":0,"365":0,"369":0,"371":0,"372":0,"375":0,"380":0,"381":0,"386":0,"389":0,"390":0,"391":0,"393":0,"396":0,"399":0,"401":0,"406":0,"409":0,"411":0,"412":0,"415":0,"418":0,"420":0,"423":0,"424":0,"425":0,"428":0,"431":0,"434":0,"437":0,"438":0,"439":0,"443":0,"444":0,"448":0,"461":0,"464":0,"466":0,"467":0,"471":0,"473":0,"476":0,"479":0,"480":0,"481":0,"484":0,"491":0,"503":0,"505":0,"507":0,"509":0,"522":0,"531":0,"533":0,"535":0,"537":0,"538":0,"539":0,"540":0,"541":0,"544":0,"545":0,"548":0,"559":0,"570":0,"574":1,"577":1,"578":1,"579":0,"580":0,"583":0,"585":0,"587":0,"589":1,"594":1,"595":1,"596":1,"597":1,"598":1,"603":1,"604":1}},"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/cursor.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/cursor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":29,"6":29,"7":29,"8":29,"9":29,"10":29,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":2,"44":1,"45":0,"46":0,"47":1,"48":1,"49":0,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":0,"61":0,"62":1,"63":1,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":1,"252":1,"253":1,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":1,"265":1,"266":11,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1},"b":{"1":[29,29],"2":[29,0],"3":[1,0],"4":[0,1],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,2],"11":[2,2],"12":[0,0],"13":[0,1],"14":[1,0],"15":[1,1],"16":[1,0],"17":[1,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[1,0],"70":[1,1],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":2,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":11,"51":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":20},"end":{"line":13,"column":32}}},"2":{"name":"defineProperties","line":13,"loc":{"start":{"line":13,"column":34},"end":{"line":13,"column":75}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":358},"end":{"line":13,"column":406}}},"4":{"name":"get","line":15,"loc":{"start":{"line":15,"column":11},"end":{"line":15,"column":39}}},"5":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"6":{"name":"_classCallCheck","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}}},"7":{"name":"_inherits","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}}},"8":{"name":"checkPossibilityOfDynamicTraversal","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":64}}},"9":{"name":"(anonymous_9)","line":55,"loc":{"start":{"line":55,"column":14},"end":{"line":55,"column":34}}},"10":{"name":"Cursor","line":58,"loc":{"start":{"line":58,"column":2},"end":{"line":58,"column":36}}},"11":{"name":"(anonymous_11)","line":98,"loc":{"start":{"line":98,"column":25},"end":{"line":98,"column":41}}},"12":{"name":"fireUpdate","line":115,"loc":{"start":{"line":115,"column":21},"end":{"line":115,"column":55}}},"13":{"name":"get","line":120,"loc":{"start":{"line":120,"column":15},"end":{"line":120,"column":30}}},"14":{"name":"get","line":127,"loc":{"start":{"line":127,"column":15},"end":{"line":127,"column":30}}},"15":{"name":"(anonymous_15)","line":152,"loc":{"start":{"line":152,"column":26},"end":{"line":152,"column":43}}},"16":{"name":"(anonymous_16)","line":166,"loc":{"start":{"line":166,"column":21},"end":{"line":166,"column":33}}},"17":{"name":"_getComparedPaths","line":209,"loc":{"start":{"line":209,"column":11},"end":{"line":209,"column":40}}},"18":{"name":"isRoot","line":229,"loc":{"start":{"line":229,"column":11},"end":{"line":229,"column":29}}},"19":{"name":"isLeaf","line":240,"loc":{"start":{"line":240,"column":11},"end":{"line":240,"column":29}}},"20":{"name":"isBranch","line":251,"loc":{"start":{"line":251,"column":11},"end":{"line":251,"column":31}}},"21":{"name":"root","line":267,"loc":{"start":{"line":267,"column":11},"end":{"line":267,"column":27}}},"22":{"name":"select","line":284,"loc":{"start":{"line":284,"column":11},"end":{"line":284,"column":33}}},"23":{"name":"up","line":298,"loc":{"start":{"line":298,"column":11},"end":{"line":298,"column":25}}},"24":{"name":"down","line":311,"loc":{"start":{"line":311,"column":11},"end":{"line":311,"column":27}}},"25":{"name":"left","line":327,"loc":{"start":{"line":327,"column":11},"end":{"line":327,"column":27}}},"26":{"name":"right","line":345,"loc":{"start":{"line":345,"column":11},"end":{"line":345,"column":28}}},"27":{"name":"leftmost","line":365,"loc":{"start":{"line":365,"column":11},"end":{"line":365,"column":31}}},"28":{"name":"rightmost","line":383,"loc":{"start":{"line":383,"column":11},"end":{"line":383,"column":32}}},"29":{"name":"map","line":404,"loc":{"start":{"line":404,"column":11},"end":{"line":404,"column":35}}},"30":{"name":"(anonymous_30)","line":412,"loc":{"start":{"line":412,"column":23},"end":{"line":412,"column":42}}},"31":{"name":"_get","line":434,"loc":{"start":{"line":434,"column":11},"end":{"line":434,"column":27}}},"32":{"name":"exists","line":458,"loc":{"start":{"line":458,"column":11},"end":{"line":458,"column":33}}},"33":{"name":"get","line":481,"loc":{"start":{"line":481,"column":11},"end":{"line":481,"column":30}}},"34":{"name":"clone","line":510,"loc":{"start":{"line":510,"column":11},"end":{"line":510,"column":28}}},"35":{"name":"deepClone","line":529,"loc":{"start":{"line":529,"column":11},"end":{"line":529,"column":32}}},"36":{"name":"serialize","line":552,"loc":{"start":{"line":552,"column":11},"end":{"line":552,"column":36}}},"37":{"name":"dropComputedData","line":566,"loc":{"start":{"line":566,"column":29},"end":{"line":566,"column":61}}},"38":{"name":"project","line":586,"loc":{"start":{"line":586,"column":11},"end":{"line":586,"column":40}}},"39":{"name":"startRecording","line":619,"loc":{"start":{"line":619,"column":11},"end":{"line":619,"column":47}}},"40":{"name":"stopRecording","line":644,"loc":{"start":{"line":644,"column":11},"end":{"line":644,"column":36}}},"41":{"name":"undo","line":657,"loc":{"start":{"line":657,"column":11},"end":{"line":657,"column":27}}},"42":{"name":"hasHistory","line":679,"loc":{"start":{"line":679,"column":11},"end":{"line":679,"column":33}}},"43":{"name":"getHistory","line":690,"loc":{"start":{"line":690,"column":11},"end":{"line":690,"column":33}}},"44":{"name":"clearHistory","line":701,"loc":{"start":{"line":701,"column":11},"end":{"line":701,"column":35}}},"45":{"name":"release","line":716,"loc":{"start":{"line":716,"column":11},"end":{"line":716,"column":30}}},"46":{"name":"toJSON","line":749,"loc":{"start":{"line":749,"column":11},"end":{"line":749,"column":29}}},"47":{"name":"toString","line":760,"loc":{"start":{"line":760,"column":11},"end":{"line":760,"column":31}}},"48":{"name":"(anonymous_48)","line":770,"loc":{"start":{"line":770,"column":38},"end":{"line":770,"column":50}}},"49":{"name":"next","line":781,"loc":{"start":{"line":781,"column":12},"end":{"line":781,"column":28}}},"50":{"name":"makeSetter","line":817,"loc":{"start":{"line":817,"column":0},"end":{"line":817,"column":39}}},"51":{"name":"(anonymous_51)","line":838,"loc":{"start":{"line":838,"column":27},"end":{"line":838,"column":50}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":11,"column":3}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":566}},"3":{"start":{"line":13,"column":34},"end":{"line":13,"column":350}},"4":{"start":{"line":13,"column":77},"end":{"line":13,"column":348}},"5":{"start":{"line":13,"column":118},"end":{"line":13,"column":144}},"6":{"start":{"line":13,"column":145},"end":{"line":13,"column":200}},"7":{"start":{"line":13,"column":201},"end":{"line":13,"column":232}},"8":{"start":{"line":13,"column":233},"end":{"line":13,"column":287}},"9":{"start":{"line":13,"column":260},"end":{"line":13,"column":287}},"10":{"start":{"line":13,"column":288},"end":{"line":13,"column":346}},"11":{"start":{"line":13,"column":351},"end":{"line":13,"column":560}},"12":{"start":{"line":13,"column":408},"end":{"line":13,"column":476}},"13":{"start":{"line":13,"column":424},"end":{"line":13,"column":476}},"14":{"start":{"line":13,"column":477},"end":{"line":13,"column":537}},"15":{"start":{"line":13,"column":494},"end":{"line":13,"column":537}},"16":{"start":{"line":13,"column":538},"end":{"line":13,"column":557}},"17":{"start":{"line":15,"column":0},"end":{"line":15,"column":661}},"18":{"start":{"line":15,"column":41},"end":{"line":15,"column":59}},"19":{"start":{"line":15,"column":60},"end":{"line":15,"column":658}},"20":{"start":{"line":15,"column":71},"end":{"line":15,"column":658}},"21":{"start":{"line":15,"column":88},"end":{"line":15,"column":137}},"22":{"start":{"line":15,"column":138},"end":{"line":15,"column":153}},"23":{"start":{"line":15,"column":154},"end":{"line":15,"column":203}},"24":{"start":{"line":15,"column":175},"end":{"line":15,"column":203}},"25":{"start":{"line":15,"column":204},"end":{"line":15,"column":265}},"26":{"start":{"line":15,"column":266},"end":{"line":15,"column":656}},"27":{"start":{"line":15,"column":292},"end":{"line":15,"column":335}},"28":{"start":{"line":15,"column":336},"end":{"line":15,"column":495}},"29":{"start":{"line":15,"column":359},"end":{"line":15,"column":376}},"30":{"start":{"line":15,"column":386},"end":{"line":15,"column":399}},"31":{"start":{"line":15,"column":400},"end":{"line":15,"column":415}},"32":{"start":{"line":15,"column":416},"end":{"line":15,"column":431}},"33":{"start":{"line":15,"column":432},"end":{"line":15,"column":446}},"34":{"start":{"line":15,"column":447},"end":{"line":15,"column":473}},"35":{"start":{"line":15,"column":474},"end":{"line":15,"column":493}},"36":{"start":{"line":15,"column":503},"end":{"line":15,"column":656}},"37":{"start":{"line":15,"column":526},"end":{"line":15,"column":544}},"38":{"start":{"line":15,"column":554},"end":{"line":15,"column":576}},"39":{"start":{"line":15,"column":577},"end":{"line":15,"column":624}},"40":{"start":{"line":15,"column":605},"end":{"line":15,"column":622}},"41":{"start":{"line":15,"column":625},"end":{"line":15,"column":654}},"42":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"43":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"44":{"start":{"line":19,"column":0},"end":{"line":19,"column":153}},"45":{"start":{"line":19,"column":50},"end":{"line":19,"column":151}},"46":{"start":{"line":19,"column":92},"end":{"line":19,"column":149}},"47":{"start":{"line":21,"column":0},"end":{"line":21,"column":494}},"48":{"start":{"line":21,"column":43},"end":{"line":21,"column":208}},"49":{"start":{"line":21,"column":106},"end":{"line":21,"column":206}},"50":{"start":{"line":21,"column":209},"end":{"line":21,"column":373}},"51":{"start":{"line":21,"column":374},"end":{"line":21,"column":492}},"52":{"start":{"line":21,"column":390},"end":{"line":21,"column":492}},"53":{"start":{"line":23,"column":0},"end":{"line":23,"column":32}},"54":{"start":{"line":25,"column":0},"end":{"line":25,"column":47}},"55":{"start":{"line":27,"column":0},"end":{"line":27,"column":34}},"56":{"start":{"line":29,"column":0},"end":{"line":29,"column":30}},"57":{"start":{"line":31,"column":0},"end":{"line":31,"column":43}},"58":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}},"59":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"60":{"start":{"line":43,"column":2},"end":{"line":43,"column":168}},"61":{"start":{"line":43,"column":19},"end":{"line":43,"column":168}},"62":{"start":{"line":55,"column":0},"end":{"line":766,"column":24}},"63":{"start":{"line":56,"column":2},"end":{"line":56,"column":30}},"64":{"start":{"line":58,"column":2},"end":{"line":185,"column":3}},"65":{"start":{"line":59,"column":4},"end":{"line":59,"column":21}},"66":{"start":{"line":61,"column":4},"end":{"line":61,"column":34}},"67":{"start":{"line":63,"column":4},"end":{"line":63,"column":82}},"68":{"start":{"line":66,"column":4},"end":{"line":66,"column":22}},"69":{"start":{"line":69,"column":4},"end":{"line":69,"column":39}},"70":{"start":{"line":70,"column":4},"end":{"line":70,"column":25}},"71":{"start":{"line":73,"column":4},"end":{"line":73,"column":21}},"72":{"start":{"line":74,"column":4},"end":{"line":74,"column":21}},"73":{"start":{"line":75,"column":4},"end":{"line":75,"column":21}},"74":{"start":{"line":78,"column":4},"end":{"line":82,"column":6}},"75":{"start":{"line":85,"column":4},"end":{"line":85,"column":65}},"76":{"start":{"line":88,"column":4},"end":{"line":88,"column":83}},"77":{"start":{"line":90,"column":4},"end":{"line":90,"column":138}},"78":{"start":{"line":90,"column":28},"end":{"line":90,"column":56}},"79":{"start":{"line":90,"column":61},"end":{"line":90,"column":138}},"80":{"start":{"line":98,"column":4},"end":{"line":104,"column":6}},"81":{"start":{"line":99,"column":6},"end":{"line":99,"column":27}},"82":{"start":{"line":101,"column":6},"end":{"line":101,"column":107}},"83":{"start":{"line":101,"column":100},"end":{"line":101,"column":107}},"84":{"start":{"line":103,"column":6},"end":{"line":103,"column":86}},"85":{"start":{"line":115,"column":4},"end":{"line":140,"column":6}},"86":{"start":{"line":116,"column":6},"end":{"line":116,"column":23}},"87":{"start":{"line":118,"column":6},"end":{"line":133,"column":9}},"88":{"start":{"line":121,"column":12},"end":{"line":121,"column":75}},"89":{"start":{"line":128,"column":12},"end":{"line":128,"column":30}},"90":{"start":{"line":135,"column":6},"end":{"line":135,"column":99}},"91":{"start":{"line":135,"column":57},"end":{"line":135,"column":99}},"92":{"start":{"line":137,"column":6},"end":{"line":137,"column":34}},"93":{"start":{"line":139,"column":6},"end":{"line":139,"column":45}},"94":{"start":{"line":152,"column":4},"end":{"line":162,"column":6}},"95":{"start":{"line":153,"column":6},"end":{"line":153,"column":37}},"96":{"start":{"line":153,"column":30},"end":{"line":153,"column":37}},"97":{"start":{"line":155,"column":6},"end":{"line":155,"column":35}},"98":{"start":{"line":156,"column":6},"end":{"line":156,"column":36}},"99":{"start":{"line":157,"column":6},"end":{"line":157,"column":50}},"100":{"start":{"line":158,"column":6},"end":{"line":158,"column":56}},"101":{"start":{"line":159,"column":6},"end":{"line":159,"column":52}},"102":{"start":{"line":161,"column":6},"end":{"line":161,"column":75}},"103":{"start":{"line":161,"column":59},"end":{"line":161,"column":75}},"104":{"start":{"line":165,"column":4},"end":{"line":165,"column":22}},"105":{"start":{"line":166,"column":4},"end":{"line":174,"column":6}},"106":{"start":{"line":167,"column":6},"end":{"line":167,"column":24}},"107":{"start":{"line":167,"column":17},"end":{"line":167,"column":24}},"108":{"start":{"line":169,"column":6},"end":{"line":169,"column":19}},"109":{"start":{"line":171,"column":6},"end":{"line":171,"column":74}},"110":{"start":{"line":171,"column":30},"end":{"line":171,"column":74}},"111":{"start":{"line":173,"column":6},"end":{"line":173,"column":59}},"112":{"start":{"line":177,"column":4},"end":{"line":184,"column":5}},"113":{"start":{"line":178,"column":6},"end":{"line":178,"column":23}},"114":{"start":{"line":182,"column":6},"end":{"line":182,"column":73}},"115":{"start":{"line":183,"column":6},"end":{"line":183,"column":77}},"116":{"start":{"line":207,"column":2},"end":{"line":763,"column":6}},"117":{"start":{"line":212,"column":6},"end":{"line":212,"column":130}},"118":{"start":{"line":214,"column":6},"end":{"line":214,"column":55}},"119":{"start":{"line":230,"column":6},"end":{"line":230,"column":31}},"120":{"start":{"line":241,"column":6},"end":{"line":241,"column":59}},"121":{"start":{"line":252,"column":6},"end":{"line":252,"column":46}},"122":{"start":{"line":268,"column":6},"end":{"line":268,"column":32}},"123":{"start":{"line":285,"column":6},"end":{"line":285,"column":74}},"124":{"start":{"line":285,"column":32},"end":{"line":285,"column":74}},"125":{"start":{"line":287,"column":6},"end":{"line":287,"column":54}},"126":{"start":{"line":299,"column":6},"end":{"line":299,"column":74}},"127":{"start":{"line":299,"column":26},"end":{"line":299,"column":74}},"128":{"start":{"line":301,"column":6},"end":{"line":301,"column":18}},"129":{"start":{"line":312,"column":6},"end":{"line":312,"column":66}},"130":{"start":{"line":314,"column":6},"end":{"line":314,"column":118}},"131":{"start":{"line":314,"column":48},"end":{"line":314,"column":118}},"132":{"start":{"line":316,"column":6},"end":{"line":316,"column":57}},"133":{"start":{"line":328,"column":6},"end":{"line":328,"column":66}},"134":{"start":{"line":330,"column":6},"end":{"line":330,"column":62}},"135":{"start":{"line":332,"column":6},"end":{"line":332,"column":93}},"136":{"start":{"line":332,"column":23},"end":{"line":332,"column":93}},"137":{"start":{"line":334,"column":6},"end":{"line":334,"column":91}},"138":{"start":{"line":346,"column":6},"end":{"line":346,"column":67}},"139":{"start":{"line":348,"column":6},"end":{"line":348,"column":62}},"140":{"start":{"line":350,"column":6},"end":{"line":350,"column":95}},"141":{"start":{"line":350,"column":23},"end":{"line":350,"column":95}},"142":{"start":{"line":352,"column":6},"end":{"line":352,"column":65}},"143":{"start":{"line":352,"column":53},"end":{"line":352,"column":65}},"144":{"start":{"line":354,"column":6},"end":{"line":354,"column":77}},"145":{"start":{"line":366,"column":6},"end":{"line":366,"column":70}},"146":{"start":{"line":368,"column":6},"end":{"line":368,"column":62}},"147":{"start":{"line":370,"column":6},"end":{"line":370,"column":97}},"148":{"start":{"line":370,"column":23},"end":{"line":370,"column":97}},"149":{"start":{"line":372,"column":6},"end":{"line":372,"column":70}},"150":{"start":{"line":384,"column":6},"end":{"line":384,"column":71}},"151":{"start":{"line":386,"column":6},"end":{"line":386,"column":62}},"152":{"start":{"line":388,"column":6},"end":{"line":388,"column":99}},"153":{"start":{"line":388,"column":23},"end":{"line":388,"column":99}},"154":{"start":{"line":390,"column":6},"end":{"line":390,"column":39}},"155":{"start":{"line":392,"column":6},"end":{"line":392,"column":84}},"156":{"start":{"line":405,"column":6},"end":{"line":405,"column":65}},"157":{"start":{"line":407,"column":6},"end":{"line":408,"column":31}},"158":{"start":{"line":410,"column":6},"end":{"line":410,"column":105}},"159":{"start":{"line":410,"column":43},"end":{"line":410,"column":105}},"160":{"start":{"line":412,"column":6},"end":{"line":414,"column":15}},"161":{"start":{"line":413,"column":8},"end":{"line":413,"column":71}},"162":{"start":{"line":435,"column":6},"end":{"line":435,"column":89}},"163":{"start":{"line":437,"column":6},"end":{"line":437,"column":127}},"164":{"start":{"line":437,"column":41},"end":{"line":437,"column":127}},"165":{"start":{"line":439,"column":6},"end":{"line":439,"column":88}},"166":{"start":{"line":439,"column":28},"end":{"line":439,"column":88}},"167":{"start":{"line":441,"column":6},"end":{"line":441,"column":80}},"168":{"start":{"line":459,"column":6},"end":{"line":459,"column":44}},"169":{"start":{"line":461,"column":6},"end":{"line":461,"column":74}},"170":{"start":{"line":461,"column":32},"end":{"line":461,"column":74}},"171":{"start":{"line":463,"column":6},"end":{"line":463,"column":36}},"172":{"start":{"line":482,"column":6},"end":{"line":482,"column":44}},"173":{"start":{"line":484,"column":6},"end":{"line":484,"column":74}},"174":{"start":{"line":484,"column":32},"end":{"line":484,"column":74}},"175":{"start":{"line":486,"column":6},"end":{"line":486,"column":34}},"176":{"start":{"line":488,"column":6},"end":{"line":488,"column":28}},"177":{"start":{"line":489,"column":6},"end":{"line":489,"column":40}},"178":{"start":{"line":492,"column":6},"end":{"line":492,"column":98}},"179":{"start":{"line":494,"column":6},"end":{"line":494,"column":18}},"180":{"start":{"line":511,"column":6},"end":{"line":511,"column":49}},"181":{"start":{"line":513,"column":6},"end":{"line":513,"column":46}},"182":{"start":{"line":530,"column":6},"end":{"line":530,"column":49}},"183":{"start":{"line":532,"column":6},"end":{"line":532,"column":43}},"184":{"start":{"line":553,"column":6},"end":{"line":553,"column":44}},"185":{"start":{"line":555,"column":6},"end":{"line":555,"column":74}},"186":{"start":{"line":555,"column":32},"end":{"line":555,"column":74}},"187":{"start":{"line":557,"column":6},"end":{"line":557,"column":127}},"188":{"start":{"line":557,"column":41},"end":{"line":557,"column":127}},"189":{"start":{"line":559,"column":6},"end":{"line":559,"column":45}},"190":{"start":{"line":559,"column":28},"end":{"line":559,"column":45}},"191":{"start":{"line":561,"column":6},"end":{"line":561,"column":50}},"192":{"start":{"line":563,"column":6},"end":{"line":564,"column":75}},"193":{"start":{"line":566,"column":6},"end":{"line":572,"column":8}},"194":{"start":{"line":567,"column":8},"end":{"line":567,"column":81}},"195":{"start":{"line":567,"column":74},"end":{"line":567,"column":81}},"196":{"start":{"line":569,"column":8},"end":{"line":571,"column":9}},"197":{"start":{"line":570,"column":10},"end":{"line":570,"column":92}},"198":{"start":{"line":570,"column":46},"end":{"line":570,"column":58}},"199":{"start":{"line":570,"column":63},"end":{"line":570,"column":92}},"200":{"start":{"line":574,"column":6},"end":{"line":574,"column":38}},"201":{"start":{"line":575,"column":6},"end":{"line":575,"column":18}},"202":{"start":{"line":587,"column":6},"end":{"line":599,"column":7}},"203":{"start":{"line":588,"column":8},"end":{"line":588,"column":22}},"204":{"start":{"line":590,"column":8},"end":{"line":592,"column":9}},"205":{"start":{"line":591,"column":10},"end":{"line":591,"column":44}},"206":{"start":{"line":592,"column":9},"end":{"line":592,"column":21}},"207":{"start":{"line":593,"column":13},"end":{"line":599,"column":7}},"208":{"start":{"line":594,"column":8},"end":{"line":594,"column":22}},"209":{"start":{"line":596,"column":8},"end":{"line":598,"column":9}},"210":{"start":{"line":597,"column":10},"end":{"line":597,"column":45}},"211":{"start":{"line":598,"column":9},"end":{"line":598,"column":21}},"212":{"start":{"line":601,"column":6},"end":{"line":601,"column":108}},"213":{"start":{"line":620,"column":6},"end":{"line":620,"column":42}},"214":{"start":{"line":622,"column":6},"end":{"line":624,"column":9}},"215":{"start":{"line":622,"column":26},"end":{"line":624,"column":9}},"216":{"start":{"line":626,"column":6},"end":{"line":626,"column":34}},"217":{"start":{"line":628,"column":6},"end":{"line":628,"column":36}},"218":{"start":{"line":628,"column":24},"end":{"line":628,"column":36}},"219":{"start":{"line":631,"column":6},"end":{"line":631,"column":23}},"220":{"start":{"line":633,"column":6},"end":{"line":633,"column":54}},"221":{"start":{"line":634,"column":6},"end":{"line":634,"column":18}},"222":{"start":{"line":645,"column":6},"end":{"line":645,"column":35}},"223":{"start":{"line":646,"column":6},"end":{"line":646,"column":18}},"224":{"start":{"line":658,"column":6},"end":{"line":658,"column":89}},"225":{"start":{"line":660,"column":6},"end":{"line":660,"column":97}},"226":{"start":{"line":660,"column":33},"end":{"line":660,"column":97}},"227":{"start":{"line":662,"column":6},"end":{"line":662,"column":44}},"228":{"start":{"line":664,"column":6},"end":{"line":664,"column":85}},"229":{"start":{"line":664,"column":19},"end":{"line":664,"column":85}},"230":{"start":{"line":666,"column":6},"end":{"line":666,"column":32}},"231":{"start":{"line":667,"column":6},"end":{"line":667,"column":23}},"232":{"start":{"line":669,"column":6},"end":{"line":669,"column":18}},"233":{"start":{"line":680,"column":6},"end":{"line":680,"column":59}},"234":{"start":{"line":691,"column":6},"end":{"line":691,"column":52}},"235":{"start":{"line":702,"column":6},"end":{"line":702,"column":45}},"236":{"start":{"line":702,"column":24},"end":{"line":702,"column":45}},"237":{"start":{"line":703,"column":6},"end":{"line":703,"column":18}},"238":{"start":{"line":719,"column":6},"end":{"line":719,"column":72}},"239":{"start":{"line":719,"column":29},"end":{"line":719,"column":72}},"240":{"start":{"line":721,"column":6},"end":{"line":721,"column":51}},"241":{"start":{"line":724,"column":6},"end":{"line":724,"column":58}},"242":{"start":{"line":724,"column":21},"end":{"line":724,"column":58}},"243":{"start":{"line":727,"column":6},"end":{"line":727,"column":23}},"244":{"start":{"line":728,"column":6},"end":{"line":728,"column":23}},"245":{"start":{"line":729,"column":6},"end":{"line":729,"column":29}},"246":{"start":{"line":730,"column":6},"end":{"line":730,"column":26}},"247":{"start":{"line":733,"column":6},"end":{"line":733,"column":18}},"248":{"start":{"line":734,"column":6},"end":{"line":734,"column":31}},"249":{"start":{"line":750,"column":6},"end":{"line":750,"column":30}},"250":{"start":{"line":761,"column":6},"end":{"line":761,"column":28}},"251":{"start":{"line":765,"column":2},"end":{"line":765,"column":16}},"252":{"start":{"line":768,"column":0},"end":{"line":768,"column":28}},"253":{"start":{"line":769,"column":0},"end":{"line":794,"column":1}},"254":{"start":{"line":770,"column":2},"end":{"line":793,"column":4}},"255":{"start":{"line":771,"column":4},"end":{"line":771,"column":33}},"256":{"start":{"line":773,"column":4},"end":{"line":773,"column":113}},"257":{"start":{"line":773,"column":41},"end":{"line":773,"column":113}},"258":{"start":{"line":775,"column":4},"end":{"line":775,"column":14}},"259":{"start":{"line":777,"column":4},"end":{"line":778,"column":30}},"260":{"start":{"line":780,"column":4},"end":{"line":792,"column":6}},"261":{"start":{"line":782,"column":8},"end":{"line":786,"column":9}},"262":{"start":{"line":783,"column":10},"end":{"line":785,"column":12}},"263":{"start":{"line":788,"column":8},"end":{"line":790,"column":10}},"264":{"start":{"line":804,"column":0},"end":{"line":808,"column":2}},"265":{"start":{"line":817,"column":0},"end":{"line":869,"column":1}},"266":{"start":{"line":838,"column":2},"end":{"line":868,"column":4}},"267":{"start":{"line":841,"column":4},"end":{"line":841,"column":111}},"268":{"start":{"line":841,"column":30},"end":{"line":841,"column":111}},"269":{"start":{"line":844,"column":4},"end":{"line":847,"column":5}},"270":{"start":{"line":845,"column":6},"end":{"line":845,"column":19}},"271":{"start":{"line":846,"column":6},"end":{"line":846,"column":16}},"272":{"start":{"line":850,"column":4},"end":{"line":850,"column":42}},"273":{"start":{"line":853,"column":4},"end":{"line":853,"column":130}},"274":{"start":{"line":853,"column":39},"end":{"line":853,"column":130}},"275":{"start":{"line":856,"column":4},"end":{"line":856,"column":150}},"276":{"start":{"line":856,"column":44},"end":{"line":856,"column":150}},"277":{"start":{"line":859,"column":4},"end":{"line":859,"column":157}},"278":{"start":{"line":859,"column":26},"end":{"line":859,"column":157}},"279":{"start":{"line":861,"column":4},"end":{"line":861,"column":48}},"280":{"start":{"line":864,"column":4},"end":{"line":867,"column":7}},"281":{"start":{"line":874,"column":0},"end":{"line":874,"column":18}},"282":{"start":{"line":875,"column":0},"end":{"line":875,"column":20}},"283":{"start":{"line":876,"column":0},"end":{"line":876,"column":51}},"284":{"start":{"line":877,"column":0},"end":{"line":877,"column":19}},"285":{"start":{"line":878,"column":0},"end":{"line":878,"column":46}},"286":{"start":{"line":879,"column":0},"end":{"line":879,"column":22}},"287":{"start":{"line":880,"column":0},"end":{"line":880,"column":18}},"288":{"start":{"line":881,"column":0},"end":{"line":881,"column":20}},"289":{"start":{"line":882,"column":0},"end":{"line":882,"column":48}},"290":{"start":{"line":883,"column":0},"end":{"line":883,"column":46}},"291":{"start":{"line":884,"column":0},"end":{"line":884,"column":50}},"292":{"start":{"line":885,"column":0},"end":{"line":885,"column":36}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":169},"end":{"line":13,"column":190}},{"start":{"line":13,"column":194},"end":{"line":13,"column":199}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":233},"end":{"line":13,"column":233}},{"start":{"line":13,"column":233},"end":{"line":13,"column":233}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":408},"end":{"line":13,"column":408}},{"start":{"line":13,"column":408},"end":{"line":13,"column":408}}]},"4":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":477},"end":{"line":13,"column":477}},{"start":{"line":13,"column":477},"end":{"line":13,"column":477}}]},"5":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":154},"end":{"line":15,"column":154}},{"start":{"line":15,"column":154},"end":{"line":15,"column":154}}]},"6":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":266},"end":{"line":15,"column":266}},{"start":{"line":15,"column":266},"end":{"line":15,"column":266}}]},"7":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":336},"end":{"line":15,"column":336}},{"start":{"line":15,"column":336},"end":{"line":15,"column":336}}]},"8":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":503},"end":{"line":15,"column":503}},{"start":{"line":15,"column":503},"end":{"line":15,"column":503}}]},"9":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":577},"end":{"line":15,"column":577}},{"start":{"line":15,"column":577},"end":{"line":15,"column":577}}]},"10":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"11":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"12":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":50},"end":{"line":19,"column":50}},{"start":{"line":19,"column":50},"end":{"line":19,"column":50}}]},"13":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":43},"end":{"line":21,"column":43}},{"start":{"line":21,"column":43},"end":{"line":21,"column":43}}]},"14":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":47},"end":{"line":21,"column":79}},{"start":{"line":21,"column":83},"end":{"line":21,"column":102}}]},"15":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":244},"end":{"line":21,"column":254}},{"start":{"line":21,"column":258},"end":{"line":21,"column":278}}]},"16":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":374},"end":{"line":21,"column":374}},{"start":{"line":21,"column":374},"end":{"line":21,"column":374}}]},"17":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":414},"end":{"line":21,"column":457}},{"start":{"line":21,"column":460},"end":{"line":21,"column":491}}]},"18":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"19":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":11},"end":{"line":66,"column":15}},{"start":{"line":66,"column":19},"end":{"line":66,"column":21}}]},"20":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"21":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":6},"end":{"line":101,"column":6}},{"start":{"line":101,"column":6},"end":{"line":101,"column":6}}]},"22":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":10},"end":{"line":101,"column":28}},{"start":{"line":101,"column":32},"end":{"line":101,"column":98}}]},"23":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]},"24":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":10},"end":{"line":135,"column":31}},{"start":{"line":135,"column":35},"end":{"line":135,"column":55}}]},"25":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":6},"end":{"line":153,"column":6}},{"start":{"line":153,"column":6},"end":{"line":153,"column":6}}]},"26":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":6}},{"start":{"line":161,"column":6},"end":{"line":161,"column":6}}]},"27":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":6}},{"start":{"line":167,"column":6},"end":{"line":167,"column":6}}]},"28":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":6}},{"start":{"line":171,"column":6},"end":{"line":171,"column":6}}]},"29":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"30":{"line":212,"type":"cond-expr","locations":[{"start":{"line":212,"column":47},"end":{"line":212,"column":124}},{"start":{"line":212,"column":127},"end":{"line":212,"column":129}}]},"31":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":13},"end":{"line":252,"column":27}},{"start":{"line":252,"column":31},"end":{"line":252,"column":45}}]},"32":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":6},"end":{"line":285,"column":6}},{"start":{"line":285,"column":6},"end":{"line":285,"column":6}}]},"33":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":6}},{"start":{"line":299,"column":6},"end":{"line":299,"column":6}}]},"34":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":6},"end":{"line":314,"column":6}},{"start":{"line":314,"column":6},"end":{"line":314,"column":6}}]},"35":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":6},"end":{"line":332,"column":6}},{"start":{"line":332,"column":6},"end":{"line":332,"column":6}}]},"36":{"line":334,"type":"cond-expr","locations":[{"start":{"line":334,"column":20},"end":{"line":334,"column":83}},{"start":{"line":334,"column":86},"end":{"line":334,"column":90}}]},"37":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":6},"end":{"line":350,"column":6}},{"start":{"line":350,"column":6},"end":{"line":350,"column":6}}]},"38":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":6},"end":{"line":352,"column":6}},{"start":{"line":352,"column":6},"end":{"line":352,"column":6}}]},"39":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":6},"end":{"line":370,"column":6}},{"start":{"line":370,"column":6},"end":{"line":370,"column":6}}]},"40":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":6},"end":{"line":388,"column":6}},{"start":{"line":388,"column":6},"end":{"line":388,"column":6}}]},"41":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":6},"end":{"line":410,"column":6}},{"start":{"line":410,"column":6},"end":{"line":410,"column":6}}]},"42":{"line":413,"type":"cond-expr","locations":[{"start":{"line":413,"column":31},"end":{"line":413,"column":36}},{"start":{"line":413,"column":39},"end":{"line":413,"column":43}}]},"43":{"line":435,"type":"cond-expr","locations":[{"start":{"line":435,"column":71},"end":{"line":435,"column":73}},{"start":{"line":435,"column":76},"end":{"line":435,"column":88}}]},"44":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":17},"end":{"line":435,"column":38}},{"start":{"line":435,"column":42},"end":{"line":435,"column":68}}]},"45":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":6},"end":{"line":437,"column":6}},{"start":{"line":437,"column":6},"end":{"line":437,"column":6}}]},"46":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":6},"end":{"line":439,"column":6}},{"start":{"line":439,"column":6},"end":{"line":439,"column":6}}]},"47":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":6},"end":{"line":461,"column":6}},{"start":{"line":461,"column":6},"end":{"line":461,"column":6}}]},"48":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":6},"end":{"line":484,"column":6}},{"start":{"line":484,"column":6},"end":{"line":484,"column":6}}]},"49":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":6},"end":{"line":555,"column":6}},{"start":{"line":555,"column":6},"end":{"line":555,"column":6}}]},"50":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":6},"end":{"line":557,"column":6}},{"start":{"line":557,"column":6},"end":{"line":557,"column":6}}]},"51":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":6},"end":{"line":559,"column":6}},{"start":{"line":559,"column":6},"end":{"line":559,"column":6}}]},"52":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":8},"end":{"line":567,"column":8}},{"start":{"line":567,"column":8},"end":{"line":567,"column":8}}]},"53":{"line":567,"type":"binary-expr","locations":[{"start":{"line":567,"column":12},"end":{"line":567,"column":40}},{"start":{"line":567,"column":44},"end":{"line":567,"column":72}}]},"54":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":10},"end":{"line":570,"column":10}},{"start":{"line":570,"column":10},"end":{"line":570,"column":10}}]},"55":{"line":587,"type":"if","locations":[{"start":{"line":587,"column":6},"end":{"line":587,"column":6}},{"start":{"line":587,"column":6},"end":{"line":587,"column":6}}]},"56":{"line":593,"type":"if","locations":[{"start":{"line":593,"column":13},"end":{"line":593,"column":13}},{"start":{"line":593,"column":13},"end":{"line":593,"column":13}}]},"57":{"line":620,"type":"binary-expr","locations":[{"start":{"line":620,"column":19},"end":{"line":620,"column":29}},{"start":{"line":620,"column":33},"end":{"line":620,"column":41}}]},"58":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":6},"end":{"line":622,"column":6}},{"start":{"line":622,"column":6},"end":{"line":622,"column":6}}]},"59":{"line":628,"type":"if","locations":[{"start":{"line":628,"column":6},"end":{"line":628,"column":6}},{"start":{"line":628,"column":6},"end":{"line":628,"column":6}}]},"60":{"line":658,"type":"cond-expr","locations":[{"start":{"line":658,"column":72},"end":{"line":658,"column":73}},{"start":{"line":658,"column":76},"end":{"line":658,"column":88}}]},"61":{"line":658,"type":"binary-expr","locations":[{"start":{"line":658,"column":18},"end":{"line":658,"column":39}},{"start":{"line":658,"column":43},"end":{"line":658,"column":69}}]},"62":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":6},"end":{"line":660,"column":6}},{"start":{"line":660,"column":6},"end":{"line":660,"column":6}}]},"63":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":6},"end":{"line":664,"column":6}},{"start":{"line":664,"column":6},"end":{"line":664,"column":6}}]},"64":{"line":680,"type":"binary-expr","locations":[{"start":{"line":680,"column":16},"end":{"line":680,"column":28}},{"start":{"line":680,"column":32},"end":{"line":680,"column":57}}]},"65":{"line":691,"type":"cond-expr","locations":[{"start":{"line":691,"column":28},"end":{"line":691,"column":46}},{"start":{"line":691,"column":49},"end":{"line":691,"column":51}}]},"66":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":6},"end":{"line":702,"column":6}},{"start":{"line":702,"column":6},"end":{"line":702,"column":6}}]},"67":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":6},"end":{"line":719,"column":6}},{"start":{"line":719,"column":6},"end":{"line":719,"column":6}}]},"68":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":6},"end":{"line":724,"column":6}},{"start":{"line":724,"column":6},"end":{"line":724,"column":6}}]},"69":{"line":769,"type":"if","locations":[{"start":{"line":769,"column":0},"end":{"line":769,"column":0}},{"start":{"line":769,"column":0},"end":{"line":769,"column":0}}]},"70":{"line":769,"type":"binary-expr","locations":[{"start":{"line":769,"column":4},"end":{"line":769,"column":32}},{"start":{"line":769,"column":36},"end":{"line":769,"column":74}}]},"71":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":4},"end":{"line":773,"column":4}},{"start":{"line":773,"column":4},"end":{"line":773,"column":4}}]},"72":{"line":782,"type":"if","locations":[{"start":{"line":782,"column":8},"end":{"line":782,"column":8}},{"start":{"line":782,"column":8},"end":{"line":782,"column":8}}]},"73":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":4},"end":{"line":841,"column":4}},{"start":{"line":841,"column":4},"end":{"line":841,"column":4}}]},"74":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":4},"end":{"line":844,"column":4}},{"start":{"line":844,"column":4},"end":{"line":844,"column":4}}]},"75":{"line":844,"type":"binary-expr","locations":[{"start":{"line":844,"column":8},"end":{"line":844,"column":30}},{"start":{"line":844,"column":34},"end":{"line":844,"column":61}}]},"76":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":4},"end":{"line":853,"column":4}},{"start":{"line":853,"column":4},"end":{"line":853,"column":4}}]},"77":{"line":856,"type":"if","locations":[{"start":{"line":856,"column":4},"end":{"line":856,"column":4}},{"start":{"line":856,"column":4},"end":{"line":856,"column":4}}]},"78":{"line":856,"type":"binary-expr","locations":[{"start":{"line":856,"column":8},"end":{"line":856,"column":19}},{"start":{"line":856,"column":23},"end":{"line":856,"column":42}}]},"79":{"line":859,"type":"if","locations":[{"start":{"line":859,"column":4},"end":{"line":859,"column":4}},{"start":{"line":859,"column":4},"end":{"line":859,"column":4}}]}},"code":["/**"," * Baobab Cursors"," * ==============="," *"," * Cursors created by selecting some data within a Baobab tree."," */","'use strict';","","Object.defineProperty(exports, '__esModule', {","  value: true","});","","var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();","","var _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }","","function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }","","var _emmett = require('emmett');","","var _emmett2 = _interopRequireDefault(_emmett);","","var _monkey = require('./monkey');","","var _type = require('./type');","","var _type2 = _interopRequireDefault(_type);","","var _helpers = require('./helpers');","","/**"," * Traversal helper function for dynamic cursors. Will throw a legible error"," * if traversal is not possible."," *"," * @param {string} method     - The method name, to create a correct error msg."," * @param {array}  solvedPath - The cursor's solved path."," */","function checkPossibilityOfDynamicTraversal(method, solvedPath) {","  if (!solvedPath) throw (0, _helpers.makeError)('Baobab.Cursor.' + method + ': ' + ('cannot use ' + method + ' on an unresolved dynamic path.'), { path: solvedPath });","}","","/**"," * Cursor class"," *"," * @constructor"," * @param {Baobab} tree   - The cursor's root."," * @param {array}  path   - The cursor's path in the tree."," * @param {string} hash   - The path's hash computed ahead by the tree."," */","","var Cursor = (function (_Emitter) {","  _inherits(Cursor, _Emitter);","","  function Cursor(tree, path, hash) {","    var _this = this;","","    _classCallCheck(this, Cursor);","","    _get(Object.getPrototypeOf(Cursor.prototype), 'constructor', this).call(this);","","    // If no path were to be provided, we fallback to an empty path (root)","    path = path || [];","","    // Privates","    this._identity = '[object Cursor]';","    this._archive = null;","","    // Properties","    this.tree = tree;","    this.path = path;","    this.hash = hash;","","    // State","    this.state = {","      killed: false,","      recording: false,","      undoing: false","    };","","    // Checking whether the given path is dynamic or not","    this._dynamicPath = _type2['default'].dynamicPath(this.path);","","    // Checking whether the given path will meet a monkey","    this._monkeyPath = _type2['default'].monkeyPath(this.tree._monkeys, this.path);","","    if (!this._dynamicPath) this.solvedPath = this.path;else this.solvedPath = (0, _helpers.getIn)(this.tree._data, this.path).solvedPath;","","    /**","     * Listener bound to the tree's writes so that cursors with dynamic paths","     * may update their solved path correctly.","     *","     * @param {object} event - The event fired by the tree.","     */","    this._writeHandler = function (_ref) {","      var data = _ref.data;","","      if (_this.state.killed || !(0, _helpers.solveUpdate)([data.path], _this._getComparedPaths())) return;","","      _this.solvedPath = (0, _helpers.getIn)(_this.tree._data, _this.path).solvedPath;","    };","","    /**","     * Function in charge of actually trigger the cursor's updates and","     * deal with the archived records.","     *","     * @note: probably should wrap the current solvedPath in closure to avoid","     * for tricky cases where it would fail.","     *","     * @param {mixed} previousData - the tree's previous data.","     */","    var fireUpdate = function fireUpdate(previousData) {","      var self = _this;","","      var eventData = Object.defineProperties({}, {","        previousData: {","          get: function get() {","            return (0, _helpers.getIn)(previousData, self.solvedPath).data;","          },","          configurable: true,","          enumerable: true","        },","        currentData: {","          get: function get() {","            return self.get();","          },","          configurable: true,","          enumerable: true","        }","      });","","      if (_this.state.recording && !_this.state.undoing) _this.archive.add(eventData.previousData);","","      _this.state.undoing = false;","","      return _this.emit('update', eventData);","    };","","    /**","     * Listener bound to the tree's updates and determining whether the","     * cursor is affected and should react accordingly.","     *","     * Note that this listener is lazily bound to the tree to be sure","     * one wouldn't leak listeners when only creating cursors for convenience","     * and not to listen to updates specifically.","     *","     * @param {object} event - The event fired by the tree.","     */","    this._updateHandler = function (event) {","      if (_this.state.killed) return;","","      var _event$data = event.data;","      var paths = _event$data.paths;","      var previousData = _event$data.previousData;","      var update = fireUpdate.bind(_this, previousData);","      var comparedPaths = _this._getComparedPaths();","","      if ((0, _helpers.solveUpdate)(paths, comparedPaths)) return update();","    };","","    // Lazy binding","    var bound = false;","    this._lazyBind = function () {","      if (bound) return;","","      bound = true;","","      if (_this._dynamicPath) _this.tree.on('write', _this._writeHandler);","","      return _this.tree.on('update', _this._updateHandler);","    };","","    // If the path is dynamic, we actually need to listen to the tree","    if (this._dynamicPath) {","      this._lazyBind();","    } else {","","      // Overriding the emitter `on` and `once` methods","      this.on = (0, _helpers.before)(this._lazyBind, this.on.bind(this));","      this.once = (0, _helpers.before)(this._lazyBind, this.once.bind(this));","    }","  }","","  /**","   * Method used to allow iterating over cursors containing list-type data.","   *","   * e.g. for(let i of cursor) { ... }","   *","   * @returns {object} -  Each item sequentially.","   */","","  /**","   * Internal helpers","   * -----------------","   */","","  /**","   * Method returning the paths of the tree watched over by the cursor and that","   * should be taken into account when solving a potential update.","   *","   * @return {array} - Array of paths to compare with a given update.","   */","","  _createClass(Cursor, [{","    key: '_getComparedPaths',","    value: function _getComparedPaths() {","","      // Checking whether we should keep track of some dependencies","      var additionalPaths = this._monkeyPath ? (0, _helpers.getIn)(this.tree._monkeys, this._monkeyPath).data.relatedPaths() : [];","","      return [this.solvedPath].concat(additionalPaths);","    }","","    /**","     * Predicates","     * -----------","     */","","    /**","     * Method returning whether the cursor is at root level.","     *","     * @return {boolean} - Is the cursor the root?","     */","  }, {","    key: 'isRoot',","    value: function isRoot() {","      return !this.path.length;","    }","","    /**","     * Method returning whether the cursor is at leaf level.","     *","     * @return {boolean} - Is the cursor a leaf?","     */","  }, {","    key: 'isLeaf',","    value: function isLeaf() {","      return _type2['default'].primitive(this._get().data);","    }","","    /**","     * Method returning whether the cursor is at branch level.","     *","     * @return {boolean} - Is the cursor a branch?","     */","  }, {","    key: 'isBranch',","    value: function isBranch() {","      return !this.isRoot() && !this.isLeaf();","    }","","    /**","     * Traversal Methods","     * ------------------","     */","","    /**","     * Method returning the root cursor.","     *","     * @return {Baobab} - The root cursor.","     */","  }, {","    key: 'root',","    value: function root() {","      return this.tree.select();","    }","","    /**","     * Method selecting a subpath as a new cursor.","     *","     * Arity (1):","     * @param  {path} path    - The path to select.","     *","     * Arity (*):","     * @param  {...step} path - The path to select.","     *","     * @return {Cursor}       - The created cursor.","     */","  }, {","    key: 'select',","    value: function select(path) {","      if (arguments.length > 1) path = (0, _helpers.arrayFrom)(arguments);","","      return this.tree.select(this.path.concat(path));","    }","","    /**","     * Method returning the parent node of the cursor or else `null` if the","     * cursor is already at root level.","     *","     * @return {Baobab} - The parent cursor.","     */","  }, {","    key: 'up',","    value: function up() {","      if (!this.isRoot()) return this.tree.select(this.path.slice(0, -1));","","      return null;","    }","","    /**","     * Method returning the child node of the cursor.","     *","     * @return {Baobab} - The child cursor.","     */","  }, {","    key: 'down',","    value: function down() {","      checkPossibilityOfDynamicTraversal('down', this.solvedPath);","","      if (!(this._get().data instanceof Array)) throw Error('Baobab.Cursor.down: cannot go down on a non-list type.');","","      return this.tree.select(this.solvedPath.concat(0));","    }","","    /**","     * Method returning the left sibling node of the cursor if this one is","     * pointing at a list. Returns `null` if this cursor is already leftmost.","     *","     * @return {Baobab} - The left sibling cursor.","     */","  }, {","    key: 'left',","    value: function left() {","      checkPossibilityOfDynamicTraversal('left', this.solvedPath);","","      var last = +this.solvedPath[this.solvedPath.length - 1];","","      if (isNaN(last)) throw Error('Baobab.Cursor.left: cannot go left on a non-list type.');","","      return last ? this.tree.select(this.solvedPath.slice(0, -1).concat(last - 1)) : null;","    }","","    /**","     * Method returning the right sibling node of the cursor if this one is","     * pointing at a list. Returns `null` if this cursor is already rightmost.","     *","     * @return {Baobab} - The right sibling cursor.","     */","  }, {","    key: 'right',","    value: function right() {","      checkPossibilityOfDynamicTraversal('right', this.solvedPath);","","      var last = +this.solvedPath[this.solvedPath.length - 1];","","      if (isNaN(last)) throw Error('Baobab.Cursor.right: cannot go right on a non-list type.');","","      if (last + 1 === this.up()._get().data.length) return null;","","      return this.tree.select(this.solvedPath.slice(0, -1).concat(last + 1));","    }","","    /**","     * Method returning the leftmost sibling node of the cursor if this one is","     * pointing at a list.","     *","     * @return {Baobab} - The leftmost sibling cursor.","     */","  }, {","    key: 'leftmost',","    value: function leftmost() {","      checkPossibilityOfDynamicTraversal('leftmost', this.solvedPath);","","      var last = +this.solvedPath[this.solvedPath.length - 1];","","      if (isNaN(last)) throw Error('Baobab.Cursor.leftmost: cannot go left on a non-list type.');","","      return this.tree.select(this.solvedPath.slice(0, -1).concat(0));","    }","","    /**","     * Method returning the rightmost sibling node of the cursor if this one is","     * pointing at a list.","     *","     * @return {Baobab} - The rightmost sibling cursor.","     */","  }, {","    key: 'rightmost',","    value: function rightmost() {","      checkPossibilityOfDynamicTraversal('rightmost', this.solvedPath);","","      var last = +this.solvedPath[this.solvedPath.length - 1];","","      if (isNaN(last)) throw Error('Baobab.Cursor.rightmost: cannot go right on a non-list type.');","","      var list = this.up()._get().data;","","      return this.tree.select(this.solvedPath.slice(0, -1).concat(list.length - 1));","    }","","    /**","     * Method mapping the children nodes of the cursor.","     *","     * @param  {function} fn      - The function to map.","     * @param  {object}   [scope] - An optional scope.","     * @return {array}            - The resultant array.","     */","  }, {","    key: 'map',","    value: function map(fn, scope) {","      checkPossibilityOfDynamicTraversal('map', this.solvedPath);","","      var array = this._get().data,","          l = arguments.length;","","      if (!_type2['default'].array(array)) throw Error('baobab.Cursor.map: cannot map a non-list type.');","","      return array.map(function (item, i) {","        return fn.call(l > 1 ? scope : this, this.select(i), i, array);","      }, this);","    }","","    /**","     * Getter Methods","     * ---------------","     */","","    /**","     * Internal get method. Basically contains the main body of the `get` method","     * without the event emitting. This is sometimes needed not to fire useless","     * events.","     *","     * @param  {path}   [path=[]]       - Path to get in the tree.","     * @return {object} info            - The resultant information.","     * @return {mixed}  info.data       - Data at path.","     * @return {array}  info.solvedPath - The path solved when getting.","     */","  }, {","    key: '_get',","    value: function _get() {","      var path = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];","","      if (!_type2['default'].path(path)) throw (0, _helpers.makeError)('Baobab.Cursor.getters: invalid path.', { path: path });","","      if (!this.solvedPath) return { data: undefined, solvedPath: null, exists: false };","","      return (0, _helpers.getIn)(this.tree._data, this.solvedPath.concat(path));","    }","","    /**","     * Method used to check whether a certain path exists in the tree starting","     * from the current cursor.","     *","     * Arity (1):","     * @param  {path}   path           - Path to check in the tree.","     *","     * Arity (2):","     * @param {..step}  path           - Path to check in the tree.","     *","     * @return {boolean}               - Does the given path exists?","     */","  }, {","    key: 'exists',","    value: function exists(path) {","      path = (0, _helpers.coercePath)(path);","","      if (arguments.length > 1) path = (0, _helpers.arrayFrom)(arguments);","","      return this._get(path).exists;","    }","","    /**","     * Method used to get data from the tree. Will fire a `get` event from the","     * tree so that the user may sometimes react upon it to fetch data, for","     * instance.","     *","     * Arity (1):","     * @param  {path}   path           - Path to get in the tree.","     *","     * Arity (2):","     * @param  {..step} path           - Path to get in the tree.","     *","     * @return {mixed}                 - Data at path.","     */","  }, {","    key: 'get',","    value: function get(path) {","      path = (0, _helpers.coercePath)(path);","","      if (arguments.length > 1) path = (0, _helpers.arrayFrom)(arguments);","","      var _get2 = this._get(path);","","      var data = _get2.data;","      var solvedPath = _get2.solvedPath;","","      // Emitting the event","      this.tree.emit('get', { data: data, solvedPath: solvedPath, path: this.path.concat(path) });","","      return data;","    }","","    /**","     * Method used to shallow clone data from the tree.","     *","     * Arity (1):","     * @param  {path}   path           - Path to get in the tree.","     *","     * Arity (2):","     * @param  {..step} path           - Path to get in the tree.","     *","     * @return {mixed}                 - Cloned data at path.","     */","  }, {","    key: 'clone',","    value: function clone() {","      var data = this.get.apply(this, arguments);","","      return (0, _helpers.shallowClone)(data);","    }","","    /**","     * Method used to deep clone data from the tree.","     *","     * Arity (1):","     * @param  {path}   path           - Path to get in the tree.","     *","     * Arity (2):","     * @param  {..step} path           - Path to get in the tree.","     *","     * @return {mixed}                 - Cloned data at path.","     */","  }, {","    key: 'deepClone',","    value: function deepClone() {","      var data = this.get.apply(this, arguments);","","      return (0, _helpers.deepClone)(data);","    }","","    /**","     * Method used to return raw data from the tree, by carefully avoiding","     * computed one.","     *","     * @todo: should be more performant as the cloning should happen as well as","     * when dropping computed data.","     *","     * Arity (1):","     * @param  {path}   path           - Path to serialize in the tree.","     *","     * Arity (2):","     * @param  {..step} path           - Path to serialize in the tree.","     *","     * @return {mixed}                 - The retrieved raw data.","     */","  }, {","    key: 'serialize',","    value: function serialize(path) {","      path = (0, _helpers.coercePath)(path);","","      if (arguments.length > 1) path = (0, _helpers.arrayFrom)(arguments);","","      if (!_type2['default'].path(path)) throw (0, _helpers.makeError)('Baobab.Cursor.getters: invalid path.', { path: path });","","      if (!this.solvedPath) return undefined;","","      var fullPath = this.solvedPath.concat(path);","","      var data = (0, _helpers.deepClone)((0, _helpers.getIn)(this.tree._data, fullPath).data),","          monkeys = (0, _helpers.getIn)(this.tree._monkeys, fullPath).data;","","      var dropComputedData = function dropComputedData(d, m) {","        if (!_type2['default'].object(m) || !_type2['default'].object(d)) return;","","        for (var k in m) {","          if (m[k] instanceof _monkey.Monkey) delete d[k];else dropComputedData(d[k], m[k]);","        }","      };","","      dropComputedData(data, monkeys);","      return data;","    }","","    /**","     * Method used to project some of the data at cursor onto a map or a list.","     *","     * @param  {object|array} projection - The projection's formal definition.","     * @return {object|array}            - The resultant map/list.","     */","  }, {","    key: 'project',","    value: function project(projection) {","      if (_type2['default'].object(projection)) {","        var data = {};","","        for (var k in projection) {","          data[k] = this.get(projection[k]);","        }return data;","      } else if (_type2['default'].array(projection)) {","        var data = [];","","        for (var i = 0, l = projection.length; i < l; i++) {","          data.push(this.get(projection[i]));","        }return data;","      }","","      throw (0, _helpers.makeError)('Baobab.Cursor.project: wrong projection.', { projection: projection });","    }","","    /**","     * History Methods","     * ----------------","     */","","    /**","     * Methods starting to record the cursor's successive states.","     *","     * @param  {integer} [maxRecords] - Maximum records to keep in memory. Note","     *                                  that if no number is provided, the cursor","     *                                  will keep everything.","     * @return {Cursor}               - The cursor instance for chaining purposes.","     */","  }, {","    key: 'startRecording',","    value: function startRecording(maxRecords) {","      maxRecords = maxRecords || Infinity;","","      if (maxRecords < 1) throw (0, _helpers.makeError)('Baobab.Cursor.startRecording: invalid max records.', {","        value: maxRecords","      });","","      this.state.recording = true;","","      if (this.archive) return this;","","      // Lazy binding","      this._lazyBind();","","      this.archive = new _helpers.Archive(maxRecords);","      return this;","    }","","    /**","     * Methods stopping to record the cursor's successive states.","     *","     * @return {Cursor} - The cursor instance for chaining purposes.","     */","  }, {","    key: 'stopRecording',","    value: function stopRecording() {","      this.state.recording = false;","      return this;","    }","","    /**","     * Methods undoing n steps of the cursor's recorded states.","     *","     * @param  {integer} [steps=1] - The number of steps to rollback.","     * @return {Cursor}            - The cursor instance for chaining purposes.","     */","  }, {","    key: 'undo',","    value: function undo() {","      var steps = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];","","      if (!this.state.recording) throw new Error('Baobab.Cursor.undo: cursor is not recording.');","","      var record = this.archive.back(steps);","","      if (!record) throw Error('Baobab.Cursor.undo: cannot find a relevant record.');","","      this.state.undoing = true;","      this.set(record);","","      return this;","    }","","    /**","     * Methods returning whether the cursor has a recorded history.","     *","     * @return {boolean} - `true` if the cursor has a recorded history?","     */","  }, {","    key: 'hasHistory',","    value: function hasHistory() {","      return !!(this.archive && this.archive.get().length);","    }","","    /**","     * Methods returning the cursor's history.","     *","     * @return {array} - The cursor's history.","     */","  }, {","    key: 'getHistory',","    value: function getHistory() {","      return this.archive ? this.archive.get() : [];","    }","","    /**","     * Methods clearing the cursor's history.","     *","     * @return {Cursor} - The cursor instance for chaining purposes.","     */","  }, {","    key: 'clearHistory',","    value: function clearHistory() {","      if (this.archive) this.archive.clear();","      return this;","    }","","    /**","     * Releasing","     * ----------","     */","","    /**","     * Methods releasing the cursor from memory.","     */","  }, {","    key: 'release',","    value: function release() {","","      // Removing listeners on parent","      if (this._dynamicPath) this.tree.off('write', this._writeHandler);","","      this.tree.off('update', this._updateHandler);","","      // Unsubscribe from the parent","      if (this.hash) delete this.tree._cursors[this.hash];","","      // Dereferencing","      delete this.tree;","      delete this.path;","      delete this.solvedPath;","      delete this.archive;","","      // Killing emitter","      this.kill();","      this.state.killed = true;","    }","","    /**","     * Output","     * -------","     */","","    /**","     * Overriding the `toJSON` method for convenient use with JSON.stringify.","     *","     * @return {mixed} - Data at cursor.","     */","  }, {","    key: 'toJSON',","    value: function toJSON() {","      return this.serialize();","    }","","    /**","     * Overriding the `toString` method for debugging purposes.","     *","     * @return {string} - The cursor's identity.","     */","  }, {","    key: 'toString',","    value: function toString() {","      return this._identity;","    }","  }]);","","  return Cursor;","})(_emmett2['default']);","","exports['default'] = Cursor;","if (typeof Symbol === 'function' && typeof Symbol.iterator !== 'undefined') {","  Cursor.prototype[Symbol.iterator] = function () {","    var array = this._get().data;","","    if (!_type2['default'].array(array)) throw Error('baobab.Cursor.@@iterate: cannot iterate a non-list type.');","","    var i = 0;","","    var cursor = this,","        length = array.length;","","    return {","      next: function next() {","        if (i < length) {","          return {","            value: cursor.select(i++)","          };","        }","","        return {","          done: true","        };","      }","    };","  };","}","","/**"," * Setter Methods"," * ---------------"," *"," * Those methods are dynamically assigned to the class for DRY reasons."," */","","// Not using a Set so that ES5 consumers don't pay a bundle size price","var INTRANSITIVE_SETTERS = {","  unset: true,","  pop: true,","  shift: true","};","","/**"," * Function creating a setter method for the Cursor class."," *"," * @param {string}   name          - the method's name."," * @param {function} [typeChecker] - a function checking that the given value is"," *                                   valid for the given operation."," */","function makeSetter(name, typeChecker) {","","  /**","   * Binding a setter method to the Cursor class and having the following","   * definition.","   *","   * Note: this is not really possible to make those setters variadic because","   * it would create an impossible polymorphism with path.","   *","   * @todo: perform value validation elsewhere so that tree.update can","   * beneficiate from it.","   *","   * Arity (1):","   * @param  {mixed} value - New value to set at cursor's path.","   *","   * Arity (2):","   * @param  {path}  path  - Subpath to update starting from cursor's.","   * @param  {mixed} value - New value to set.","   *","   * @return {mixed}       - Data at path.","   */","  Cursor.prototype[name] = function (path, value) {","","    // We should warn the user if he applies to many arguments to the function","    if (arguments.length > 2) throw (0, _helpers.makeError)('Baobab.Cursor.' + name + ': too many arguments.');","","    // Handling arities","    if (arguments.length === 1 && !INTRANSITIVE_SETTERS[name]) {","      value = path;","      path = [];","    }","","    // Coerce path","    path = (0, _helpers.coercePath)(path);","","    // Checking the path's validity","    if (!_type2['default'].path(path)) throw (0, _helpers.makeError)('Baobab.Cursor.' + name + ': invalid path.', { path: path });","","    // Checking the value's validity","    if (typeChecker && !typeChecker(value)) throw (0, _helpers.makeError)('Baobab.Cursor.' + name + ': invalid value.', { path: path, value: value });","","    // Checking the solvability of the cursor's dynamic path","    if (!this.solvedPath) throw (0, _helpers.makeError)('Baobab.Cursor.' + name + ': the dynamic path of the cursor cannot be solved.', { path: this.path });","","    var fullPath = this.solvedPath.concat(path);","","    // Filing the update to the tree","    return this.tree.update(fullPath, {","      type: name,","      value: value","    });","  };","}","","/**"," * Making the necessary setters."," */","makeSetter('set');","makeSetter('unset');","makeSetter('apply', _type2['default']['function']);","makeSetter('push');","makeSetter('concat', _type2['default'].array);","makeSetter('unshift');","makeSetter('pop');","makeSetter('shift');","makeSetter('splice', _type2['default'].splicer);","makeSetter('merge', _type2['default'].object);","makeSetter('deepMerge', _type2['default'].object);","module.exports = exports['default'];"],"l":{"9":1,"13":29,"15":1,"17":2,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"42":1,"43":0,"55":1,"56":1,"58":1,"59":0,"61":0,"63":0,"66":0,"69":0,"70":0,"73":0,"74":0,"75":0,"78":0,"85":0,"88":0,"90":0,"98":0,"99":0,"101":0,"103":0,"115":0,"116":0,"118":0,"121":0,"128":0,"135":0,"137":0,"139":0,"152":0,"153":0,"155":0,"156":0,"157":0,"158":0,"159":0,"161":0,"165":0,"166":0,"167":0,"169":0,"171":0,"173":0,"177":0,"178":0,"182":0,"183":0,"207":1,"212":0,"214":0,"230":0,"241":0,"252":0,"268":0,"285":0,"287":0,"299":0,"301":0,"312":0,"314":0,"316":0,"328":0,"330":0,"332":0,"334":0,"346":0,"348":0,"350":0,"352":0,"354":0,"366":0,"368":0,"370":0,"372":0,"384":0,"386":0,"388":0,"390":0,"392":0,"405":0,"407":0,"410":0,"412":0,"413":0,"435":0,"437":0,"439":0,"441":0,"459":0,"461":0,"463":0,"482":0,"484":0,"486":0,"488":0,"489":0,"492":0,"494":0,"511":0,"513":0,"530":0,"532":0,"553":0,"555":0,"557":0,"559":0,"561":0,"563":0,"566":0,"567":0,"569":0,"570":0,"574":0,"575":0,"587":0,"588":0,"590":0,"591":0,"592":0,"593":0,"594":0,"596":0,"597":0,"598":0,"601":0,"620":0,"622":0,"626":0,"628":0,"631":0,"633":0,"634":0,"645":0,"646":0,"658":0,"660":0,"662":0,"664":0,"666":0,"667":0,"669":0,"680":0,"691":0,"702":0,"703":0,"719":0,"721":0,"724":0,"727":0,"728":0,"729":0,"730":0,"733":0,"734":0,"750":0,"761":0,"765":1,"768":1,"769":1,"770":1,"771":0,"773":0,"775":0,"777":0,"780":0,"782":0,"783":0,"788":0,"804":1,"817":1,"838":11,"841":0,"844":0,"845":0,"846":0,"850":0,"853":0,"856":0,"859":0,"861":0,"864":0,"874":1,"875":1,"876":1,"877":1,"878":1,"879":1,"880":1,"881":1,"882":1,"883":1,"884":1,"885":1}},"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/monkey.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/monkey.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":3,"7":3,"8":3,"9":3,"10":3,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":1,"18":2,"19":1,"20":0,"21":0,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":1,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":1},"b":{"1":[3,3],"2":[3,0],"3":[1,0],"4":[0,1],"5":[0,2],"6":[2,2],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"f":{"1":1,"2":1,"3":1,"4":2,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":20},"end":{"line":13,"column":32}}},"2":{"name":"defineProperties","line":13,"loc":{"start":{"line":13,"column":34},"end":{"line":13,"column":75}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":358},"end":{"line":13,"column":406}}},"4":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"5":{"name":"_classCallCheck","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}}},"6":{"name":"MonkeyDefinition","line":38,"loc":{"start":{"line":38,"column":23},"end":{"line":38,"column":61}}},"7":{"name":"(anonymous_7)","line":52,"loc":{"start":{"line":52,"column":50},"end":{"line":52,"column":63}}},"8":{"name":"(anonymous_8)","line":72,"loc":{"start":{"line":72,"column":30},"end":{"line":72,"column":43}}},"9":{"name":"(anonymous_9)","line":91,"loc":{"start":{"line":91,"column":14},"end":{"line":91,"column":26}}},"10":{"name":"Monkey","line":92,"loc":{"start":{"line":92,"column":2},"end":{"line":92,"column":48}}},"11":{"name":"(anonymous_11)","line":107,"loc":{"start":{"line":107,"column":55},"end":{"line":107,"column":73}}},"12":{"name":"(anonymous_12)","line":111,"loc":{"start":{"line":111,"column":55},"end":{"line":111,"column":68}}},"13":{"name":"(anonymous_13)","line":131,"loc":{"start":{"line":131,"column":25},"end":{"line":131,"column":41}}},"14":{"name":"(anonymous_14)","line":149,"loc":{"start":{"line":149,"column":29},"end":{"line":149,"column":46}}},"15":{"name":"relatedPaths","line":182,"loc":{"start":{"line":182,"column":11},"end":{"line":182,"column":35}}},"16":{"name":"(anonymous_16)","line":189,"loc":{"start":{"line":189,"column":69},"end":{"line":189,"column":82}}},"17":{"name":"(anonymous_17)","line":193,"loc":{"start":{"line":193,"column":56},"end":{"line":193,"column":69}}},"18":{"name":"(anonymous_18)","line":199,"loc":{"start":{"line":199,"column":26},"end":{"line":199,"column":60}}},"19":{"name":"update","line":219,"loc":{"start":{"line":219,"column":11},"end":{"line":219,"column":29}}},"20":{"name":"(anonymous_20)","line":222,"loc":{"start":{"line":222,"column":24},"end":{"line":222,"column":51}}},"21":{"name":"(anonymous_21)","line":226,"loc":{"start":{"line":226,"column":15},"end":{"line":226,"column":27}}},"22":{"name":"release","line":271,"loc":{"start":{"line":271,"column":11},"end":{"line":271,"column":30}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":11,"column":3}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":566}},"3":{"start":{"line":13,"column":34},"end":{"line":13,"column":350}},"4":{"start":{"line":13,"column":77},"end":{"line":13,"column":348}},"5":{"start":{"line":13,"column":118},"end":{"line":13,"column":144}},"6":{"start":{"line":13,"column":145},"end":{"line":13,"column":200}},"7":{"start":{"line":13,"column":201},"end":{"line":13,"column":232}},"8":{"start":{"line":13,"column":233},"end":{"line":13,"column":287}},"9":{"start":{"line":13,"column":260},"end":{"line":13,"column":287}},"10":{"start":{"line":13,"column":288},"end":{"line":13,"column":346}},"11":{"start":{"line":13,"column":351},"end":{"line":13,"column":560}},"12":{"start":{"line":13,"column":408},"end":{"line":13,"column":476}},"13":{"start":{"line":13,"column":424},"end":{"line":13,"column":476}},"14":{"start":{"line":13,"column":477},"end":{"line":13,"column":537}},"15":{"start":{"line":13,"column":494},"end":{"line":13,"column":537}},"16":{"start":{"line":13,"column":538},"end":{"line":13,"column":557}},"17":{"start":{"line":15,"column":0},"end":{"line":15,"column":97}},"18":{"start":{"line":15,"column":39},"end":{"line":15,"column":95}},"19":{"start":{"line":17,"column":0},"end":{"line":17,"column":153}},"20":{"start":{"line":17,"column":50},"end":{"line":17,"column":151}},"21":{"start":{"line":17,"column":92},"end":{"line":17,"column":149}},"22":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"23":{"start":{"line":21,"column":0},"end":{"line":21,"column":43}},"24":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}},"25":{"start":{"line":25,"column":0},"end":{"line":25,"column":48}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}},"27":{"start":{"line":38,"column":0},"end":{"line":87,"column":1}},"28":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"29":{"start":{"line":41,"column":2},"end":{"line":41,"column":42}},"30":{"start":{"line":43,"column":2},"end":{"line":43,"column":66}},"31":{"start":{"line":45,"column":2},"end":{"line":45,"column":115}},"32":{"start":{"line":45,"column":19},"end":{"line":45,"column":115}},"33":{"start":{"line":47,"column":2},"end":{"line":47,"column":25}},"34":{"start":{"line":49,"column":2},"end":{"line":69,"column":3}},"35":{"start":{"line":50,"column":4},"end":{"line":50,"column":33}},"36":{"start":{"line":51,"column":4},"end":{"line":51,"column":47}},"37":{"start":{"line":52,"column":4},"end":{"line":54,"column":7}},"38":{"start":{"line":53,"column":6},"end":{"line":53,"column":33}},"39":{"start":{"line":55,"column":4},"end":{"line":55,"column":44}},"40":{"start":{"line":57,"column":4},"end":{"line":58,"column":21}},"41":{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},"42":{"start":{"line":61,"column":6},"end":{"line":61,"column":15}},"43":{"start":{"line":62,"column":6},"end":{"line":62,"column":50}},"44":{"start":{"line":65,"column":4},"end":{"line":65,"column":57}},"45":{"start":{"line":66,"column":4},"end":{"line":66,"column":51}},"46":{"start":{"line":67,"column":4},"end":{"line":67,"column":33}},"47":{"start":{"line":68,"column":4},"end":{"line":68,"column":27}},"48":{"start":{"line":72,"column":2},"end":{"line":74,"column":5}},"49":{"start":{"line":73,"column":4},"end":{"line":73,"column":24}},"50":{"start":{"line":77,"column":2},"end":{"line":77,"column":72}},"51":{"start":{"line":89,"column":0},"end":{"line":89,"column":44}},"52":{"start":{"line":91,"column":0},"end":{"line":288,"column":5}},"53":{"start":{"line":92,"column":2},"end":{"line":171,"column":3}},"54":{"start":{"line":93,"column":4},"end":{"line":93,"column":22}},"55":{"start":{"line":95,"column":4},"end":{"line":95,"column":34}},"56":{"start":{"line":98,"column":4},"end":{"line":98,"column":21}},"57":{"start":{"line":99,"column":4},"end":{"line":99,"column":27}},"58":{"start":{"line":100,"column":4},"end":{"line":100,"column":33}},"59":{"start":{"line":103,"column":4},"end":{"line":104,"column":82}},"60":{"start":{"line":106,"column":4},"end":{"line":117,"column":5}},"61":{"start":{"line":107,"column":6},"end":{"line":110,"column":13}},"62":{"start":{"line":108,"column":8},"end":{"line":108,"column":41}},"63":{"start":{"line":109,"column":8},"end":{"line":109,"column":19}},"64":{"start":{"line":111,"column":6},"end":{"line":113,"column":9}},"65":{"start":{"line":112,"column":8},"end":{"line":112,"column":36}},"66":{"start":{"line":115,"column":6},"end":{"line":115,"column":49}},"67":{"start":{"line":116,"column":6},"end":{"line":116,"column":38}},"68":{"start":{"line":120,"column":4},"end":{"line":122,"column":6}},"69":{"start":{"line":131,"column":4},"end":{"line":140,"column":6}},"70":{"start":{"line":132,"column":6},"end":{"line":132,"column":32}},"71":{"start":{"line":134,"column":6},"end":{"line":134,"column":38}},"72":{"start":{"line":134,"column":31},"end":{"line":134,"column":38}},"73":{"start":{"line":137,"column":6},"end":{"line":137,"column":79}},"74":{"start":{"line":139,"column":6},"end":{"line":139,"column":37}},"75":{"start":{"line":139,"column":21},"end":{"line":139,"column":37}},"76":{"start":{"line":149,"column":4},"end":{"line":163,"column":6}},"77":{"start":{"line":150,"column":6},"end":{"line":150,"column":34}},"78":{"start":{"line":151,"column":6},"end":{"line":151,"column":37}},"79":{"start":{"line":152,"column":6},"end":{"line":152,"column":33}},"80":{"start":{"line":154,"column":6},"end":{"line":154,"column":38}},"81":{"start":{"line":154,"column":31},"end":{"line":154,"column":38}},"82":{"start":{"line":157,"column":6},"end":{"line":157,"column":36}},"83":{"start":{"line":157,"column":29},"end":{"line":157,"column":36}},"84":{"start":{"line":160,"column":6},"end":{"line":160,"column":84}},"85":{"start":{"line":162,"column":6},"end":{"line":162,"column":37}},"86":{"start":{"line":162,"column":21},"end":{"line":162,"column":37}},"87":{"start":{"line":166,"column":4},"end":{"line":166,"column":46}},"88":{"start":{"line":167,"column":4},"end":{"line":167,"column":52}},"89":{"start":{"line":170,"column":4},"end":{"line":170,"column":18}},"90":{"start":{"line":180,"column":2},"end":{"line":285,"column":6}},"91":{"start":{"line":183,"column":6},"end":{"line":183,"column":24}},"92":{"start":{"line":185,"column":6},"end":{"line":185,"column":96}},"93":{"start":{"line":187,"column":6},"end":{"line":187,"column":28}},"94":{"start":{"line":189,"column":6},"end":{"line":191,"column":36}},"95":{"start":{"line":189,"column":43},"end":{"line":191,"column":9}},"96":{"start":{"line":190,"column":8},"end":{"line":190,"column":68}},"97":{"start":{"line":191,"column":14},"end":{"line":191,"column":36}},"98":{"start":{"line":193,"column":6},"end":{"line":195,"column":9}},"99":{"start":{"line":194,"column":8},"end":{"line":194,"column":71}},"100":{"start":{"line":197,"column":6},"end":{"line":197,"column":37}},"101":{"start":{"line":197,"column":24},"end":{"line":197,"column":37}},"102":{"start":{"line":199,"column":6},"end":{"line":208,"column":13}},"103":{"start":{"line":200,"column":8},"end":{"line":200,"column":82}},"104":{"start":{"line":202,"column":8},"end":{"line":202,"column":64}},"105":{"start":{"line":202,"column":25},"end":{"line":202,"column":64}},"106":{"start":{"line":205,"column":8},"end":{"line":205,"column":87}},"107":{"start":{"line":207,"column":8},"end":{"line":207,"column":69}},"108":{"start":{"line":220,"column":6},"end":{"line":220,"column":52}},"109":{"start":{"line":222,"column":6},"end":{"line":238,"column":43}},"110":{"start":{"line":223,"column":8},"end":{"line":224,"column":36}},"111":{"start":{"line":226,"column":8},"end":{"line":237,"column":10}},"112":{"start":{"line":228,"column":10},"end":{"line":234,"column":11}},"113":{"start":{"line":229,"column":12},"end":{"line":229,"column":82}},"114":{"start":{"line":231,"column":12},"end":{"line":231,"column":107}},"115":{"start":{"line":231,"column":75},"end":{"line":231,"column":107}},"116":{"start":{"line":233,"column":12},"end":{"line":233,"column":35}},"117":{"start":{"line":236,"column":10},"end":{"line":236,"column":23}},"118":{"start":{"line":240,"column":6},"end":{"line":240,"column":37}},"119":{"start":{"line":243,"column":6},"end":{"line":258,"column":7}},"120":{"start":{"line":244,"column":8},"end":{"line":247,"column":35}},"121":{"start":{"line":249,"column":8},"end":{"line":255,"column":30}},"122":{"start":{"line":257,"column":8},"end":{"line":257,"column":60}},"123":{"start":{"line":257,"column":30},"end":{"line":257,"column":60}},"124":{"start":{"line":261,"column":6},"end":{"line":261,"column":67}},"125":{"start":{"line":263,"column":6},"end":{"line":263,"column":18}},"126":{"start":{"line":274,"column":6},"end":{"line":274,"column":49}},"127":{"start":{"line":275,"column":6},"end":{"line":275,"column":55}},"128":{"start":{"line":276,"column":6},"end":{"line":276,"column":31}},"129":{"start":{"line":281,"column":6},"end":{"line":281,"column":29}},"130":{"start":{"line":282,"column":6},"end":{"line":282,"column":27}},"131":{"start":{"line":283,"column":6},"end":{"line":283,"column":23}},"132":{"start":{"line":287,"column":2},"end":{"line":287,"column":16}},"133":{"start":{"line":290,"column":0},"end":{"line":290,"column":24}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":169},"end":{"line":13,"column":190}},{"start":{"line":13,"column":194},"end":{"line":13,"column":199}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":233},"end":{"line":13,"column":233}},{"start":{"line":13,"column":233},"end":{"line":13,"column":233}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":408},"end":{"line":13,"column":408}},{"start":{"line":13,"column":408},"end":{"line":13,"column":408}}]},"4":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":477},"end":{"line":13,"column":477}},{"start":{"line":13,"column":477},"end":{"line":13,"column":477}}]},"5":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":94}}]},"6":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"7":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":50},"end":{"line":17,"column":50}},{"start":{"line":17,"column":50},"end":{"line":17,"column":50}}]},"8":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"9":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"10":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":22},"end":{"line":51,"column":40}},{"start":{"line":51,"column":44},"end":{"line":51,"column":46}}]},"11":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":19},"end":{"line":55,"column":37}},{"start":{"line":55,"column":41},"end":{"line":55,"column":43}}]},"12":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"13":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"14":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":6},"end":{"line":134,"column":6}},{"start":{"line":134,"column":6},"end":{"line":134,"column":6}}]},"15":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":6},"end":{"line":139,"column":6}},{"start":{"line":139,"column":6},"end":{"line":139,"column":6}}]},"16":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":6},"end":{"line":154,"column":6}},{"start":{"line":154,"column":6},"end":{"line":154,"column":6}}]},"17":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":6},"end":{"line":157,"column":6}},{"start":{"line":157,"column":6},"end":{"line":157,"column":6}}]},"18":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":6}},{"start":{"line":162,"column":6},"end":{"line":162,"column":6}}]},"19":{"line":185,"type":"cond-expr","locations":[{"start":{"line":185,"column":76},"end":{"line":185,"column":80}},{"start":{"line":185,"column":83},"end":{"line":185,"column":95}}]},"20":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":22},"end":{"line":185,"column":43}},{"start":{"line":185,"column":47},"end":{"line":185,"column":73}}]},"21":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":189,"column":6}},{"start":{"line":189,"column":6},"end":{"line":189,"column":6}}]},"22":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":24},"end":{"line":193,"column":33}},{"start":{"line":193,"column":37},"end":{"line":195,"column":8}}]},"23":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":6},"end":{"line":197,"column":6}},{"start":{"line":197,"column":6},"end":{"line":197,"column":6}}]},"24":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":8}},{"start":{"line":202,"column":8},"end":{"line":202,"column":8}}]},"25":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":10},"end":{"line":228,"column":10}},{"start":{"line":228,"column":10},"end":{"line":228,"column":10}}]},"26":{"line":229,"type":"cond-expr","locations":[{"start":{"line":229,"column":67},"end":{"line":229,"column":73}},{"start":{"line":229,"column":76},"end":{"line":229,"column":80}}]},"27":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":12},"end":{"line":231,"column":12}},{"start":{"line":231,"column":12},"end":{"line":231,"column":12}}]},"28":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":16},"end":{"line":231,"column":38}},{"start":{"line":231,"column":42},"end":{"line":231,"column":73}}]},"29":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":6},"end":{"line":243,"column":6}},{"start":{"line":243,"column":6},"end":{"line":243,"column":6}}]},"30":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":8},"end":{"line":257,"column":8}},{"start":{"line":257,"column":8},"end":{"line":257,"column":8}}]}},"code":["/**"," * Baobab Monkeys"," * ==============="," *"," * Exposing both handy monkey definitions and the underlying working class."," */","'use strict';","","Object.defineProperty(exports, '__esModule', {","  value: true","});","","var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }","","var _type = require('./type');","","var _type2 = _interopRequireDefault(_type);","","var _update2 = require('./update');","","var _update3 = _interopRequireDefault(_update2);","","var _helpers = require('./helpers');","","/**"," * Monkey Definition class"," * Note: The only reason why this is a class is to be able to spot it within"," * otherwise ordinary data."," *"," * @constructor"," * @param {array|object} definition - The formal definition of the monkey."," */","","var MonkeyDefinition = function MonkeyDefinition(definition) {","  var _this = this;","","  _classCallCheck(this, MonkeyDefinition);","","  var monkeyType = _type2['default'].monkeyDefinition(definition);","","  if (!monkeyType) throw (0, _helpers.makeError)('Baobab.monkey: invalid definition.', { definition: definition });","","  this.type = monkeyType;","","  if (this.type === 'object') {","    this.getter = definition.get;","    this.projection = definition.cursors || {};","    this.paths = Object.keys(this.projection).map(function (k) {","      return _this.projection[k];","    });","    this.options = definition.options || {};","  } else {","    var offset = 1,","        options = {};","","    if (_type2['default'].object(definition[definition.length - 1])) {","      offset++;","      options = definition[definition.length - 1];","    }","","    this.getter = definition[definition.length - offset];","    this.projection = definition.slice(0, -offset);","    this.paths = this.projection;","    this.options = options;","  }","","  // Coercing paths for convenience","  this.paths = this.paths.map(function (p) {","    return [].concat(p);","  });","","  // Does the definition contain dynamic paths","  this.hasDynamicPaths = this.paths.some(_type2['default'].dynamicPath);","}","","/**"," * Monkey core class"," *"," * @constructor"," * @param {Baobab}           tree       - The bound tree."," * @param {MonkeyDefinition} definition - A definition instance."," */",";","","exports.MonkeyDefinition = MonkeyDefinition;","","var Monkey = (function () {","  function Monkey(tree, pathInTree, definition) {","    var _this2 = this;","","    _classCallCheck(this, Monkey);","","    // Properties","    this.tree = tree;","    this.path = pathInTree;","    this.definition = definition;","","    // Adapting the definition's paths & projection to this monkey's case","    var projection = definition.projection,","        relative = _helpers.solveRelativePath.bind(null, pathInTree.slice(0, -1));","","    if (definition.type === 'object') {","      this.projection = Object.keys(projection).reduce(function (acc, k) {","        acc[k] = relative(projection[k]);","        return acc;","      }, {});","      this.depPaths = Object.keys(this.projection).map(function (k) {","        return _this2.projection[k];","      });","    } else {","      this.projection = projection.map(relative);","      this.depPaths = this.projection;","    }","","    // Internal state","    this.state = {","      killed: false","    };","","    /**","     * Listener on the tree's `write` event.","     *","     * When the tree writes, this listener will check whether the updated paths","     * are of any use to the monkey and, if so, will update the tree's node","     * where the monkey sits.","     */","    this.writeListener = function (_ref) {","      var path = _ref.data.path;","","      if (_this2.state.killed) return;","","      // Is the monkey affected by the current write event?","      var concerned = (0, _helpers.solveUpdate)([path], _this2.relatedPaths());","","      if (concerned) _this2.update();","    };","","    /**","     * Listener on the tree's `monkey` event.","     *","     * When another monkey updates, this listener will check whether the","     * updated paths are of any use to the monkey and, if so, will update the","     * tree's node where the monkey sits.","     */","    this.recursiveListener = function (_ref2) {","      var _ref2$data = _ref2.data;","      var monkey = _ref2$data.monkey;","      var path = _ref2$data.path;","","      if (_this2.state.killed) return;","","      // Breaking if this is the same monkey","      if (_this2 === monkey) return;","","      // Is the monkey affected by the current monkey event?","      var concerned = (0, _helpers.solveUpdate)([path], _this2.relatedPaths(false));","","      if (concerned) _this2.update();","    };","","    // Binding listeners","    this.tree.on('write', this.writeListener);","    this.tree.on('_monkey', this.recursiveListener);","","    // Updating relevant node","    this.update();","  }","","  /**","   * Method returning solved paths related to the monkey.","   *","   * @param  {boolean} recursive - Should we compute recursive paths?","   * @return {array}             - An array of related paths.","   */","","  _createClass(Monkey, [{","    key: 'relatedPaths',","    value: function relatedPaths() {","      var _this3 = this;","","      var recursive = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];","","      var paths = undefined;","","      if (this.definition.hasDynamicPaths) paths = this.depPaths.map(function (p) {","        return (0, _helpers.getIn)(_this3.tree._data, p).solvedPath;","      });else paths = this.depPaths;","","      var isRecursive = recursive && this.depPaths.some(function (p) {","        return !!_type2['default'].monkeyPath(_this3.tree._monkeys, p);","      });","","      if (!isRecursive) return paths;","","      return paths.reduce(function (accumulatedPaths, path) {","        var monkeyPath = _type2['default'].monkeyPath(_this3.tree._monkeys, path);","","        if (!monkeyPath) return accumulatedPaths.concat([path]);","","        // Solving recursive path","        var relatedMonkey = (0, _helpers.getIn)(_this3.tree._monkeys, monkeyPath).data;","","        return accumulatedPaths.concat(relatedMonkey.relatedPaths());","      }, []);","    }","","    /**","     * Method used to update the tree's internal data with a lazy getter holding","     * the computed data.","     *","     * @return {Monkey} - Returns itself for chaining purposes.","     */","  }, {","    key: 'update',","    value: function update() {","      var deps = this.tree.project(this.projection);","","      var lazyGetter = (function (tree, def, data) {","        var cache = null,","            alreadyComputed = false;","","        return function () {","","          if (!alreadyComputed) {","            cache = def.getter.apply(tree, def.type === 'object' ? [data] : data);","","            if (tree.options.immutable && def.options.immutable !== false) (0, _helpers.deepFreeze)(cache);","","            alreadyComputed = true;","          }","","          return cache;","        };","      })(this.tree, this.definition, deps);","","      lazyGetter.isLazyGetter = true;","","      // Should we write the lazy getter in the tree or solve it right now?","      if (this.tree.options.lazyMonkeys) {","        this.tree._data = (0, _update3['default'])(this.tree._data, this.path, {","          type: 'monkey',","          value: lazyGetter","        }, this.tree.options).data;","      } else {","        var result = (0, _update3['default'])(this.tree._data, this.path, {","          type: 'set',","          value: lazyGetter(),","          options: {","            mutableLeaf: !this.definition.options.immutable","          }","        }, this.tree.options);","","        if ('data' in result) this.tree._data = result.data;","      }","","      // Notifying the monkey's update so we can handle recursivity","      this.tree.emit('_monkey', { monkey: this, path: this.path });","","      return this;","    }","","    /**","     * Method releasing the monkey from memory.","     */","  }, {","    key: 'release',","    value: function release() {","","      // Unbinding events","      this.tree.off('write', this.writeListener);","      this.tree.off('_monkey', this.recursiveListener);","      this.state.killed = true;","","      // Deleting properties","      // NOTE: not deleting this.definition because some strange things happen","      // in the _refreshMonkeys method. See #372.","      delete this.projection;","      delete this.depPaths;","      delete this.tree;","    }","  }]);","","  return Monkey;","})();","","exports.Monkey = Monkey;"],"l":{"9":1,"13":3,"15":2,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"38":1,"39":0,"41":0,"43":0,"45":0,"47":0,"49":0,"50":0,"51":0,"52":0,"53":0,"55":0,"57":0,"60":0,"61":0,"62":0,"65":0,"66":0,"67":0,"68":0,"72":0,"73":0,"77":0,"89":1,"91":1,"92":1,"93":0,"95":0,"98":0,"99":0,"100":0,"103":0,"106":0,"107":0,"108":0,"109":0,"111":0,"112":0,"115":0,"116":0,"120":0,"131":0,"132":0,"134":0,"137":0,"139":0,"149":0,"150":0,"151":0,"152":0,"154":0,"157":0,"160":0,"162":0,"166":0,"167":0,"170":0,"180":1,"183":0,"185":0,"187":0,"189":0,"190":0,"191":0,"193":0,"194":0,"197":0,"199":0,"200":0,"202":0,"205":0,"207":0,"220":0,"222":0,"223":0,"226":0,"228":0,"229":0,"231":0,"233":0,"236":0,"240":0,"243":0,"244":0,"249":0,"257":0,"261":0,"263":0,"274":0,"275":0,"276":0,"281":0,"282":0,"283":0,"287":1,"290":1}},"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/type.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/type.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":1,"67":1,"68":0,"69":1,"70":1},"b":{"1":[0,0,0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"anyOf","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":32}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":22},"end":{"line":34,"column":35}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":13},"end":{"line":50,"column":31}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":14},"end":{"line":60,"column":32}}},"5":{"name":"(anonymous_5)","line":70,"loc":{"start":{"line":70,"column":14},"end":{"line":70,"column":32}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":14},"end":{"line":80,"column":32}}},"7":{"name":"(anonymous_7)","line":90,"loc":{"start":{"line":90,"column":19},"end":{"line":90,"column":37}}},"8":{"name":"(anonymous_8)","line":100,"loc":{"start":{"line":100,"column":17},"end":{"line":100,"column":35}}},"9":{"name":"(anonymous_9)","line":116,"loc":{"start":{"line":116,"column":15},"end":{"line":116,"column":33}}},"10":{"name":"(anonymous_10)","line":134,"loc":{"start":{"line":134,"column":12},"end":{"line":134,"column":30}}},"11":{"name":"(anonymous_11)","line":137,"loc":{"start":{"line":137,"column":33},"end":{"line":137,"column":49}}},"12":{"name":"(anonymous_12)","line":148,"loc":{"start":{"line":148,"column":19},"end":{"line":148,"column":35}}},"13":{"name":"(anonymous_13)","line":149,"loc":{"start":{"line":149,"column":19},"end":{"line":149,"column":35}}},"14":{"name":"(anonymous_14)","line":162,"loc":{"start":{"line":162,"column":18},"end":{"line":162,"column":40}}},"15":{"name":"(anonymous_15)","line":189,"loc":{"start":{"line":189,"column":18},"end":{"line":189,"column":44}}},"16":{"name":"(anonymous_16)","line":201,"loc":{"start":{"line":201,"column":24},"end":{"line":201,"column":46}}},"17":{"name":"(anonymous_17)","line":204,"loc":{"start":{"line":204,"column":143},"end":{"line":204,"column":156}}},"18":{"name":"(anonymous_18)","line":214,"loc":{"start":{"line":214,"column":105},"end":{"line":214,"column":118}}},"19":{"name":"(anonymous_19)","line":230,"loc":{"start":{"line":230,"column":22},"end":{"line":230,"column":44}}},"20":{"name":"(anonymous_20)","line":231,"loc":{"start":{"line":231,"column":66},"end":{"line":231,"column":79}}},"21":{"name":"(anonymous_21)","line":246,"loc":{"start":{"line":246,"column":21},"end":{"line":246,"column":39}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":13,"column":3}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":14}},"4":{"start":{"line":33,"column":0},"end":{"line":37,"column":1}},"5":{"start":{"line":34,"column":2},"end":{"line":36,"column":5}},"6":{"start":{"line":35,"column":4},"end":{"line":35,"column":27}},"7":{"start":{"line":50,"column":0},"end":{"line":52,"column":2}},"8":{"start":{"line":51,"column":2},"end":{"line":51,"column":31}},"9":{"start":{"line":60,"column":0},"end":{"line":62,"column":2}},"10":{"start":{"line":61,"column":2},"end":{"line":61,"column":246}},"11":{"start":{"line":70,"column":0},"end":{"line":72,"column":2}},"12":{"start":{"line":71,"column":2},"end":{"line":71,"column":36}},"13":{"start":{"line":80,"column":0},"end":{"line":82,"column":2}},"14":{"start":{"line":81,"column":2},"end":{"line":81,"column":36}},"15":{"start":{"line":90,"column":0},"end":{"line":92,"column":2}},"16":{"start":{"line":91,"column":2},"end":{"line":91,"column":38}},"17":{"start":{"line":100,"column":0},"end":{"line":102,"column":2}},"18":{"start":{"line":101,"column":2},"end":{"line":101,"column":35}},"19":{"start":{"line":116,"column":0},"end":{"line":121,"column":2}},"20":{"start":{"line":117,"column":2},"end":{"line":117,"column":61}},"21":{"start":{"line":117,"column":48},"end":{"line":117,"column":61}},"22":{"start":{"line":118,"column":2},"end":{"line":118,"column":59}},"23":{"start":{"line":118,"column":46},"end":{"line":118,"column":59}},"24":{"start":{"line":120,"column":2},"end":{"line":120,"column":60}},"25":{"start":{"line":132,"column":0},"end":{"line":132,"column":66}},"26":{"start":{"line":134,"column":0},"end":{"line":140,"column":2}},"27":{"start":{"line":135,"column":2},"end":{"line":135,"column":61}},"28":{"start":{"line":135,"column":48},"end":{"line":135,"column":61}},"29":{"start":{"line":137,"column":2},"end":{"line":139,"column":5}},"30":{"start":{"line":138,"column":4},"end":{"line":138,"column":41}},"31":{"start":{"line":148,"column":0},"end":{"line":152,"column":2}},"32":{"start":{"line":149,"column":2},"end":{"line":151,"column":5}},"33":{"start":{"line":150,"column":4},"end":{"line":150,"column":55}},"34":{"start":{"line":162,"column":0},"end":{"line":180,"column":2}},"35":{"start":{"line":163,"column":2},"end":{"line":163,"column":19}},"36":{"start":{"line":165,"column":2},"end":{"line":167,"column":20}},"37":{"start":{"line":169,"column":2},"end":{"line":177,"column":3}},"38":{"start":{"line":170,"column":4},"end":{"line":170,"column":26}},"39":{"start":{"line":172,"column":4},"end":{"line":172,"column":43}},"40":{"start":{"line":172,"column":31},"end":{"line":172,"column":43}},"41":{"start":{"line":174,"column":4},"end":{"line":174,"column":19}},"42":{"start":{"line":176,"column":4},"end":{"line":176,"column":52}},"43":{"start":{"line":176,"column":37},"end":{"line":176,"column":52}},"44":{"start":{"line":179,"column":2},"end":{"line":179,"column":14}},"45":{"start":{"line":189,"column":0},"end":{"line":193,"column":2}},"46":{"start":{"line":190,"column":2},"end":{"line":190,"column":67}},"47":{"start":{"line":192,"column":2},"end":{"line":192,"column":78}},"48":{"start":{"line":201,"column":0},"end":{"line":222,"column":2}},"49":{"start":{"line":203,"column":2},"end":{"line":219,"column":3}},"50":{"start":{"line":204,"column":4},"end":{"line":206,"column":21}},"51":{"start":{"line":205,"column":6},"end":{"line":205,"column":46}},"52":{"start":{"line":206,"column":9},"end":{"line":206,"column":21}},"53":{"start":{"line":208,"column":4},"end":{"line":208,"column":20}},"54":{"start":{"line":209,"column":9},"end":{"line":219,"column":3}},"55":{"start":{"line":210,"column":4},"end":{"line":210,"column":19}},"56":{"start":{"line":212,"column":4},"end":{"line":212,"column":65}},"57":{"start":{"line":212,"column":56},"end":{"line":212,"column":65}},"58":{"start":{"line":214,"column":4},"end":{"line":216,"column":20}},"59":{"start":{"line":215,"column":6},"end":{"line":215,"column":26}},"60":{"start":{"line":216,"column":8},"end":{"line":216,"column":20}},"61":{"start":{"line":218,"column":4},"end":{"line":218,"column":19}},"62":{"start":{"line":221,"column":2},"end":{"line":221,"column":14}},"63":{"start":{"line":230,"column":0},"end":{"line":234,"column":2}},"64":{"start":{"line":231,"column":2},"end":{"line":233,"column":5}},"65":{"start":{"line":232,"column":4},"end":{"line":232,"column":36}},"66":{"start":{"line":244,"column":0},"end":{"line":244,"column":126}},"67":{"start":{"line":246,"column":0},"end":{"line":248,"column":2}},"68":{"start":{"line":247,"column":2},"end":{"line":247,"column":76}},"69":{"start":{"line":250,"column":0},"end":{"line":250,"column":26}},"70":{"start":{"line":251,"column":0},"end":{"line":251,"column":36}}},"branchMap":{"1":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":9},"end":{"line":61,"column":15}},{"start":{"line":61,"column":19},"end":{"line":61,"column":45}},{"start":{"line":61,"column":49},"end":{"line":61,"column":71}},{"start":{"line":61,"column":75},"end":{"line":61,"column":100}},{"start":{"line":61,"column":104},"end":{"line":61,"column":131}},{"start":{"line":61,"column":135},"end":{"line":61,"column":188}},{"start":{"line":61,"column":192},"end":{"line":61,"column":245}}]},"2":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":137},"end":{"line":61,"column":162}},{"start":{"line":61,"column":166},"end":{"line":61,"column":187}}]},"3":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":194},"end":{"line":61,"column":219}},{"start":{"line":61,"column":223},"end":{"line":61,"column":244}}]},"4":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"5":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":25}},{"start":{"line":117,"column":29},"end":{"line":117,"column":46}}]},"6":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"7":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":6},"end":{"line":118,"column":23}},{"start":{"line":118,"column":27},"end":{"line":118,"column":44}}]},"8":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]},"9":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":13}},{"start":{"line":135,"column":17},"end":{"line":135,"column":29}},{"start":{"line":135,"column":33},"end":{"line":135,"column":46}}]},"10":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":11},"end":{"line":150,"column":33}},{"start":{"line":150,"column":37},"end":{"line":150,"column":54}}]},"11":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"12":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"13":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":9},"end":{"line":192,"column":19}},{"start":{"line":192,"column":23},"end":{"line":192,"column":37}},{"start":{"line":192,"column":41},"end":{"line":192,"column":77}}]},"14":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"15":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]},"16":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":8},"end":{"line":204,"column":41}},{"start":{"line":204,"column":45},"end":{"line":204,"column":63}},{"start":{"line":204,"column":68},"end":{"line":204,"column":100}},{"start":{"line":204,"column":104},"end":{"line":206,"column":6}}]},"17":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":9},"end":{"line":209,"column":9}},{"start":{"line":209,"column":9},"end":{"line":209,"column":9}}]},"18":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"19":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"20":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":8},"end":{"line":214,"column":65}},{"start":{"line":214,"column":69},"end":{"line":216,"column":6}}]},"21":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":9},"end":{"line":231,"column":32}},{"start":{"line":231,"column":36},"end":{"line":233,"column":4}}]},"22":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":9},"end":{"line":247,"column":35}},{"start":{"line":247,"column":39},"end":{"line":247,"column":75}}]}},"code":["/**"," * Baobab Type Checking"," * ====================="," *"," * Helpers functions used throughout the library to perform some type"," * tests at runtime."," *"," */","'use strict';","","Object.defineProperty(exports, '__esModule', {","  value: true","});","","var _monkey = require('./monkey');","","var type = {};","","/**"," * Helpers"," * --------"," */","","/**"," * Checking whether the given variable is of any of the given types."," *"," * @todo   Optimize this function by dropping `some`."," *"," * @param  {mixed} target  - Variable to test."," * @param  {array} allowed - Array of allowed types."," * @return {boolean}"," */","function anyOf(target, allowed) {","  return allowed.some(function (t) {","    return type[t](target);","  });","}","","/**"," * Simple types"," * -------------"," */","","/**"," * Checking whether the given variable is an array."," *"," * @param  {mixed} target - Variable to test."," * @return {boolean}"," */","type.array = function (target) {","  return Array.isArray(target);","};","","/**"," * Checking whether the given variable is an object."," *"," * @param  {mixed} target - Variable to test."," * @return {boolean}"," */","type.object = function (target) {","  return target && typeof target === 'object' && !Array.isArray(target) && !(target instanceof Date) && !(target instanceof RegExp) && !(typeof Map === 'function' && target instanceof Map) && !(typeof Set === 'function' && target instanceof Set);","};","","/**"," * Checking whether the given variable is a string."," *"," * @param  {mixed} target - Variable to test."," * @return {boolean}"," */","type.string = function (target) {","  return typeof target === 'string';","};","","/**"," * Checking whether the given variable is a number."," *"," * @param  {mixed} target - Variable to test."," * @return {boolean}"," */","type.number = function (target) {","  return typeof target === 'number';","};","","/**"," * Checking whether the given variable is a function."," *"," * @param  {mixed} target - Variable to test."," * @return {boolean}"," */","type['function'] = function (target) {","  return typeof target === 'function';","};","","/**"," * Checking whether the given variable is a JavaScript primitive."," *"," * @param  {mixed} target - Variable to test."," * @return {boolean}"," */","type.primitive = function (target) {","  return target !== Object(target);","};","","/**"," * Complex types"," * --------------"," */","","/**"," * Checking whether the given variable is a valid splicer."," *"," * @param  {mixed} target    - Variable to test."," * @param  {array} [allowed] - Optional valid types in path."," * @return {boolean}"," */","type.splicer = function (target) {","  if (!type.array(target) || target.length < 1) return false;","  if (target.length > 1 && isNaN(+target[1])) return false;","","  return anyOf(target[0], ['number', 'function', 'object']);","};","","/**"," * Checking whether the given variable is a valid cursor path."," *"," * @param  {mixed} target    - Variable to test."," * @param  {array} [allowed] - Optional valid types in path."," * @return {boolean}"," */","","// Order is important for performance reasons","var ALLOWED_FOR_PATH = ['string', 'number', 'function', 'object'];","","type.path = function (target) {","  if (!target && target !== 0 && target !== '') return false;","","  return [].concat(target).every(function (step) {","    return anyOf(step, ALLOWED_FOR_PATH);","  });","};","","/**"," * Checking whether the given path is a dynamic one."," *"," * @param  {mixed} path - The path to test."," * @return {boolean}"," */","type.dynamicPath = function (path) {","  return path.some(function (step) {","    return type['function'](step) || type.object(step);","  });","};","","/**"," * Retrieve any monkey subpath in the given path or null if the path never comes"," * across computed data."," *"," * @param  {mixed} data - The data to test."," * @param  {array} path - The path to test."," * @return {boolean}"," */","type.monkeyPath = function (data, path) {","  var subpath = [];","","  var c = data,","      i = undefined,","      l = undefined;","","  for (i = 0, l = path.length; i < l; i++) {","    subpath.push(path[i]);","","    if (typeof c !== 'object') return null;","","    c = c[path[i]];","","    if (c instanceof _monkey.Monkey) return subpath;","  }","","  return null;","};","","/**"," * Check if the given object property is a lazy getter used by a monkey."," *"," * @param  {mixed}   o           - The target object."," * @param  {string}  propertyKey - The property to test."," * @return {boolean}"," */","type.lazyGetter = function (o, propertyKey) {","  var descriptor = Object.getOwnPropertyDescriptor(o, propertyKey);","","  return descriptor && descriptor.get && descriptor.get.isLazyGetter === true;","};","","/**"," * Returns the type of the given monkey definition or `null` if invalid."," *"," * @param  {mixed} definition - The definition to check."," * @return {string|null}"," */","type.monkeyDefinition = function (definition) {","","  if (type.object(definition)) {","    if (!type['function'](definition.get) || definition.cursors && (!type.object(definition.cursors) || !Object.keys(definition.cursors).every(function (k) {","      return type.path(definition.cursors[k]);","    }))) return null;","","    return 'object';","  } else if (type.array(definition)) {","    var offset = 1;","","    if (type.object(definition[definition.length - 1])) offset++;","","    if (!type['function'](definition[definition.length - offset]) || !definition.slice(0, -offset).every(function (p) {","      return type.path(p);","    })) return null;","","    return 'array';","  }","","  return null;","};","","/**"," * Checking whether the given watcher definition is valid."," *"," * @param  {mixed}   definition - The definition to check."," * @return {boolean}"," */","type.watcherMapping = function (definition) {","  return type.object(definition) && Object.keys(definition).every(function (k) {","    return type.path(definition[k]);","  });","};","","/**"," * Checking whether the given string is a valid operation type."," *"," * @param  {mixed} string - The string to test."," * @return {boolean}"," */","","// Ordered by likeliness","var VALID_OPERATIONS = ['set', 'apply', 'push', 'unshift', 'concat', 'pop', 'shift', 'deepMerge', 'merge', 'splice', 'unset'];","","type.operationType = function (string) {","  return typeof string === 'string' && !! ~VALID_OPERATIONS.indexOf(string);","};","","exports['default'] = type;","module.exports = exports['default'];"],"l":{"11":1,"15":1,"17":1,"33":1,"34":0,"35":0,"50":1,"51":0,"60":1,"61":0,"70":1,"71":0,"80":1,"81":0,"90":1,"91":0,"100":1,"101":0,"116":1,"117":0,"118":0,"120":0,"132":1,"134":1,"135":0,"137":0,"138":0,"148":1,"149":0,"150":0,"162":1,"163":0,"165":0,"169":0,"170":0,"172":0,"174":0,"176":0,"179":0,"189":1,"190":0,"192":0,"201":1,"203":0,"204":0,"205":0,"206":0,"208":0,"209":0,"210":0,"212":0,"214":0,"215":0,"216":0,"218":0,"221":0,"230":1,"231":0,"232":0,"244":1,"246":1,"247":0,"250":1,"251":1}},"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/update.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/update.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"_toConsumableArray","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}}},"3":{"name":"err","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}}},"4":{"name":"update","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":39}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":11,"column":3}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":97}},"4":{"start":{"line":14,"column":39},"end":{"line":14,"column":95}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":191}},"6":{"start":{"line":16,"column":35},"end":{"line":16,"column":189}},"7":{"start":{"line":16,"column":61},"end":{"line":16,"column":141}},"8":{"start":{"line":16,"column":124},"end":{"line":16,"column":141}},"9":{"start":{"line":16,"column":142},"end":{"line":16,"column":154}},"10":{"start":{"line":16,"column":164},"end":{"line":16,"column":187}},"11":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":43}},"13":{"start":{"line":22,"column":0},"end":{"line":22,"column":36}},"14":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":176}},"16":{"start":{"line":39,"column":0},"end":{"line":230,"column":1}},"17":{"start":{"line":40,"column":2},"end":{"line":40,"column":85}},"18":{"start":{"line":41,"column":2},"end":{"line":41,"column":37}},"19":{"start":{"line":42,"column":2},"end":{"line":42,"column":30}},"20":{"start":{"line":43,"column":2},"end":{"line":43,"column":45}},"21":{"start":{"line":44,"column":2},"end":{"line":44,"column":84}},"22":{"start":{"line":47,"column":2},"end":{"line":49,"column":23}},"23":{"start":{"line":52,"column":2},"end":{"line":55,"column":20}},"24":{"start":{"line":57,"column":2},"end":{"line":223,"column":3}},"25":{"start":{"line":62,"column":4},"end":{"line":62,"column":21}},"26":{"start":{"line":65,"column":4},"end":{"line":65,"column":35}},"27":{"start":{"line":65,"column":15},"end":{"line":65,"column":35}},"28":{"start":{"line":68,"column":4},"end":{"line":217,"column":9}},"29":{"start":{"line":73,"column":6},"end":{"line":201,"column":29}},"30":{"start":{"line":76,"column":8},"end":{"line":76,"column":63}},"31":{"start":{"line":76,"column":41},"end":{"line":76,"column":63}},"32":{"start":{"line":78,"column":8},"end":{"line":88,"column":9}},"33":{"start":{"line":79,"column":10},"end":{"line":83,"column":13}},"34":{"start":{"line":84,"column":15},"end":{"line":88,"column":9}},"35":{"start":{"line":85,"column":10},"end":{"line":85,"column":51}},"36":{"start":{"line":87,"column":10},"end":{"line":87,"column":23}},"37":{"start":{"line":94,"column":11},"end":{"line":201,"column":29}},"38":{"start":{"line":95,"column":10},"end":{"line":99,"column":13}},"39":{"start":{"line":105,"column":13},"end":{"line":201,"column":29}},"40":{"start":{"line":106,"column":12},"end":{"line":106,"column":37}},"41":{"start":{"line":109,"column":12},"end":{"line":109,"column":68}},"42":{"start":{"line":109,"column":46},"end":{"line":109,"column":68}},"43":{"start":{"line":111,"column":12},"end":{"line":121,"column":13}},"44":{"start":{"line":112,"column":14},"end":{"line":116,"column":17}},"45":{"start":{"line":117,"column":19},"end":{"line":121,"column":13}},"46":{"start":{"line":118,"column":14},"end":{"line":118,"column":56}},"47":{"start":{"line":120,"column":14},"end":{"line":120,"column":28}},"48":{"start":{"line":127,"column":15},"end":{"line":201,"column":29}},"49":{"start":{"line":128,"column":14},"end":{"line":128,"column":90}},"50":{"start":{"line":128,"column":50},"end":{"line":128,"column":90}},"51":{"start":{"line":130,"column":14},"end":{"line":130,"column":85}},"52":{"start":{"line":130,"column":35},"end":{"line":130,"column":63}},"53":{"start":{"line":130,"column":68},"end":{"line":130,"column":85}},"54":{"start":{"line":136,"column":17},"end":{"line":201,"column":29}},"55":{"start":{"line":137,"column":16},"end":{"line":137,"column":95}},"56":{"start":{"line":137,"column":52},"end":{"line":137,"column":95}},"57":{"start":{"line":139,"column":16},"end":{"line":139,"column":90}},"58":{"start":{"line":139,"column":37},"end":{"line":139,"column":65}},"59":{"start":{"line":139,"column":70},"end":{"line":139,"column":90}},"60":{"start":{"line":145,"column":19},"end":{"line":201,"column":29}},"61":{"start":{"line":146,"column":18},"end":{"line":146,"column":96}},"62":{"start":{"line":146,"column":54},"end":{"line":146,"column":96}},"63":{"start":{"line":148,"column":18},"end":{"line":148,"column":99}},"64":{"start":{"line":148,"column":39},"end":{"line":148,"column":65}},"65":{"start":{"line":148,"column":70},"end":{"line":148,"column":99}},"66":{"start":{"line":154,"column":21},"end":{"line":201,"column":29}},"67":{"start":{"line":155,"column":20},"end":{"line":155,"column":98}},"68":{"start":{"line":155,"column":56},"end":{"line":155,"column":98}},"69":{"start":{"line":157,"column":20},"end":{"line":157,"column":134}},"70":{"start":{"line":157,"column":41},"end":{"line":157,"column":98}},"71":{"start":{"line":157,"column":103},"end":{"line":157,"column":134}},"72":{"start":{"line":163,"column":23},"end":{"line":201,"column":29}},"73":{"start":{"line":164,"column":22},"end":{"line":164,"column":97}},"74":{"start":{"line":164,"column":58},"end":{"line":164,"column":97}},"75":{"start":{"line":166,"column":22},"end":{"line":166,"column":100}},"76":{"start":{"line":166,"column":43},"end":{"line":166,"column":84}},"77":{"start":{"line":166,"column":89},"end":{"line":166,"column":100}},"78":{"start":{"line":172,"column":25},"end":{"line":201,"column":29}},"79":{"start":{"line":173,"column":24},"end":{"line":173,"column":101}},"80":{"start":{"line":173,"column":60},"end":{"line":173,"column":101}},"81":{"start":{"line":175,"column":24},"end":{"line":175,"column":103}},"82":{"start":{"line":175,"column":45},"end":{"line":175,"column":85}},"83":{"start":{"line":175,"column":90},"end":{"line":175,"column":103}},"84":{"start":{"line":181,"column":27},"end":{"line":201,"column":29}},"85":{"start":{"line":182,"column":26},"end":{"line":182,"column":123}},"86":{"start":{"line":182,"column":59},"end":{"line":182,"column":71}},"87":{"start":{"line":182,"column":76},"end":{"line":182,"column":123}},"88":{"start":{"line":182,"column":108},"end":{"line":182,"column":123}},"89":{"start":{"line":188,"column":29},"end":{"line":201,"column":29}},"90":{"start":{"line":189,"column":28},"end":{"line":189,"column":107}},"91":{"start":{"line":189,"column":65},"end":{"line":189,"column":107}},"92":{"start":{"line":191,"column":28},"end":{"line":191,"column":152}},"93":{"start":{"line":191,"column":49},"end":{"line":191,"column":100}},"94":{"start":{"line":191,"column":105},"end":{"line":191,"column":152}},"95":{"start":{"line":197,"column":31},"end":{"line":201,"column":29}},"96":{"start":{"line":198,"column":30},"end":{"line":198,"column":113}},"97":{"start":{"line":198,"column":67},"end":{"line":198,"column":113}},"98":{"start":{"line":200,"column":30},"end":{"line":200,"column":148}},"99":{"start":{"line":200,"column":51},"end":{"line":200,"column":99}},"100":{"start":{"line":200,"column":104},"end":{"line":200,"column":148}},"101":{"start":{"line":204,"column":6},"end":{"line":204,"column":87}},"102":{"start":{"line":204,"column":59},"end":{"line":204,"column":87}},"103":{"start":{"line":206,"column":6},"end":{"line":206,"column":12}},"104":{"start":{"line":210,"column":9},"end":{"line":217,"column":9}},"105":{"start":{"line":211,"column":8},"end":{"line":211,"column":18}},"106":{"start":{"line":215,"column":11},"end":{"line":217,"column":9}},"107":{"start":{"line":216,"column":10},"end":{"line":216,"column":50}},"108":{"start":{"line":220,"column":4},"end":{"line":220,"column":57}},"109":{"start":{"line":220,"column":33},"end":{"line":220,"column":57}},"110":{"start":{"line":222,"column":4},"end":{"line":222,"column":13}},"111":{"start":{"line":226,"column":2},"end":{"line":226,"column":70}},"112":{"start":{"line":226,"column":42},"end":{"line":226,"column":70}},"113":{"start":{"line":229,"column":2},"end":{"line":229,"column":42}},"114":{"start":{"line":232,"column":0},"end":{"line":232,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":94}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":35},"end":{"line":16,"column":35}},{"start":{"line":16,"column":35},"end":{"line":16,"column":35}}]},"4":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":67},"end":{"line":40,"column":69}},{"start":{"line":40,"column":72},"end":{"line":40,"column":84}}]},"5":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":13},"end":{"line":40,"column":34}},{"start":{"line":40,"column":38},"end":{"line":40,"column":64}}]},"6":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":60},"end":{"line":44,"column":62}},{"start":{"line":44,"column":65},"end":{"line":44,"column":83}}]},"7":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"9":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":6}},{"start":{"line":73,"column":6},"end":{"line":73,"column":6}}]},"10":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"11":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":21}},{"start":{"line":76,"column":25},"end":{"line":76,"column":39}}]},"12":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":8}},{"start":{"line":78,"column":8},"end":{"line":78,"column":8}}]},"13":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":15},"end":{"line":84,"column":15}},{"start":{"line":84,"column":15},"end":{"line":84,"column":15}}]},"14":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":19},"end":{"line":84,"column":34}},{"start":{"line":84,"column":38},"end":{"line":84,"column":67}}]},"15":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":11},"end":{"line":94,"column":11}},{"start":{"line":94,"column":11},"end":{"line":94,"column":11}}]},"16":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":13},"end":{"line":105,"column":13}},{"start":{"line":105,"column":13},"end":{"line":105,"column":13}}]},"17":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":12},"end":{"line":109,"column":12}},{"start":{"line":109,"column":12},"end":{"line":109,"column":12}}]},"18":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":16},"end":{"line":109,"column":25}},{"start":{"line":109,"column":29},"end":{"line":109,"column":44}}]},"19":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":12}},{"start":{"line":111,"column":12},"end":{"line":111,"column":12}}]},"20":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":19},"end":{"line":117,"column":19}},{"start":{"line":117,"column":19},"end":{"line":117,"column":19}}]},"21":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":15},"end":{"line":127,"column":15}},{"start":{"line":127,"column":15},"end":{"line":127,"column":15}}]},"22":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":14},"end":{"line":128,"column":14}},{"start":{"line":128,"column":14},"end":{"line":128,"column":14}}]},"23":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":14},"end":{"line":130,"column":14}},{"start":{"line":130,"column":14},"end":{"line":130,"column":14}}]},"24":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":17},"end":{"line":136,"column":17}},{"start":{"line":136,"column":17},"end":{"line":136,"column":17}}]},"25":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":16},"end":{"line":137,"column":16}},{"start":{"line":137,"column":16},"end":{"line":137,"column":16}}]},"26":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":16},"end":{"line":139,"column":16}},{"start":{"line":139,"column":16},"end":{"line":139,"column":16}}]},"27":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":19},"end":{"line":145,"column":19}},{"start":{"line":145,"column":19},"end":{"line":145,"column":19}}]},"28":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":18},"end":{"line":146,"column":18}},{"start":{"line":146,"column":18},"end":{"line":146,"column":18}}]},"29":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":18},"end":{"line":148,"column":18}},{"start":{"line":148,"column":18},"end":{"line":148,"column":18}}]},"30":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":21},"end":{"line":154,"column":21}},{"start":{"line":154,"column":21},"end":{"line":154,"column":21}}]},"31":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":20},"end":{"line":155,"column":20}},{"start":{"line":155,"column":20},"end":{"line":155,"column":20}}]},"32":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":20},"end":{"line":157,"column":20}},{"start":{"line":157,"column":20},"end":{"line":157,"column":20}}]},"33":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":23},"end":{"line":163,"column":23}},{"start":{"line":163,"column":23},"end":{"line":163,"column":23}}]},"34":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":22},"end":{"line":164,"column":22}},{"start":{"line":164,"column":22},"end":{"line":164,"column":22}}]},"35":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":22},"end":{"line":166,"column":22}},{"start":{"line":166,"column":22},"end":{"line":166,"column":22}}]},"36":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":25},"end":{"line":172,"column":25}},{"start":{"line":172,"column":25},"end":{"line":172,"column":25}}]},"37":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":24},"end":{"line":173,"column":24}},{"start":{"line":173,"column":24},"end":{"line":173,"column":24}}]},"38":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":24},"end":{"line":175,"column":24}},{"start":{"line":175,"column":24},"end":{"line":175,"column":24}}]},"39":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":27},"end":{"line":181,"column":27}},{"start":{"line":181,"column":27},"end":{"line":181,"column":27}}]},"40":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":26},"end":{"line":182,"column":26}},{"start":{"line":182,"column":26},"end":{"line":182,"column":26}}]},"41":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":76},"end":{"line":182,"column":76}},{"start":{"line":182,"column":76},"end":{"line":182,"column":76}}]},"42":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":29},"end":{"line":188,"column":29}},{"start":{"line":188,"column":29},"end":{"line":188,"column":29}}]},"43":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":28},"end":{"line":189,"column":28}},{"start":{"line":189,"column":28},"end":{"line":189,"column":28}}]},"44":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":28},"end":{"line":191,"column":28}},{"start":{"line":191,"column":28},"end":{"line":191,"column":28}}]},"45":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":31},"end":{"line":197,"column":31}},{"start":{"line":197,"column":31},"end":{"line":197,"column":31}}]},"46":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":30},"end":{"line":198,"column":30}},{"start":{"line":198,"column":30},"end":{"line":198,"column":30}}]},"47":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":30},"end":{"line":200,"column":30}},{"start":{"line":200,"column":30},"end":{"line":200,"column":30}}]},"48":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":6}},{"start":{"line":204,"column":6},"end":{"line":204,"column":6}}]},"49":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":10},"end":{"line":204,"column":24}},{"start":{"line":204,"column":28},"end":{"line":204,"column":57}}]},"50":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":9},"end":{"line":210,"column":9}},{"start":{"line":210,"column":9},"end":{"line":210,"column":9}}]},"51":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":11},"end":{"line":215,"column":11}},{"start":{"line":215,"column":11},"end":{"line":215,"column":11}}]},"52":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"53":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":8},"end":{"line":220,"column":22}},{"start":{"line":220,"column":26},"end":{"line":220,"column":31}}]},"54":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]}},"code":["/**"," * Baobab Update"," * =============="," *"," * The tree's update scheme."," */","'use strict';","","Object.defineProperty(exports, '__esModule', {","  value: true","});","exports['default'] = update;","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }","","var _type = require('./type');","","var _type2 = _interopRequireDefault(_type);","","var _helpers = require('./helpers');","","function err(operation, expectedTarget, path) {","  return (0, _helpers.makeError)('Baobab.update: cannot apply the \"' + operation + '\" on ' + ('a non ' + expectedTarget + ' (path: /' + path.join('/') + ').'), { path: path });","}","","/**"," * Function aiming at applying a single update operation on the given tree's"," * data."," *"," * @param  {mixed}  data      - The tree's data."," * @param  {path}   path      - Path of the update."," * @param  {object} operation - The operation to apply."," * @param  {object} [opts]    - Optional options."," * @return {mixed}            - Both the new tree's data and the updated node."," */","","function update(data, path, operation) {","  var opts = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];","  var operationType = operation.type;","  var value = operation.value;","  var _operation$options = operation.options;","  var operationOptions = _operation$options === undefined ? {} : _operation$options;","","  // Dummy root, so we can shift and alter the root","  var dummy = { root: data },","      dummyPath = ['root'].concat(_toConsumableArray(path)),","      currentPath = [];","","  // Walking the path","  var p = dummy,","      i = undefined,","      l = undefined,","      s = undefined;","","  for (i = 0, l = dummyPath.length; i < l; i++) {","","    // Current item's reference is therefore p[s]","    // The reason why we don't create a variable here for convenience","    // is because we actually need to mutate the reference.","    s = dummyPath[i];","","    // Updating the path","    if (i > 0) currentPath.push(s);","","    // If we reached the end of the path, we apply the operation","    if (i === l - 1) {","","      /**","       * Set","       */","      if (operationType === 'set') {","","        // Purity check","        if (opts.pure && p[s] === value) return { node: p[s] };","","        if (_type2['default'].lazyGetter(p, s)) {","          Object.defineProperty(p, s, {","            value: value,","            enumerable: true,","            configurable: true","          });","        } else if (opts.persistent && !operationOptions.mutableLeaf) {","          p[s] = (0, _helpers.shallowClone)(value);","        } else {","          p[s] = value;","        }","      }","","      /**","       * Monkey","       */","      else if (operationType === 'monkey') {","          Object.defineProperty(p, s, {","            get: value,","            enumerable: true,","            configurable: true","          });","        }","","        /**","         * Apply","         */","        else if (operationType === 'apply') {","            var result = value(p[s]);","","            // Purity check","            if (opts.pure && p[s] === result) return { node: p[s] };","","            if (_type2['default'].lazyGetter(p, s)) {","              Object.defineProperty(p, s, {","                value: result,","                enumerable: true,","                configurable: true","              });","            } else if (opts.persistent) {","              p[s] = (0, _helpers.shallowClone)(result);","            } else {","              p[s] = result;","            }","          }","","          /**","           * Push","           */","          else if (operationType === 'push') {","              if (!_type2['default'].array(p[s])) throw err('push', 'array', currentPath);","","              if (opts.persistent) p[s] = p[s].concat([value]);else p[s].push(value);","            }","","            /**","             * Unshift","             */","            else if (operationType === 'unshift') {","                if (!_type2['default'].array(p[s])) throw err('unshift', 'array', currentPath);","","                if (opts.persistent) p[s] = [value].concat(p[s]);else p[s].unshift(value);","              }","","              /**","               * Concat","               */","              else if (operationType === 'concat') {","                  if (!_type2['default'].array(p[s])) throw err('concat', 'array', currentPath);","","                  if (opts.persistent) p[s] = p[s].concat(value);else p[s].push.apply(p[s], value);","                }","","                /**","                 * Splice","                 */","                else if (operationType === 'splice') {","                    if (!_type2['default'].array(p[s])) throw err('splice', 'array', currentPath);","","                    if (opts.persistent) p[s] = _helpers.splice.apply(null, [p[s]].concat(value));else p[s].splice.apply(p[s], value);","                  }","","                  /**","                   * Pop","                   */","                  else if (operationType === 'pop') {","                      if (!_type2['default'].array(p[s])) throw err('pop', 'array', currentPath);","","                      if (opts.persistent) p[s] = (0, _helpers.splice)(p[s], -1, 1);else p[s].pop();","                    }","","                    /**","                     * Shift","                     */","                    else if (operationType === 'shift') {","                        if (!_type2['default'].array(p[s])) throw err('shift', 'array', currentPath);","","                        if (opts.persistent) p[s] = (0, _helpers.splice)(p[s], 0, 1);else p[s].shift();","                      }","","                      /**","                       * Unset","                       */","                      else if (operationType === 'unset') {","                          if (_type2['default'].object(p)) delete p[s];else if (_type2['default'].array(p)) p.splice(s, 1);","                        }","","                        /**","                         * Merge","                         */","                        else if (operationType === 'merge') {","                            if (!_type2['default'].object(p[s])) throw err('merge', 'object', currentPath);","","                            if (opts.persistent) p[s] = (0, _helpers.shallowMerge)({}, p[s], value);else p[s] = (0, _helpers.shallowMerge)(p[s], value);","                          }","","                          /**","                           * Deep merge","                           */","                          else if (operationType === 'deepMerge') {","                              if (!_type2['default'].object(p[s])) throw err('deepMerge', 'object', currentPath);","","                              if (opts.persistent) p[s] = (0, _helpers.deepMerge)({}, p[s], value);else p[s] = (0, _helpers.deepMerge)(p[s], value);","                            }","","      // Deep freezing the resulting value","      if (opts.immutable && !operationOptions.mutableLeaf) (0, _helpers.deepFreeze)(p);","","      break;","    }","","    // If we reached a leaf, we override by setting an empty object","    else if (_type2['default'].primitive(p[s])) {","        p[s] = {};","      }","","      // Else, we shift the reference and continue the path","      else if (opts.persistent) {","          p[s] = (0, _helpers.shallowClone)(p[s]);","        }","","    // Should we freeze the current step before continuing?","    if (opts.immutable && l > 0) (0, _helpers.freeze)(p);","","    p = p[s];","  }","","  // If we are updating a dynamic node, we need not return the affected node","  if (_type2['default'].lazyGetter(p, s)) return { data: dummy.root };","","  // Returning new data object","  return { data: dummy.root, node: p[s] };","}","","module.exports = exports['default'];"],"l":{"9":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"25":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"47":0,"52":0,"57":0,"62":0,"65":0,"68":0,"73":0,"76":0,"78":0,"79":0,"84":0,"85":0,"87":0,"94":0,"95":0,"105":0,"106":0,"109":0,"111":0,"112":0,"117":0,"118":0,"120":0,"127":0,"128":0,"130":0,"136":0,"137":0,"139":0,"145":0,"146":0,"148":0,"154":0,"155":0,"157":0,"163":0,"164":0,"166":0,"172":0,"173":0,"175":0,"181":0,"182":0,"188":0,"189":0,"191":0,"197":0,"198":0,"200":0,"204":0,"206":0,"210":0,"211":0,"215":0,"216":0,"220":0,"222":0,"226":0,"229":0,"232":1}},"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/helpers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":1,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":1,"66":1,"67":0,"68":1,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":1,"114":1,"115":1,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":1,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":1,"201":1,"202":1,"203":1,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":1,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":1,"251":1,"252":1,"253":0,"254":1},"b":{"1":[4,4],"2":[4,0],"3":[1,0],"4":[0,1],"5":[0,1],"6":[1,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0,0],"40":[1,0],"41":[1,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":20},"end":{"line":15,"column":32}}},"2":{"name":"defineProperties","line":15,"loc":{"start":{"line":15,"column":34},"end":{"line":15,"column":75}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":358},"end":{"line":15,"column":406}}},"4":{"name":"_interopRequireDefault","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}}},"5":{"name":"_classCallCheck","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":48}}},"6":{"name":"index","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":22}}},"7":{"name":"slice","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":22}}},"8":{"name":"(anonymous_8)","line":84,"loc":{"start":{"line":84,"column":15},"end":{"line":84,"column":27}}},"9":{"name":"Archive","line":85,"loc":{"start":{"line":85,"column":2},"end":{"line":85,"column":25}}},"10":{"name":"get","line":108,"loc":{"start":{"line":108,"column":11},"end":{"line":108,"column":26}}},"11":{"name":"add","line":120,"loc":{"start":{"line":120,"column":11},"end":{"line":120,"column":32}}},"12":{"name":"clear","line":136,"loc":{"start":{"line":136,"column":11},"end":{"line":136,"column":28}}},"13":{"name":"back","line":149,"loc":{"start":{"line":149,"column":11},"end":{"line":149,"column":32}}},"14":{"name":"arrayFrom","line":162,"loc":{"start":{"line":162,"column":0},"end":{"line":162,"column":28}}},"15":{"name":"before","line":175,"loc":{"start":{"line":175,"column":0},"end":{"line":175,"column":31}}},"16":{"name":"(anonymous_16)","line":176,"loc":{"start":{"line":176,"column":9},"end":{"line":176,"column":21}}},"17":{"name":"cloneRegexp","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":25}}},"18":{"name":"cloner","line":212,"loc":{"start":{"line":212,"column":0},"end":{"line":212,"column":28}}},"19":{"name":"coercePath","line":285,"loc":{"start":{"line":285,"column":0},"end":{"line":285,"column":28}}},"20":{"name":"compare","line":298,"loc":{"start":{"line":298,"column":0},"end":{"line":298,"column":38}}},"21":{"name":"freezer","line":326,"loc":{"start":{"line":326,"column":0},"end":{"line":326,"column":26}}},"22":{"name":"getIn","line":385,"loc":{"start":{"line":385,"column":0},"end":{"line":385,"column":29}}},"23":{"name":"(anonymous_23)","line":414,"loc":{"start":{"line":414,"column":21},"end":{"line":414,"column":34}}},"24":{"name":"makeError","line":439,"loc":{"start":{"line":439,"column":0},"end":{"line":439,"column":34}}},"25":{"name":"merger","line":457,"loc":{"start":{"line":457,"column":0},"end":{"line":457,"column":22}}},"26":{"name":"solveRelativePath","line":501,"loc":{"start":{"line":501,"column":0},"end":{"line":501,"column":37}}},"27":{"name":"solveUpdate","line":541,"loc":{"start":{"line":541,"column":0},"end":{"line":541,"column":51}}},"28":{"name":"splice","line":591,"loc":{"start":{"line":591,"column":0},"end":{"line":591,"column":39}}},"29":{"name":"(anonymous_29)","line":601,"loc":{"start":{"line":601,"column":70},"end":{"line":601,"column":83}}},"30":{"name":"(anonymous_30)","line":617,"loc":{"start":{"line":617,"column":14},"end":{"line":617,"column":26}}},"31":{"name":"(anonymous_31)","line":620,"loc":{"start":{"line":620,"column":9},"end":{"line":620,"column":21}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":13,"column":3}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":566}},"3":{"start":{"line":15,"column":34},"end":{"line":15,"column":350}},"4":{"start":{"line":15,"column":77},"end":{"line":15,"column":348}},"5":{"start":{"line":15,"column":118},"end":{"line":15,"column":144}},"6":{"start":{"line":15,"column":145},"end":{"line":15,"column":200}},"7":{"start":{"line":15,"column":201},"end":{"line":15,"column":232}},"8":{"start":{"line":15,"column":233},"end":{"line":15,"column":287}},"9":{"start":{"line":15,"column":260},"end":{"line":15,"column":287}},"10":{"start":{"line":15,"column":288},"end":{"line":15,"column":346}},"11":{"start":{"line":15,"column":351},"end":{"line":15,"column":560}},"12":{"start":{"line":15,"column":408},"end":{"line":15,"column":476}},"13":{"start":{"line":15,"column":424},"end":{"line":15,"column":476}},"14":{"start":{"line":15,"column":477},"end":{"line":15,"column":537}},"15":{"start":{"line":15,"column":494},"end":{"line":15,"column":537}},"16":{"start":{"line":15,"column":538},"end":{"line":15,"column":557}},"17":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}},"18":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}},"19":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":22}},"21":{"start":{"line":21,"column":0},"end":{"line":21,"column":30}},"22":{"start":{"line":22,"column":0},"end":{"line":22,"column":46}},"23":{"start":{"line":23,"column":0},"end":{"line":23,"column":34}},"24":{"start":{"line":24,"column":0},"end":{"line":24,"column":24}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":97}},"26":{"start":{"line":26,"column":39},"end":{"line":26,"column":95}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":153}},"28":{"start":{"line":28,"column":50},"end":{"line":28,"column":151}},"29":{"start":{"line":28,"column":92},"end":{"line":28,"column":149}},"30":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":30}},"32":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}},"33":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}},"34":{"start":{"line":41,"column":0},"end":{"line":41,"column":37}},"35":{"start":{"line":51,"column":0},"end":{"line":58,"column":1}},"36":{"start":{"line":52,"column":2},"end":{"line":53,"column":20}},"37":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"38":{"start":{"line":55,"column":4},"end":{"line":55,"column":27}},"39":{"start":{"line":55,"column":18},"end":{"line":55,"column":27}},"40":{"start":{"line":57,"column":2},"end":{"line":57,"column":12}},"41":{"start":{"line":66,"column":0},"end":{"line":75,"column":1}},"42":{"start":{"line":67,"column":2},"end":{"line":67,"column":41}},"43":{"start":{"line":69,"column":2},"end":{"line":70,"column":20}},"44":{"start":{"line":72,"column":2},"end":{"line":72,"column":67}},"45":{"start":{"line":72,"column":44},"end":{"line":72,"column":67}},"46":{"start":{"line":74,"column":2},"end":{"line":74,"column":18}},"47":{"start":{"line":84,"column":0},"end":{"line":158,"column":5}},"48":{"start":{"line":85,"column":2},"end":{"line":90,"column":3}},"49":{"start":{"line":86,"column":4},"end":{"line":86,"column":35}},"50":{"start":{"line":88,"column":4},"end":{"line":88,"column":21}},"51":{"start":{"line":89,"column":4},"end":{"line":89,"column":22}},"52":{"start":{"line":106,"column":2},"end":{"line":155,"column":6}},"53":{"start":{"line":109,"column":6},"end":{"line":109,"column":26}},"54":{"start":{"line":121,"column":6},"end":{"line":121,"column":35}},"55":{"start":{"line":124,"column":6},"end":{"line":124,"column":75}},"56":{"start":{"line":124,"column":43},"end":{"line":124,"column":75}},"57":{"start":{"line":126,"column":6},"end":{"line":126,"column":18}},"58":{"start":{"line":137,"column":6},"end":{"line":137,"column":24}},"59":{"start":{"line":138,"column":6},"end":{"line":138,"column":18}},"60":{"start":{"line":150,"column":6},"end":{"line":150,"column":43}},"61":{"start":{"line":152,"column":6},"end":{"line":152,"column":59}},"62":{"start":{"line":152,"column":18},"end":{"line":152,"column":59}},"63":{"start":{"line":153,"column":6},"end":{"line":153,"column":20}},"64":{"start":{"line":157,"column":2},"end":{"line":157,"column":17}},"65":{"start":{"line":160,"column":0},"end":{"line":160,"column":26}},"66":{"start":{"line":162,"column":0},"end":{"line":164,"column":1}},"67":{"start":{"line":163,"column":2},"end":{"line":163,"column":24}},"68":{"start":{"line":175,"column":0},"end":{"line":180,"column":1}},"69":{"start":{"line":176,"column":2},"end":{"line":179,"column":4}},"70":{"start":{"line":177,"column":4},"end":{"line":177,"column":37}},"71":{"start":{"line":178,"column":4},"end":{"line":178,"column":30}},"72":{"start":{"line":189,"column":0},"end":{"line":201,"column":1}},"73":{"start":{"line":190,"column":2},"end":{"line":190,"column":26}},"74":{"start":{"line":192,"column":2},"end":{"line":192,"column":17}},"75":{"start":{"line":194,"column":2},"end":{"line":194,"column":30}},"76":{"start":{"line":194,"column":17},"end":{"line":194,"column":30}},"77":{"start":{"line":195,"column":2},"end":{"line":195,"column":33}},"78":{"start":{"line":195,"column":20},"end":{"line":195,"column":33}},"79":{"start":{"line":196,"column":2},"end":{"line":196,"column":34}},"80":{"start":{"line":196,"column":21},"end":{"line":196,"column":34}},"81":{"start":{"line":197,"column":2},"end":{"line":197,"column":30}},"82":{"start":{"line":197,"column":17},"end":{"line":197,"column":30}},"83":{"start":{"line":198,"column":2},"end":{"line":198,"column":31}},"84":{"start":{"line":198,"column":18},"end":{"line":198,"column":31}},"85":{"start":{"line":200,"column":2},"end":{"line":200,"column":36}},"86":{"start":{"line":212,"column":0},"end":{"line":267,"column":1}},"87":{"start":{"line":213,"column":2},"end":{"line":213,"column":214}},"88":{"start":{"line":213,"column":202},"end":{"line":213,"column":214}},"89":{"start":{"line":216,"column":2},"end":{"line":228,"column":3}},"90":{"start":{"line":217,"column":4},"end":{"line":225,"column":5}},"91":{"start":{"line":218,"column":6},"end":{"line":218,"column":17}},"92":{"start":{"line":220,"column":6},"end":{"line":221,"column":24}},"93":{"start":{"line":223,"column":6},"end":{"line":223,"column":77}},"94":{"start":{"line":223,"column":47},"end":{"line":223,"column":77}},"95":{"start":{"line":224,"column":6},"end":{"line":224,"column":15}},"96":{"start":{"line":227,"column":4},"end":{"line":227,"column":23}},"97":{"start":{"line":231,"column":2},"end":{"line":231,"column":60}},"98":{"start":{"line":231,"column":28},"end":{"line":231,"column":60}},"99":{"start":{"line":234,"column":2},"end":{"line":234,"column":55}},"100":{"start":{"line":234,"column":30},"end":{"line":234,"column":55}},"101":{"start":{"line":237,"column":2},"end":{"line":264,"column":3}},"102":{"start":{"line":238,"column":4},"end":{"line":238,"column":15}},"103":{"start":{"line":240,"column":4},"end":{"line":242,"column":22}},"104":{"start":{"line":245,"column":4},"end":{"line":245,"column":49}},"105":{"start":{"line":246,"column":4},"end":{"line":262,"column":5}},"106":{"start":{"line":247,"column":6},"end":{"line":247,"column":19}},"107":{"start":{"line":248,"column":6},"end":{"line":261,"column":7}},"108":{"start":{"line":249,"column":8},"end":{"line":253,"column":11}},"109":{"start":{"line":255,"column":8},"end":{"line":260,"column":11}},"110":{"start":{"line":263,"column":4},"end":{"line":263,"column":13}},"111":{"start":{"line":266,"column":2},"end":{"line":266,"column":14}},"112":{"start":{"line":272,"column":0},"end":{"line":273,"column":40}},"113":{"start":{"line":275,"column":0},"end":{"line":275,"column":36}},"114":{"start":{"line":276,"column":0},"end":{"line":276,"column":30}},"115":{"start":{"line":285,"column":0},"end":{"line":288,"column":1}},"116":{"start":{"line":286,"column":2},"end":{"line":286,"column":61}},"117":{"start":{"line":286,"column":47},"end":{"line":286,"column":61}},"118":{"start":{"line":287,"column":2},"end":{"line":287,"column":12}},"119":{"start":{"line":298,"column":0},"end":{"line":317,"column":1}},"120":{"start":{"line":299,"column":2},"end":{"line":300,"column":20}},"121":{"start":{"line":304,"column":2},"end":{"line":304,"column":28}},"122":{"start":{"line":304,"column":15},"end":{"line":304,"column":28}},"123":{"start":{"line":306,"column":2},"end":{"line":314,"column":3}},"124":{"start":{"line":307,"column":4},"end":{"line":313,"column":5}},"125":{"start":{"line":308,"column":6},"end":{"line":308,"column":52}},"126":{"start":{"line":309,"column":11},"end":{"line":313,"column":5}},"127":{"start":{"line":310,"column":6},"end":{"line":310,"column":55}},"128":{"start":{"line":312,"column":6},"end":{"line":312,"column":53}},"129":{"start":{"line":312,"column":40},"end":{"line":312,"column":53}},"130":{"start":{"line":316,"column":2},"end":{"line":316,"column":12}},"131":{"start":{"line":326,"column":0},"end":{"line":354,"column":1}},"132":{"start":{"line":327,"column":2},"end":{"line":327,"column":81}},"133":{"start":{"line":327,"column":74},"end":{"line":327,"column":81}},"134":{"start":{"line":329,"column":2},"end":{"line":329,"column":19}},"135":{"start":{"line":331,"column":2},"end":{"line":331,"column":20}},"136":{"start":{"line":331,"column":13},"end":{"line":331,"column":20}},"137":{"start":{"line":333,"column":2},"end":{"line":353,"column":3}},"138":{"start":{"line":336,"column":4},"end":{"line":337,"column":22}},"139":{"start":{"line":339,"column":4},"end":{"line":339,"column":62}},"140":{"start":{"line":339,"column":42},"end":{"line":339,"column":62}},"141":{"start":{"line":341,"column":4},"end":{"line":342,"column":22}},"142":{"start":{"line":344,"column":4},"end":{"line":352,"column":5}},"143":{"start":{"line":345,"column":6},"end":{"line":345,"column":55}},"144":{"start":{"line":345,"column":46},"end":{"line":345,"column":55}},"145":{"start":{"line":347,"column":6},"end":{"line":347,"column":15}},"146":{"start":{"line":349,"column":6},"end":{"line":349,"column":96}},"147":{"start":{"line":349,"column":87},"end":{"line":349,"column":96}},"148":{"start":{"line":351,"column":6},"end":{"line":351,"column":23}},"149":{"start":{"line":361,"column":0},"end":{"line":361,"column":60}},"150":{"start":{"line":363,"column":0},"end":{"line":364,"column":69}},"151":{"start":{"line":366,"column":0},"end":{"line":366,"column":24}},"152":{"start":{"line":367,"column":0},"end":{"line":367,"column":32}},"153":{"start":{"line":383,"column":0},"end":{"line":383,"column":76}},"154":{"start":{"line":385,"column":0},"end":{"line":429,"column":1}},"155":{"start":{"line":386,"column":2},"end":{"line":386,"column":37}},"156":{"start":{"line":386,"column":13},"end":{"line":386,"column":37}},"157":{"start":{"line":388,"column":2},"end":{"line":388,"column":22}},"158":{"start":{"line":390,"column":2},"end":{"line":394,"column":20}},"159":{"start":{"line":396,"column":2},"end":{"line":426,"column":3}},"160":{"start":{"line":397,"column":4},"end":{"line":401,"column":6}},"161":{"start":{"line":397,"column":12},"end":{"line":401,"column":6}},"162":{"start":{"line":403,"column":4},"end":{"line":425,"column":5}},"163":{"start":{"line":404,"column":6},"end":{"line":404,"column":63}},"164":{"start":{"line":404,"column":39},"end":{"line":404,"column":63}},"165":{"start":{"line":406,"column":6},"end":{"line":406,"column":30}},"166":{"start":{"line":407,"column":6},"end":{"line":407,"column":42}},"167":{"start":{"line":407,"column":18},"end":{"line":407,"column":42}},"168":{"start":{"line":409,"column":6},"end":{"line":409,"column":27}},"169":{"start":{"line":410,"column":6},"end":{"line":410,"column":17}},"170":{"start":{"line":411,"column":11},"end":{"line":425,"column":5}},"171":{"start":{"line":412,"column":6},"end":{"line":412,"column":63}},"172":{"start":{"line":412,"column":39},"end":{"line":412,"column":63}},"173":{"start":{"line":414,"column":6},"end":{"line":416,"column":9}},"174":{"start":{"line":415,"column":8},"end":{"line":415,"column":35}},"175":{"start":{"line":417,"column":6},"end":{"line":417,"column":42}},"176":{"start":{"line":417,"column":18},"end":{"line":417,"column":42}},"177":{"start":{"line":419,"column":6},"end":{"line":419,"column":27}},"178":{"start":{"line":420,"column":6},"end":{"line":420,"column":17}},"179":{"start":{"line":422,"column":6},"end":{"line":422,"column":31}},"180":{"start":{"line":423,"column":6},"end":{"line":423,"column":53}},"181":{"start":{"line":424,"column":6},"end":{"line":424,"column":21}},"182":{"start":{"line":428,"column":2},"end":{"line":428,"column":61}},"183":{"start":{"line":439,"column":0},"end":{"line":445,"column":1}},"184":{"start":{"line":440,"column":2},"end":{"line":440,"column":31}},"185":{"start":{"line":442,"column":2},"end":{"line":444,"column":3}},"186":{"start":{"line":443,"column":4},"end":{"line":443,"column":21}},"187":{"start":{"line":444,"column":3},"end":{"line":444,"column":14}},"188":{"start":{"line":457,"column":0},"end":{"line":482,"column":1}},"189":{"start":{"line":458,"column":2},"end":{"line":460,"column":3}},"190":{"start":{"line":459,"column":4},"end":{"line":459,"column":40}},"191":{"start":{"line":462,"column":2},"end":{"line":462,"column":21}},"192":{"start":{"line":464,"column":2},"end":{"line":467,"column":20}},"193":{"start":{"line":469,"column":2},"end":{"line":479,"column":3}},"194":{"start":{"line":470,"column":4},"end":{"line":470,"column":19}},"195":{"start":{"line":472,"column":4},"end":{"line":478,"column":5}},"196":{"start":{"line":473,"column":6},"end":{"line":477,"column":7}},"197":{"start":{"line":474,"column":8},"end":{"line":474,"column":46}},"198":{"start":{"line":476,"column":8},"end":{"line":476,"column":20}},"199":{"start":{"line":481,"column":2},"end":{"line":481,"column":11}},"200":{"start":{"line":487,"column":0},"end":{"line":488,"column":40}},"201":{"start":{"line":490,"column":0},"end":{"line":490,"column":36}},"202":{"start":{"line":491,"column":0},"end":{"line":491,"column":30}},"203":{"start":{"line":501,"column":0},"end":{"line":520,"column":1}},"204":{"start":{"line":502,"column":2},"end":{"line":502,"column":22}},"205":{"start":{"line":505,"column":2},"end":{"line":505,"column":21}},"206":{"start":{"line":507,"column":2},"end":{"line":517,"column":3}},"207":{"start":{"line":508,"column":4},"end":{"line":508,"column":21}},"208":{"start":{"line":510,"column":4},"end":{"line":516,"column":5}},"209":{"start":{"line":511,"column":6},"end":{"line":511,"column":41}},"210":{"start":{"line":511,"column":14},"end":{"line":511,"column":41}},"211":{"start":{"line":512,"column":11},"end":{"line":516,"column":5}},"212":{"start":{"line":513,"column":6},"end":{"line":513,"column":57}},"213":{"start":{"line":515,"column":6},"end":{"line":515,"column":28}},"214":{"start":{"line":519,"column":2},"end":{"line":519,"column":20}},"215":{"start":{"line":541,"column":0},"end":{"line":579,"column":1}},"216":{"start":{"line":542,"column":2},"end":{"line":550,"column":20}},"217":{"start":{"line":553,"column":2},"end":{"line":576,"column":3}},"218":{"start":{"line":554,"column":4},"end":{"line":554,"column":25}},"219":{"start":{"line":556,"column":4},"end":{"line":556,"column":31}},"220":{"start":{"line":556,"column":19},"end":{"line":556,"column":31}},"221":{"start":{"line":559,"column":4},"end":{"line":575,"column":5}},"222":{"start":{"line":560,"column":6},"end":{"line":560,"column":27}},"223":{"start":{"line":562,"column":6},"end":{"line":562,"column":39}},"224":{"start":{"line":562,"column":27},"end":{"line":562,"column":39}},"225":{"start":{"line":565,"column":6},"end":{"line":574,"column":7}},"226":{"start":{"line":566,"column":8},"end":{"line":566,"column":17}},"227":{"start":{"line":570,"column":8},"end":{"line":570,"column":29}},"228":{"start":{"line":570,"column":23},"end":{"line":570,"column":29}},"229":{"start":{"line":573,"column":8},"end":{"line":573,"column":59}},"230":{"start":{"line":573,"column":47},"end":{"line":573,"column":59}},"231":{"start":{"line":578,"column":2},"end":{"line":578,"column":15}},"232":{"start":{"line":591,"column":0},"end":{"line":610,"column":1}},"233":{"start":{"line":592,"column":2},"end":{"line":594,"column":3}},"234":{"start":{"line":593,"column":4},"end":{"line":593,"column":43}},"235":{"start":{"line":596,"column":2},"end":{"line":596,"column":226}},"236":{"start":{"line":596,"column":50},"end":{"line":596,"column":81}},"237":{"start":{"line":596,"column":86},"end":{"line":596,"column":226}},"238":{"start":{"line":596,"column":123},"end":{"line":596,"column":130}},"239":{"start":{"line":596,"column":135},"end":{"line":596,"column":226}},"240":{"start":{"line":596,"column":151},"end":{"line":596,"column":226}},"241":{"start":{"line":597,"column":2},"end":{"line":597,"column":23}},"242":{"start":{"line":600,"column":2},"end":{"line":600,"column":87}},"243":{"start":{"line":600,"column":49},"end":{"line":600,"column":87}},"244":{"start":{"line":601,"column":2},"end":{"line":603,"column":5}},"245":{"start":{"line":601,"column":44},"end":{"line":603,"column":5}},"246":{"start":{"line":602,"column":4},"end":{"line":602,"column":34}},"247":{"start":{"line":606,"column":2},"end":{"line":606,"column":111}},"248":{"start":{"line":606,"column":23},"end":{"line":606,"column":111}},"249":{"start":{"line":609,"column":2},"end":{"line":609,"column":120}},"250":{"start":{"line":617,"column":0},"end":{"line":623,"column":5}},"251":{"start":{"line":618,"column":2},"end":{"line":618,"column":12}},"252":{"start":{"line":620,"column":2},"end":{"line":622,"column":4}},"253":{"start":{"line":621,"column":4},"end":{"line":621,"column":15}},"254":{"start":{"line":625,"column":0},"end":{"line":625,"column":24}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":169},"end":{"line":15,"column":190}},{"start":{"line":15,"column":194},"end":{"line":15,"column":199}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":233},"end":{"line":15,"column":233}},{"start":{"line":15,"column":233},"end":{"line":15,"column":233}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":408},"end":{"line":15,"column":408}},{"start":{"line":15,"column":408},"end":{"line":15,"column":408}}]},"4":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":477},"end":{"line":15,"column":477}},{"start":{"line":15,"column":477},"end":{"line":15,"column":477}}]},"5":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":94}}]},"6":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}]},"7":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":50},"end":{"line":28,"column":50}},{"start":{"line":28,"column":50},"end":{"line":28,"column":50}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"9":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":6},"end":{"line":124,"column":6}},{"start":{"line":124,"column":6},"end":{"line":124,"column":6}}]},"10":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":6},"end":{"line":152,"column":6}},{"start":{"line":152,"column":6},"end":{"line":152,"column":6}}]},"11":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"12":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"13":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"14":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":197,"column":2}},{"start":{"line":197,"column":2},"end":{"line":197,"column":2}}]},"15":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"16":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"17":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":6},"end":{"line":213,"column":11}},{"start":{"line":213,"column":15},"end":{"line":213,"column":39}},{"start":{"line":213,"column":43},"end":{"line":213,"column":64}},{"start":{"line":213,"column":68},"end":{"line":213,"column":108}},{"start":{"line":213,"column":112},"end":{"line":213,"column":142}},{"start":{"line":213,"column":146},"end":{"line":213,"column":169}},{"start":{"line":213,"column":173},"end":{"line":213,"column":200}}]},"18":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":216,"column":2}},{"start":{"line":216,"column":2},"end":{"line":216,"column":2}}]},"19":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4}},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]},"20":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"21":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":2},"end":{"line":234,"column":2}},{"start":{"line":234,"column":2},"end":{"line":234,"column":2}}]},"22":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"23":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":6},"end":{"line":248,"column":6}},{"start":{"line":248,"column":6},"end":{"line":248,"column":6}}]},"24":{"line":256,"type":"cond-expr","locations":[{"start":{"line":256,"column":24},"end":{"line":256,"column":45}},{"start":{"line":256,"column":48},"end":{"line":256,"column":55}}]},"25":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":2},"end":{"line":286,"column":2}},{"start":{"line":286,"column":2},"end":{"line":286,"column":2}}]},"26":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":6},"end":{"line":286,"column":12}},{"start":{"line":286,"column":16},"end":{"line":286,"column":28}},{"start":{"line":286,"column":32},"end":{"line":286,"column":45}}]},"27":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":2},"end":{"line":304,"column":2}},{"start":{"line":304,"column":2},"end":{"line":304,"column":2}}]},"28":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"29":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":11},"end":{"line":308,"column":13}},{"start":{"line":308,"column":17},"end":{"line":308,"column":51}}]},"30":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":11},"end":{"line":309,"column":11}},{"start":{"line":309,"column":11},"end":{"line":309,"column":11}}]},"31":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":11},"end":{"line":310,"column":13}},{"start":{"line":310,"column":17},"end":{"line":310,"column":54}}]},"32":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":6},"end":{"line":312,"column":6}},{"start":{"line":312,"column":6},"end":{"line":312,"column":6}}]},"33":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":2},"end":{"line":327,"column":2}},{"start":{"line":327,"column":2},"end":{"line":327,"column":2}}]},"34":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":6},"end":{"line":327,"column":27}},{"start":{"line":327,"column":31},"end":{"line":327,"column":41}},{"start":{"line":327,"column":45},"end":{"line":327,"column":72}}]},"35":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":2},"end":{"line":331,"column":2}},{"start":{"line":331,"column":2},"end":{"line":331,"column":2}}]},"36":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":2},"end":{"line":333,"column":2}},{"start":{"line":333,"column":2},"end":{"line":333,"column":2}}]},"37":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":6},"end":{"line":345,"column":6}},{"start":{"line":345,"column":6},"end":{"line":345,"column":6}}]},"38":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":6},"end":{"line":349,"column":6}},{"start":{"line":349,"column":6},"end":{"line":349,"column":6}}]},"39":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":10},"end":{"line":349,"column":12}},{"start":{"line":349,"column":16},"end":{"line":349,"column":38}},{"start":{"line":349,"column":42},"end":{"line":349,"column":63}},{"start":{"line":349,"column":67},"end":{"line":349,"column":85}}]},"40":{"line":363,"type":"cond-expr","locations":[{"start":{"line":363,"column":33},"end":{"line":363,"column":58}},{"start":{"line":363,"column":61},"end":{"line":363,"column":65}}]},"41":{"line":364,"type":"cond-expr","locations":[{"start":{"line":364,"column":37},"end":{"line":364,"column":61}},{"start":{"line":364,"column":64},"end":{"line":364,"column":68}}]},"42":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":2},"end":{"line":386,"column":2}},{"start":{"line":386,"column":2},"end":{"line":386,"column":2}}]},"43":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":4},"end":{"line":397,"column":4}},{"start":{"line":397,"column":4},"end":{"line":397,"column":4}}]},"44":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":4},"end":{"line":403,"column":4}},{"start":{"line":403,"column":4},"end":{"line":403,"column":4}}]},"45":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":6},"end":{"line":404,"column":6}},{"start":{"line":404,"column":6},"end":{"line":404,"column":6}}]},"46":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":6},"end":{"line":407,"column":6}},{"start":{"line":407,"column":6},"end":{"line":407,"column":6}}]},"47":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":11},"end":{"line":411,"column":11}},{"start":{"line":411,"column":11},"end":{"line":411,"column":11}}]},"48":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":6},"end":{"line":412,"column":6}},{"start":{"line":412,"column":6},"end":{"line":412,"column":6}}]},"49":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":6},"end":{"line":417,"column":6}},{"start":{"line":417,"column":6},"end":{"line":417,"column":6}}]},"50":{"line":423,"type":"binary-expr","locations":[{"start":{"line":423,"column":15},"end":{"line":423,"column":36}},{"start":{"line":423,"column":40},"end":{"line":423,"column":52}}]},"51":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":6},"end":{"line":473,"column":6}},{"start":{"line":473,"column":6},"end":{"line":473,"column":6}}]},"52":{"line":473,"type":"binary-expr","locations":[{"start":{"line":473,"column":10},"end":{"line":473,"column":14}},{"start":{"line":473,"column":18},"end":{"line":473,"column":48}},{"start":{"line":473,"column":52},"end":{"line":473,"column":85}}]},"53":{"line":474,"type":"binary-expr","locations":[{"start":{"line":474,"column":28},"end":{"line":474,"column":32}},{"start":{"line":474,"column":36},"end":{"line":474,"column":38}}]},"54":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":4},"end":{"line":510,"column":4}},{"start":{"line":510,"column":4},"end":{"line":510,"column":4}}]},"55":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":6},"end":{"line":511,"column":6}},{"start":{"line":511,"column":6},"end":{"line":511,"column":6}}]},"56":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":11},"end":{"line":512,"column":11}},{"start":{"line":512,"column":11},"end":{"line":512,"column":11}}]},"57":{"line":513,"type":"cond-expr","locations":[{"start":{"line":513,"column":25},"end":{"line":513,"column":29}},{"start":{"line":513,"column":32},"end":{"line":513,"column":42}}]},"58":{"line":556,"type":"if","locations":[{"start":{"line":556,"column":4},"end":{"line":556,"column":4}},{"start":{"line":556,"column":4},"end":{"line":556,"column":4}}]},"59":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":6},"end":{"line":562,"column":6}},{"start":{"line":562,"column":6},"end":{"line":562,"column":6}}]},"60":{"line":562,"type":"binary-expr","locations":[{"start":{"line":562,"column":10},"end":{"line":562,"column":12}},{"start":{"line":562,"column":16},"end":{"line":562,"column":25}}]},"61":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":8},"end":{"line":570,"column":8}},{"start":{"line":570,"column":8},"end":{"line":570,"column":8}}]},"62":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":8},"end":{"line":573,"column":8}},{"start":{"line":573,"column":8},"end":{"line":573,"column":8}}]},"63":{"line":573,"type":"binary-expr","locations":[{"start":{"line":573,"column":12},"end":{"line":573,"column":23}},{"start":{"line":573,"column":27},"end":{"line":573,"column":45}}]},"64":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":2},"end":{"line":596,"column":2}},{"start":{"line":596,"column":2},"end":{"line":596,"column":2}}]},"65":{"line":596,"type":"binary-expr","locations":[{"start":{"line":596,"column":6},"end":{"line":596,"column":22}},{"start":{"line":596,"column":26},"end":{"line":596,"column":48}}]},"66":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":86},"end":{"line":596,"column":86}},{"start":{"line":596,"column":86},"end":{"line":596,"column":86}}]},"67":{"line":596,"type":"binary-expr","locations":[{"start":{"line":596,"column":90},"end":{"line":596,"column":101}},{"start":{"line":596,"column":105},"end":{"line":596,"column":121}}]},"68":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":135},"end":{"line":596,"column":135}},{"start":{"line":596,"column":135},"end":{"line":596,"column":135}}]},"69":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":2},"end":{"line":600,"column":2}},{"start":{"line":600,"column":2},"end":{"line":600,"column":2}}]},"70":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":2},"end":{"line":601,"column":2}},{"start":{"line":601,"column":2},"end":{"line":601,"column":2}}]},"71":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":2},"end":{"line":606,"column":2}},{"start":{"line":606,"column":2},"end":{"line":606,"column":2}}]}},"code":["/* eslint eqeqeq: 0 */","","/**"," * Baobab Helpers"," * ==============="," *"," * Miscellaneous helper functions."," */","'use strict';","","Object.defineProperty(exports, '__esModule', {","  value: true","});","","var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();","","exports.arrayFrom = arrayFrom;","exports.before = before;","exports.coercePath = coercePath;","exports.getIn = getIn;","exports.makeError = makeError;","exports.solveRelativePath = solveRelativePath;","exports.solveUpdate = solveUpdate;","exports.splice = splice;","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }","","var _monkey = require('./monkey');","","var _type = require('./type');","","var _type2 = _interopRequireDefault(_type);","","/**"," * Noop function"," */","var noop = Function.prototype;","","var hasOwnProp = ({}).hasOwnProperty;","","/**"," * Function returning the index of the first element of a list matching the"," * given predicate."," *"," * @param  {array}     a  - The target array."," * @param  {function}  fn - The predicate function."," * @return {mixed}        - The index of the first matching item or -1."," */","function index(a, fn) {","  var i = undefined,","      l = undefined;","  for (i = 0, l = a.length; i < l; i++) {","    if (fn(a[i])) return i;","  }","  return -1;","}","","/**"," * Efficient slice function used to clone arrays or parts of them."," *"," * @param  {array} array - The array to slice."," * @return {array}       - The sliced array."," */","function slice(array) {","  var newArray = new Array(array.length);","","  var i = undefined,","      l = undefined;","","  for (i = 0, l = array.length; i < l; i++) newArray[i] = array[i];","","  return newArray;","}","","/**"," * Archive abstraction"," *"," * @constructor"," * @param {integer} size - Maximum number of records to store."," */","","var Archive = (function () {","  function Archive(size) {","    _classCallCheck(this, Archive);","","    this.size = size;","    this.records = [];","  }","","  /**","   * Function creating a real array from what should be an array but is not.","   * I'm looking at you nasty `arguments`...","   *","   * @param  {mixed} culprit - The culprit to convert.","   * @return {array}         - The real array.","   */","","  /**","   * Method retrieving the records.","   *","   * @return {array} - The records.","   */","","  _createClass(Archive, [{","    key: 'get',","    value: function get() {","      return this.records;","    }","","    /**","     * Method adding a record to the archive","     *","     * @param {object}  record - The record to store.","     * @return {Archive}       - The archive itself for chaining purposes.","     */","  }, {","    key: 'add',","    value: function add(record) {","      this.records.unshift(record);","","      // If the number of records is exceeded, we truncate the records","      if (this.records.length > this.size) this.records.length = this.size;","","      return this;","    }","","    /**","     * Method clearing the records.","     *","     * @return {Archive} - The archive itself for chaining purposes.","     */","  }, {","    key: 'clear',","    value: function clear() {","      this.records = [];","      return this;","    }","","    /**","     * Method to go back in time.","     *","     * @param {integer} steps - Number of steps we should go back by.","     * @return {number}       - The last record.","     */","  }, {","    key: 'back',","    value: function back(steps) {","      var record = this.records[steps - 1];","","      if (record) this.records = this.records.slice(steps);","      return record;","    }","  }]);","","  return Archive;","})();","","exports.Archive = Archive;","","function arrayFrom(culprit) {","  return slice(culprit);","}","","/**"," * Function decorating one function with another that will be called before the"," * decorated one."," *"," * @param  {function} decorator - The decorating function."," * @param  {function} fn        - The function to decorate."," * @return {function}           - The decorated function."," */","","function before(decorator, fn) {","  return function () {","    decorator.apply(null, arguments);","    fn.apply(null, arguments);","  };","}","","/**"," * Function cloning the given regular expression. Supports `y` and `u` flags"," * already."," *"," * @param  {RegExp} re - The target regular expression."," * @return {RegExp}    - The cloned regular expression."," */","function cloneRegexp(re) {","  var pattern = re.source;","","  var flags = '';","","  if (re.global) flags += 'g';","  if (re.multiline) flags += 'm';","  if (re.ignoreCase) flags += 'i';","  if (re.sticky) flags += 'y';","  if (re.unicode) flags += 'u';","","  return new RegExp(pattern, flags);","}","","/**"," * Function cloning the given variable."," *"," * @todo: implement a faster way to clone an array."," *"," * @param  {boolean} deep - Should we deep clone the variable."," * @param  {mixed}   item - The variable to clone"," * @return {mixed}        - The cloned variable."," */","function cloner(deep, item) {","  if (!item || typeof item !== 'object' || item instanceof Error || item instanceof _monkey.MonkeyDefinition || item instanceof _monkey.Monkey || 'ArrayBuffer' in global && item instanceof ArrayBuffer) return item;","","  // Array","  if (_type2['default'].array(item)) {","    if (deep) {","      var a = [];","","      var i = undefined,","          l = undefined;","","      for (i = 0, l = item.length; i < l; i++) a.push(cloner(true, item[i]));","      return a;","    }","","    return slice(item);","  }","","  // Date","  if (item instanceof Date) return new Date(item.getTime());","","  // RegExp","  if (item instanceof RegExp) return cloneRegexp(item);","","  // Object","  if (_type2['default'].object(item)) {","    var o = {};","","    var i = undefined,","        l = undefined,","        k = undefined;","","    // NOTE: could be possible to erase computed properties through `null`.","    var props = Object.getOwnPropertyNames(item);","    for (i = 0, l = props.length; i < l; i++) {","      k = props[i];","      if (_type2['default'].lazyGetter(item, k)) {","        Object.defineProperty(o, k, {","          get: Object.getOwnPropertyDescriptor(item, k).get,","          enumerable: true,","          configurable: true","        });","      } else {","        Object.defineProperty(o, k, {","          value: deep ? cloner(true, item[k]) : item[k],","          enumerable: Object.getOwnPropertyDescriptor(item, k).enumerable,","          writable: true,","          configurable: true","        });","      }","    }","    return o;","  }","","  return item;","}","","/**"," * Exporting shallow and deep cloning functions."," */","var shallowClone = cloner.bind(null, false),","    deepClone = cloner.bind(null, true);","","exports.shallowClone = shallowClone;","exports.deepClone = deepClone;","","/**"," * Coerce the given variable into a full-fledged path."," *"," * @param  {mixed} target - The variable to coerce."," * @return {array}        - The array path."," */","","function coercePath(target) {","  if (target || target === 0 || target === '') return target;","  return [];","}","","/**"," * Function comparing an object's properties to a given descriptive"," * object."," *"," * @param  {object} object      - The object to compare."," * @param  {object} description - The description's mapping."," * @return {boolean}            - Whether the object matches the description."," */","function compare(object, description) {","  var ok = true,","      k = undefined;","","  // If we reached here via a recursive call, object may be undefined because","  // not all items in a collection will have the same deep nesting structure.","  if (!object) return false;","","  for (k in description) {","    if (_type2['default'].object(description[k])) {","      ok = ok && compare(object[k], description[k]);","    } else if (_type2['default'].array(description[k])) {","      ok = ok && !! ~description[k].indexOf(object[k]);","    } else {","      if (object[k] !== description[k]) return false;","    }","  }","","  return ok;","}","","/**"," * Function freezing the given variable if possible."," *"," * @param  {boolean} deep - Should we recursively freeze the given objects?"," * @param  {object}  o    - The variable to freeze."," * @return {object}    - The merged object."," */","function freezer(deep, o) {","  if (typeof o !== 'object' || o === null || o instanceof _monkey.Monkey) return;","","  Object.freeze(o);","","  if (!deep) return;","","  if (Array.isArray(o)) {","","    // Iterating through the elements","    var i = undefined,","        l = undefined;","","    for (i = 0, l = o.length; i < l; i++) freezer(true, o[i]);","  } else {","    var p = undefined,","        k = undefined;","","    for (k in o) {","      if (_type2['default'].lazyGetter(o, k)) continue;","","      p = o[k];","","      if (!p || !hasOwnProp.call(o, k) || typeof p !== 'object' || Object.isFrozen(p)) continue;","","      freezer(true, p);","    }","  }","}","","/**"," * Exporting both `freeze` and `deepFreeze` functions."," * Note that if the engine does not support `Object.freeze` then this will"," * export noop functions instead."," */","var isFreezeSupported = typeof Object.freeze === 'function';","","var freeze = isFreezeSupported ? freezer.bind(null, false) : noop,","    deepFreeze = isFreezeSupported ? freezer.bind(null, true) : noop;","","exports.freeze = freeze;","exports.deepFreeze = deepFreeze;","","/**"," * Function retrieving nested data within the given object and according to"," * the given path."," *"," * @todo: work if dynamic path hit objects also."," * @todo: memoized perfgetters."," *"," * @param  {object}  object - The object we need to get data from."," * @param  {array}   path   - The path to follow."," * @return {object}  result            - The result."," * @return {mixed}   result.data       - The data at path, or `undefined`."," * @return {array}   result.solvedPath - The solved path or `null`."," * @return {boolean} result.exists     - Does the path exists in the tree?"," */","var NOT_FOUND_OBJECT = { data: undefined, solvedPath: null, exists: false };","","function getIn(object, path) {","  if (!path) return NOT_FOUND_OBJECT;","","  var solvedPath = [];","","  var exists = true,","      c = object,","      idx = undefined,","      i = undefined,","      l = undefined;","","  for (i = 0, l = path.length; i < l; i++) {","    if (!c) return {","      data: undefined,","      solvedPath: solvedPath.concat(path.slice(i)),","      exists: false","    };","","    if (typeof path[i] === 'function') {","      if (!_type2['default'].array(c)) return NOT_FOUND_OBJECT;","","      idx = index(c, path[i]);","      if (! ~idx) return NOT_FOUND_OBJECT;","","      solvedPath.push(idx);","      c = c[idx];","    } else if (typeof path[i] === 'object') {","      if (!_type2['default'].array(c)) return NOT_FOUND_OBJECT;","","      idx = index(c, function (e) {","        return compare(e, path[i]);","      });","      if (! ~idx) return NOT_FOUND_OBJECT;","","      solvedPath.push(idx);","      c = c[idx];","    } else {","      solvedPath.push(path[i]);","      exists = typeof c === 'object' && path[i] in c;","      c = c[path[i]];","    }","  }","","  return { data: c, solvedPath: solvedPath, exists: exists };","}","","/**"," * Little helper returning a JavaScript error carrying some data with it."," *"," * @param  {string} message - The error message."," * @param  {object} [data]  - Optional data to assign to the error."," * @return {Error}          - The created error."," */","","function makeError(message, data) {","  var err = new Error(message);","","  for (var k in data) {","    err[k] = data[k];","  }return err;","}","","/**"," * Function taking n objects to merge them together."," * Note 1): the latter object will take precedence over the first one."," * Note 2): the first object will be mutated to allow for perf scenarios."," * Note 3): this function will consider monkeys as leaves."," *"," * @param  {boolean}   deep    - Whether the merge should be deep or not."," * @param  {...object} objects - Objects to merge."," * @return {object}            - The merged object."," */","function merger(deep) {","  for (var _len = arguments.length, objects = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {","    objects[_key - 1] = arguments[_key];","  }","","  var o = objects[0];","","  var t = undefined,","      i = undefined,","      l = undefined,","      k = undefined;","","  for (i = 1, l = objects.length; i < l; i++) {","    t = objects[i];","","    for (k in t) {","      if (deep && _type2['default'].object(t[k]) && !(t[k] instanceof _monkey.Monkey)) {","        o[k] = merger(true, o[k] || {}, t[k]);","      } else {","        o[k] = t[k];","      }","    }","  }","","  return o;","}","","/**"," * Exporting both `shallowMerge` and `deepMerge` functions."," */","var shallowMerge = merger.bind(null, false),","    deepMerge = merger.bind(null, true);","","exports.shallowMerge = shallowMerge;","exports.deepMerge = deepMerge;","","/**"," * Solving a potentially relative path."," *"," * @param  {array} base - The base path from which to solve the path."," * @param  {array} to   - The subpath to reach."," * @param  {array}      - The solved absolute path."," */","","function solveRelativePath(base, to) {","  var solvedPath = [];","","  // Coercing to array","  to = [].concat(to);","","  for (var i = 0, l = to.length; i < l; i++) {","    var step = to[i];","","    if (step === '.') {","      if (!i) solvedPath = base.slice(0);","    } else if (step === '..') {","      solvedPath = (!i ? base : solvedPath).slice(0, -1);","    } else {","      solvedPath.push(step);","    }","  }","","  return solvedPath;","}","","/**"," * Function determining whether some paths in the tree were affected by some"," * updates that occurred at the given paths. This helper is mainly used at"," * cursor level to determine whether the cursor is concerned by the updates"," * fired at tree level."," *"," * NOTES: 1) If performance become an issue, the following threefold loop"," *           can be simplified to a complex twofold one."," *        2) A regex version could also work but I am not confident it would"," *           be faster."," *        3) Another solution would be to keep a register of cursors like with"," *           the monkeys and update along this tree."," *"," * @param  {array} affectedPaths - The paths that were updated."," * @param  {array} comparedPaths - The paths that we are actually interested in."," * @return {boolean}             - Is the update relevant to the compared"," *                                 paths?"," */","","function solveUpdate(affectedPaths, comparedPaths) {","  var i = undefined,","      j = undefined,","      k = undefined,","      l = undefined,","      m = undefined,","      n = undefined,","      p = undefined,","      c = undefined,","      s = undefined;","","  // Looping through possible paths","  for (i = 0, l = affectedPaths.length; i < l; i++) {","    p = affectedPaths[i];","","    if (!p.length) return true;","","    // Looping through logged paths","    for (j = 0, m = comparedPaths.length; j < m; j++) {","      c = comparedPaths[j];","","      if (!c || !c.length) return true;","","      // Looping through steps","      for (k = 0, n = c.length; k < n; k++) {","        s = c[k];","","        // If path is not relevant, we break","        // NOTE: the '!=' instead of '!==' is required here!","        if (s != p[k]) break;","","        // If we reached last item and we are relevant","        if (k + 1 === n || k + 1 === p.length) return true;","      }","    }","  }","","  return false;","}","","/**"," * Non-mutative version of the splice array method."," *"," * @param  {array}    array        - The array to splice."," * @param  {integer}  startIndex   - The start index."," * @param  {integer}  nb           - Number of elements to remove."," * @param  {...mixed} elements     - Elements to append after splicing."," * @return {array}                 - The spliced array."," */","","function splice(array, startIndex, nb) {","  for (var _len2 = arguments.length, elements = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {","    elements[_key2 - 3] = arguments[_key2];","  }","","  if (nb === undefined && arguments.length === 2) nb = array.length - startIndex;else if (nb === null || nb === undefined) nb = 0;else if (isNaN(+nb)) throw new Error('argument nb ' + nb + ' can not be parsed into a number!');","  nb = Math.max(0, nb);","","  // Solving startIndex","  if (_type2['default']['function'](startIndex)) startIndex = index(array, startIndex);","  if (_type2['default'].object(startIndex)) startIndex = index(array, function (e) {","    return compare(e, startIndex);","  });","","  // Positive index","  if (startIndex >= 0) return array.slice(0, startIndex).concat(elements).concat(array.slice(startIndex + nb));","","  // Negative index","  return array.slice(0, array.length + startIndex).concat(elements).concat(array.slice(array.length + startIndex + nb));","}","","/**"," * Function returning a unique incremental id each time it is called."," *"," * @return {integer} - The latest unique id."," */","var uniqid = (function () {","  var i = 0;","","  return function () {","    return i++;","  };","})();","","exports.uniqid = uniqid;"],"l":{"11":1,"15":4,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":1,"39":1,"41":1,"51":1,"52":0,"54":0,"55":0,"57":0,"66":1,"67":0,"69":0,"72":0,"74":0,"84":1,"85":1,"86":0,"88":0,"89":0,"106":1,"109":0,"121":0,"124":0,"126":0,"137":0,"138":0,"150":0,"152":0,"153":0,"157":1,"160":1,"162":1,"163":0,"175":1,"176":0,"177":0,"178":0,"189":1,"190":0,"192":0,"194":0,"195":0,"196":0,"197":0,"198":0,"200":0,"212":1,"213":0,"216":0,"217":0,"218":0,"220":0,"223":0,"224":0,"227":0,"231":0,"234":0,"237":0,"238":0,"240":0,"245":0,"246":0,"247":0,"248":0,"249":0,"255":0,"263":0,"266":0,"272":1,"275":1,"276":1,"285":1,"286":0,"287":0,"298":1,"299":0,"304":0,"306":0,"307":0,"308":0,"309":0,"310":0,"312":0,"316":0,"326":1,"327":0,"329":0,"331":0,"333":0,"336":0,"339":0,"341":0,"344":0,"345":0,"347":0,"349":0,"351":0,"361":1,"363":1,"366":1,"367":1,"383":1,"385":1,"386":0,"388":0,"390":0,"396":0,"397":0,"403":0,"404":0,"406":0,"407":0,"409":0,"410":0,"411":0,"412":0,"414":0,"415":0,"417":0,"419":0,"420":0,"422":0,"423":0,"424":0,"428":0,"439":1,"440":0,"442":0,"443":0,"444":0,"457":1,"458":0,"459":0,"462":0,"464":0,"469":0,"470":0,"472":0,"473":0,"474":0,"476":0,"481":0,"487":1,"490":1,"491":1,"501":1,"502":0,"505":0,"507":0,"508":0,"510":0,"511":0,"512":0,"513":0,"515":0,"519":0,"541":1,"542":0,"553":0,"554":0,"556":0,"559":0,"560":0,"562":0,"565":0,"566":0,"570":0,"573":0,"578":0,"591":1,"592":0,"593":0,"596":0,"597":0,"600":0,"601":0,"602":0,"606":0,"609":0,"617":1,"618":1,"620":1,"621":0,"625":1}},"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/watcher.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/dist/watcher.js","s":{"1":1,"2":1,"3":1,"4":1,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":3,"44":1,"45":0,"46":0,"47":1,"48":1,"49":0,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":1,"114":1},"b":{"1":[4,4],"2":[4,0],"3":[1,0],"4":[0,1],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,3],"11":[3,3],"12":[0,0],"13":[0,1],"14":[1,0],"15":[1,1],"16":[1,0],"17":[1,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":3,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":20},"end":{"line":14,"column":32}}},"2":{"name":"defineProperties","line":14,"loc":{"start":{"line":14,"column":34},"end":{"line":14,"column":75}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":358},"end":{"line":14,"column":406}}},"4":{"name":"get","line":16,"loc":{"start":{"line":16,"column":11},"end":{"line":16,"column":38}}},"5":{"name":"_interopRequireDefault","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}},"6":{"name":"_classCallCheck","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":48}}},"7":{"name":"_inherits","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":41}}},"8":{"name":"(anonymous_8)","line":46,"loc":{"start":{"line":46,"column":15},"end":{"line":46,"column":35}}},"9":{"name":"Watcher","line":49,"loc":{"start":{"line":49,"column":2},"end":{"line":49,"column":34}}},"10":{"name":"(anonymous_10)","line":68,"loc":{"start":{"line":68,"column":19},"end":{"line":68,"column":32}}},"11":{"name":"getWatchedPaths","line":87,"loc":{"start":{"line":87,"column":11},"end":{"line":87,"column":38}}},"12":{"name":"(anonymous_12)","line":90,"loc":{"start":{"line":90,"column":51},"end":{"line":90,"column":64}}},"13":{"name":"(anonymous_13)","line":99,"loc":{"start":{"line":99,"column":29},"end":{"line":99,"column":46}}},"14":{"name":"getCursors","line":125,"loc":{"start":{"line":125,"column":11},"end":{"line":125,"column":33}}},"15":{"name":"(anonymous_15)","line":130,"loc":{"start":{"line":130,"column":40},"end":{"line":130,"column":53}}},"16":{"name":"refresh","line":147,"loc":{"start":{"line":147,"column":11},"end":{"line":147,"column":37}}},"17":{"name":"release","line":166,"loc":{"start":{"line":166,"column":11},"end":{"line":166,"column":30}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":12,"column":3}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":566}},"3":{"start":{"line":14,"column":34},"end":{"line":14,"column":350}},"4":{"start":{"line":14,"column":77},"end":{"line":14,"column":348}},"5":{"start":{"line":14,"column":118},"end":{"line":14,"column":144}},"6":{"start":{"line":14,"column":145},"end":{"line":14,"column":200}},"7":{"start":{"line":14,"column":201},"end":{"line":14,"column":232}},"8":{"start":{"line":14,"column":233},"end":{"line":14,"column":287}},"9":{"start":{"line":14,"column":260},"end":{"line":14,"column":287}},"10":{"start":{"line":14,"column":288},"end":{"line":14,"column":346}},"11":{"start":{"line":14,"column":351},"end":{"line":14,"column":560}},"12":{"start":{"line":14,"column":408},"end":{"line":14,"column":476}},"13":{"start":{"line":14,"column":424},"end":{"line":14,"column":476}},"14":{"start":{"line":14,"column":477},"end":{"line":14,"column":537}},"15":{"start":{"line":14,"column":494},"end":{"line":14,"column":537}},"16":{"start":{"line":14,"column":538},"end":{"line":14,"column":557}},"17":{"start":{"line":16,"column":0},"end":{"line":16,"column":658}},"18":{"start":{"line":16,"column":40},"end":{"line":16,"column":58}},"19":{"start":{"line":16,"column":59},"end":{"line":16,"column":655}},"20":{"start":{"line":16,"column":70},"end":{"line":16,"column":655}},"21":{"start":{"line":16,"column":87},"end":{"line":16,"column":135}},"22":{"start":{"line":16,"column":136},"end":{"line":16,"column":151}},"23":{"start":{"line":16,"column":152},"end":{"line":16,"column":201}},"24":{"start":{"line":16,"column":173},"end":{"line":16,"column":201}},"25":{"start":{"line":16,"column":202},"end":{"line":16,"column":263}},"26":{"start":{"line":16,"column":264},"end":{"line":16,"column":653}},"27":{"start":{"line":16,"column":290},"end":{"line":16,"column":333}},"28":{"start":{"line":16,"column":334},"end":{"line":16,"column":492}},"29":{"start":{"line":16,"column":357},"end":{"line":16,"column":374}},"30":{"start":{"line":16,"column":384},"end":{"line":16,"column":396}},"31":{"start":{"line":16,"column":397},"end":{"line":16,"column":412}},"32":{"start":{"line":16,"column":413},"end":{"line":16,"column":428}},"33":{"start":{"line":16,"column":429},"end":{"line":16,"column":443}},"34":{"start":{"line":16,"column":444},"end":{"line":16,"column":470}},"35":{"start":{"line":16,"column":471},"end":{"line":16,"column":490}},"36":{"start":{"line":16,"column":500},"end":{"line":16,"column":653}},"37":{"start":{"line":16,"column":523},"end":{"line":16,"column":541}},"38":{"start":{"line":16,"column":551},"end":{"line":16,"column":573}},"39":{"start":{"line":16,"column":574},"end":{"line":16,"column":621}},"40":{"start":{"line":16,"column":602},"end":{"line":16,"column":619}},"41":{"start":{"line":16,"column":622},"end":{"line":16,"column":651}},"42":{"start":{"line":18,"column":0},"end":{"line":18,"column":97}},"43":{"start":{"line":18,"column":39},"end":{"line":18,"column":95}},"44":{"start":{"line":20,"column":0},"end":{"line":20,"column":153}},"45":{"start":{"line":20,"column":50},"end":{"line":20,"column":151}},"46":{"start":{"line":20,"column":92},"end":{"line":20,"column":149}},"47":{"start":{"line":22,"column":0},"end":{"line":22,"column":494}},"48":{"start":{"line":22,"column":43},"end":{"line":22,"column":208}},"49":{"start":{"line":22,"column":106},"end":{"line":22,"column":206}},"50":{"start":{"line":22,"column":209},"end":{"line":22,"column":373}},"51":{"start":{"line":22,"column":374},"end":{"line":22,"column":492}},"52":{"start":{"line":22,"column":390},"end":{"line":22,"column":492}},"53":{"start":{"line":24,"column":0},"end":{"line":24,"column":32}},"54":{"start":{"line":26,"column":0},"end":{"line":26,"column":47}},"55":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}},"56":{"start":{"line":30,"column":0},"end":{"line":30,"column":47}},"57":{"start":{"line":32,"column":0},"end":{"line":32,"column":30}},"58":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}},"59":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}},"60":{"start":{"line":46,"column":0},"end":{"line":175,"column":24}},"61":{"start":{"line":47,"column":2},"end":{"line":47,"column":31}},"62":{"start":{"line":49,"column":2},"end":{"line":77,"column":3}},"63":{"start":{"line":50,"column":4},"end":{"line":50,"column":21}},"64":{"start":{"line":52,"column":4},"end":{"line":52,"column":35}},"65":{"start":{"line":54,"column":4},"end":{"line":54,"column":83}},"66":{"start":{"line":57,"column":4},"end":{"line":57,"column":21}},"67":{"start":{"line":58,"column":4},"end":{"line":58,"column":24}},"68":{"start":{"line":60,"column":4},"end":{"line":62,"column":6}},"69":{"start":{"line":65,"column":4},"end":{"line":65,"column":26}},"70":{"start":{"line":68,"column":4},"end":{"line":74,"column":6}},"71":{"start":{"line":69,"column":6},"end":{"line":69,"column":37}},"72":{"start":{"line":69,"column":30},"end":{"line":69,"column":37}},"73":{"start":{"line":71,"column":6},"end":{"line":71,"column":49}},"74":{"start":{"line":73,"column":6},"end":{"line":73,"column":93}},"75":{"start":{"line":73,"column":65},"end":{"line":73,"column":93}},"76":{"start":{"line":76,"column":4},"end":{"line":76,"column":41}},"77":{"start":{"line":85,"column":2},"end":{"line":172,"column":6}},"78":{"start":{"line":88,"column":6},"end":{"line":88,"column":24}},"79":{"start":{"line":90,"column":6},"end":{"line":97,"column":9}},"80":{"start":{"line":91,"column":8},"end":{"line":91,"column":34}},"81":{"start":{"line":94,"column":8},"end":{"line":94,"column":66}},"82":{"start":{"line":94,"column":46},"end":{"line":94,"column":66}},"83":{"start":{"line":96,"column":8},"end":{"line":96,"column":33}},"84":{"start":{"line":99,"column":6},"end":{"line":115,"column":13}},"85":{"start":{"line":102,"column":8},"end":{"line":102,"column":25}},"86":{"start":{"line":105,"column":8},"end":{"line":105,"column":103}},"87":{"start":{"line":105,"column":46},"end":{"line":105,"column":103}},"88":{"start":{"line":107,"column":8},"end":{"line":107,"column":26}},"89":{"start":{"line":107,"column":16},"end":{"line":107,"column":26}},"90":{"start":{"line":110,"column":8},"end":{"line":110,"column":79}},"91":{"start":{"line":112,"column":8},"end":{"line":112,"column":116}},"92":{"start":{"line":112,"column":24},"end":{"line":112,"column":116}},"93":{"start":{"line":114,"column":8},"end":{"line":114,"column":30}},"94":{"start":{"line":126,"column":6},"end":{"line":126,"column":24}},"95":{"start":{"line":128,"column":6},"end":{"line":128,"column":23}},"96":{"start":{"line":130,"column":6},"end":{"line":134,"column":9}},"97":{"start":{"line":131,"column":8},"end":{"line":131,"column":37}},"98":{"start":{"line":133,"column":8},"end":{"line":133,"column":110}},"99":{"start":{"line":133,"column":49},"end":{"line":133,"column":67}},"100":{"start":{"line":133,"column":72},"end":{"line":133,"column":110}},"101":{"start":{"line":136,"column":6},"end":{"line":136,"column":21}},"102":{"start":{"line":149,"column":6},"end":{"line":149,"column":140}},"103":{"start":{"line":149,"column":54},"end":{"line":149,"column":140}},"104":{"start":{"line":151,"column":6},"end":{"line":151,"column":29}},"105":{"start":{"line":154,"column":6},"end":{"line":154,"column":26}},"106":{"start":{"line":156,"column":6},"end":{"line":158,"column":7}},"107":{"start":{"line":157,"column":8},"end":{"line":157,"column":97}},"108":{"start":{"line":158,"column":7},"end":{"line":158,"column":64}},"109":{"start":{"line":168,"column":6},"end":{"line":168,"column":44}},"110":{"start":{"line":169,"column":6},"end":{"line":169,"column":31}},"111":{"start":{"line":170,"column":6},"end":{"line":170,"column":18}},"112":{"start":{"line":174,"column":2},"end":{"line":174,"column":17}},"113":{"start":{"line":177,"column":0},"end":{"line":177,"column":29}},"114":{"start":{"line":178,"column":0},"end":{"line":178,"column":36}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":169},"end":{"line":14,"column":190}},{"start":{"line":14,"column":194},"end":{"line":14,"column":199}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":233},"end":{"line":14,"column":233}},{"start":{"line":14,"column":233},"end":{"line":14,"column":233}}]},"3":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":408},"end":{"line":14,"column":408}},{"start":{"line":14,"column":408},"end":{"line":14,"column":408}}]},"4":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":477},"end":{"line":14,"column":477}},{"start":{"line":14,"column":477},"end":{"line":14,"column":477}}]},"5":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":152},"end":{"line":16,"column":152}},{"start":{"line":16,"column":152},"end":{"line":16,"column":152}}]},"6":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":264},"end":{"line":16,"column":264}},{"start":{"line":16,"column":264},"end":{"line":16,"column":264}}]},"7":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":334},"end":{"line":16,"column":334}},{"start":{"line":16,"column":334},"end":{"line":16,"column":334}}]},"8":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":500},"end":{"line":16,"column":500}},{"start":{"line":16,"column":500},"end":{"line":16,"column":500}}]},"9":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":574},"end":{"line":16,"column":574}},{"start":{"line":16,"column":574},"end":{"line":16,"column":574}}]},"10":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":70},"end":{"line":18,"column":73}},{"start":{"line":18,"column":76},"end":{"line":18,"column":94}}]},"11":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":67}}]},"12":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":50},"end":{"line":20,"column":50}},{"start":{"line":20,"column":50},"end":{"line":20,"column":50}}]},"13":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":43},"end":{"line":22,"column":43}},{"start":{"line":22,"column":43},"end":{"line":22,"column":43}}]},"14":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":47},"end":{"line":22,"column":79}},{"start":{"line":22,"column":83},"end":{"line":22,"column":102}}]},"15":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":244},"end":{"line":22,"column":254}},{"start":{"line":22,"column":258},"end":{"line":22,"column":278}}]},"16":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":374},"end":{"line":22,"column":374}},{"start":{"line":22,"column":374},"end":{"line":22,"column":374}}]},"17":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":414},"end":{"line":22,"column":457}},{"start":{"line":22,"column":460},"end":{"line":22,"column":491}}]},"18":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"19":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":6}},{"start":{"line":73,"column":6},"end":{"line":73,"column":6}}]},"20":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":8}},{"start":{"line":94,"column":8},"end":{"line":94,"column":8}}]},"21":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"22":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"23":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":8}},{"start":{"line":112,"column":8},"end":{"line":112,"column":8}}]},"24":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":133,"column":8}},{"start":{"line":133,"column":8},"end":{"line":133,"column":8}}]},"25":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]},"26":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":68},"end":{"line":157,"column":83}},{"start":{"line":157,"column":86},"end":{"line":157,"column":96}}]}},"code":["/**"," * Baobab Watchers"," * ================"," *"," * Abstraction used to listen and retrieve data from multiple parts of a"," * Baobab tree at once."," */","'use strict';","","Object.defineProperty(exports, '__esModule', {","  value: true","});","","var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();","","var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }","","function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }","","var _emmett = require('emmett');","","var _emmett2 = _interopRequireDefault(_emmett);","","var _cursor = require('./cursor');","","var _cursor2 = _interopRequireDefault(_cursor);","","var _type = require('./type');","","var _type2 = _interopRequireDefault(_type);","","var _helpers = require('./helpers');","","/**"," * Watcher class."," *"," * @constructor"," * @param {Baobab} tree     - The watched tree."," * @param {object} mapping  - A mapping of the paths to watch in the tree."," */","","var Watcher = (function (_Emitter) {","  _inherits(Watcher, _Emitter);","","  function Watcher(tree, mapping) {","    var _this = this;","","    _classCallCheck(this, Watcher);","","    _get(Object.getPrototypeOf(Watcher.prototype), 'constructor', this).call(this);","","    // Properties","    this.tree = tree;","    this.mapping = null;","","    this.state = {","      killed: false","    };","","    // Initializing","    this.refresh(mapping);","","    // Listening","    this.handler = function (e) {","      if (_this.state.killed) return;","","      var watchedPaths = _this.getWatchedPaths();","","      if ((0, _helpers.solveUpdate)(e.data.paths, watchedPaths)) return _this.emit('update');","    };","","    this.tree.on('update', this.handler);","  }","","  /**","   * Method used to get the current watched paths.","   *","   * @return {array} - The array of watched paths.","   */","","  _createClass(Watcher, [{","    key: 'getWatchedPaths',","    value: function getWatchedPaths() {","      var _this2 = this;","","      var rawPaths = Object.keys(this.mapping).map(function (k) {","        var v = _this2.mapping[k];","","        // Watcher mappings can accept a cursor","        if (v instanceof _cursor2['default']) return v.solvedPath;","","        return _this2.mapping[k];","      });","","      return rawPaths.reduce(function (cp, p) {","","        // Handling path polymorphisms","        p = [].concat(p);","","        // Dynamic path?","        if (_type2['default'].dynamicPath(p)) p = (0, _helpers.getIn)(_this2.tree._data, p).solvedPath;","","        if (!p) return cp;","","        // Facet path?","        var monkeyPath = _type2['default'].monkeyPath(_this2.tree._monkeys, p);","","        if (monkeyPath) return cp.concat((0, _helpers.getIn)(_this2.tree._monkeys, monkeyPath).data.relatedPaths());","","        return cp.concat([p]);","      }, []);","    }","","    /**","     * Method used to return a map of the watcher's cursors.","     *","     * @return {object} - TMap of relevant cursors.","     */","  }, {","    key: 'getCursors',","    value: function getCursors() {","      var _this3 = this;","","      var cursors = {};","","      Object.keys(this.mapping).forEach(function (k) {","        var path = _this3.mapping[k];","","        if (path instanceof _cursor2['default']) cursors[k] = path;else cursors[k] = _this3.tree.select(path);","      });","","      return cursors;","    }","","    /**","     * Method used to refresh the watcher's mapping.","     *","     * @param  {object}  mapping  - The new mapping to apply.","     * @return {Watcher}          - Itself for chaining purposes.","     */","  }, {","    key: 'refresh',","    value: function refresh(mapping) {","","      if (!_type2['default'].watcherMapping(mapping)) throw (0, _helpers.makeError)('Baobab.watch: invalid mapping.', { mapping: mapping });","","      this.mapping = mapping;","","      // Creating the get method","      var projection = {};","","      for (var k in mapping) {","        projection[k] = mapping[k] instanceof _cursor2['default'] ? mapping[k].path : mapping[k];","      }this.get = this.tree.project.bind(this.tree, projection);","    }","","    /**","     * Methods releasing the watcher from memory.","     */","  }, {","    key: 'release',","    value: function release() {","","      this.tree.off('update', this.handler);","      this.state.killed = true;","      this.kill();","    }","  }]);","","  return Watcher;","})(_emmett2['default']);","","exports['default'] = Watcher;","module.exports = exports['default'];"],"l":{"10":1,"14":4,"16":1,"18":3,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":1,"36":1,"46":1,"47":1,"49":1,"50":0,"52":0,"54":0,"57":0,"58":0,"60":0,"65":0,"68":0,"69":0,"71":0,"73":0,"76":0,"85":1,"88":0,"90":0,"91":0,"94":0,"96":0,"99":0,"102":0,"105":0,"107":0,"110":0,"112":0,"114":0,"126":0,"128":0,"130":0,"131":0,"133":0,"136":0,"149":0,"151":0,"154":0,"156":0,"157":0,"158":0,"168":0,"169":0,"170":0,"174":1,"177":1,"178":1}},"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/eslint.config.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/eslint.config.js","s":{"1":2},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}}},"branchMap":{},"code":["module.exports = {","  extends: [","    '@yomguithereal/eslint-config/es6'","  ].map(require.resolve),","  rules: {","    'no-loop-func': 0","  }","};",""],"l":{"1":2}},"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/scripts/banner.js":{"path":"/home/travis/build/npmtest/node-npmtest-baobab/node_modules/baobab/scripts/banner.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":5,"column":0},"end":{"line":6,"column":72}},"3":{"start":{"line":8,"column":0},"end":{"line":9,"column":54}},"4":{"start":{"line":11,"column":0},"end":{"line":14,"column":2}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":52}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":58}}},"branchMap":{},"code":["var banner = require('add-banner'),","    path = require('path'),","    fs = require('fs');","","var builtPath = path.join(__dirname, '..', 'build', 'baobab.js'),","    minifiedPath = path.join(__dirname, '..', 'build', 'baobab.min.js');","","var built = fs.readFileSync(builtPath, 'utf-8'),","    minified = fs.readFileSync(minifiedPath, 'utf-8');","","var options = {","  banner: path.join(__dirname, 'banner.tmpl'),","  name: 'Baobab'","};","","fs.writeFileSync(builtPath, banner(built, options));","fs.writeFileSync(minifiedPath, banner(minified, options));",""],"l":{"1":2,"5":0,"8":0,"11":0,"16":0,"17":0}}}